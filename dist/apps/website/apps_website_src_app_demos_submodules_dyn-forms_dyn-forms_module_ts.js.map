{"version":3,"file":"apps_website_src_app_demos_submodules_dyn-forms_dyn-forms_module_ts.js","mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sEAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjFqD;AACS;AACvD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6DAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA,wBAAwB,SAAS;AACjC;AACA,qBAAqB,0EAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvEO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;;;;;;;AACA,MAAMP,cAAN,CAAqB;;AAErBA,cAAc,CAAChS,IAAf;AAAA,mBAA2GgS,cAA3G;AAAA;;AACAA,cAAc,CAACrJ,IAAf,kBADiGzU,+DACjG;AAAA,QAA+F8d,cAA/F;AAAA;AAAA;AAAA;;AACA;AAAA,qDAFiG9d,+DAEjG,CAA2F8d,cAA3F,EAAuH,CAAC;AAC5G9R,IAAAA,IAAI,EAAE1L,oDADsG;AAE5GqK,IAAAA,IAAI,EAAE,CAAC;AACC0G,MAAAA,QAAQ,EAAE,wDADX;AAECgU,MAAAA,IAAI,EAAE;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","sources":["./apps/website/src/app/demos/submodules/dyn-forms/components/simple/simple.component.ts","./apps/website/src/app/demos/submodules/dyn-forms/components/simple/simple.component.html","./apps/website/src/app/demos/submodules/dyn-forms/components/simple/simple.form.ts","./apps/website/src/app/demos/submodules/dyn-forms/components/stepper/step1/step1.component.ts","./apps/website/src/app/demos/submodules/dyn-forms/components/stepper/step1/step1.component.html","./apps/website/src/app/demos/submodules/dyn-forms/components/stepper/step2/step2.component.ts","./apps/website/src/app/demos/submodules/dyn-forms/components/stepper/step2/step2.component.html","./apps/website/src/app/demos/submodules/dyn-forms/components/stepper/step3/step3.component.ts","./apps/website/src/app/demos/submodules/dyn-forms/components/stepper/step3/step3.component.html","./apps/website/src/app/demos/submodules/dyn-forms/components/stepper/stepper.component.ts","./apps/website/src/app/demos/submodules/dyn-forms/components/stepper/stepper.component.html","./apps/website/src/app/demos/submodules/dyn-forms/components/stepper/summary/summary.component.ts","./apps/website/src/app/demos/submodules/dyn-forms/components/stepper/summary/summary.component.html","./apps/website/src/app/demos/submodules/dyn-forms/constants/dyn-forms.links.ts","./apps/website/src/app/demos/submodules/dyn-forms/dyn-forms.module.ts","./node_modules/@myndpm/dyn-forms/fesm2015/myndpm-dyn-forms-core.js","./node_modules/@myndpm/dyn-forms/fesm2015/myndpm-dyn-forms-logger.js","./node_modules/@myndpm/dyn-forms/fesm2015/myndpm-dyn-forms-ui-material.js","./node_modules/@myndpm/dyn-forms/fesm2015/myndpm-dyn-forms.js","./node_modules/fast-deep-equal/index.js","./node_modules/is-callable/index.js","./node_modules/rxjs/_esm2015/internal/operators/delay.js","./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js","./node_modules/rxjs/_esm2015/internal/util/isDate.js","./node_modules/@angular/material/fesm2020/card.mjs","./node_modules/@angular/material/fesm2020/checkbox.mjs","./node_modules/@angular/material/fesm2020/datepicker.mjs","./node_modules/@angular/material/fesm2020/dialog.mjs","./node_modules/@angular/material/fesm2020/radio.mjs"],"sourcesContent":["import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { startWith } from 'rxjs/operators';\r\nimport { actions, badges } from '../../constants/dyn-forms.links';\r\nimport { simpleForm } from './simple.form';\r\n\r\n@Component({\r\n  selector: 'web-form-simple',\r\n  templateUrl: './simple.component.html',\r\n  styleUrls: ['./simple.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SimpleComponent implements AfterViewInit {\r\n  // ref links\r\n  actions = actions;\r\n  badges = badges;\r\n\r\n  // reactive parameters of the billing CARD\r\n  profileCard = new BehaviorSubject({\r\n    title: 'Billing Address',\r\n    subtitle: 'Please fill the required fields',\r\n  });\r\n\r\n  // dyn-form inputs\r\n  config = simpleForm(this.profileCard);\r\n  form = new FormGroup({});\r\n\r\n  ngAfterViewInit(): void {\r\n    // logs each change in the console just to demo\r\n    this.form.valueChanges.subscribe(console.log);\r\n\r\n    // simple example of how we can trigger changes into the params\r\n    const group = this.form.get('billing') as FormGroup;\r\n    group.statusChanges?.pipe(startWith(group.status)).subscribe((status) => {\r\n      this.profileCard.next({\r\n        title: 'Billing Address',\r\n        subtitle:\r\n          status === 'INVALID'\r\n            ? 'Please fill your Personal Information'\r\n            : 'Billing information complete',\r\n      });\r\n    });\r\n  }\r\n}\r\n","<web-section>\r\n  <web-section-badges [badges]=\"badges\"></web-section-badges>\r\n  <web-section-actions [actions]=\"actions\"></web-section-actions>\r\n\r\n  <fieldset>\r\n    <h3>Simple Dynamic Form</h3>\r\n\r\n    <form [formGroup]=\"form\">\r\n      <dyn-form [config]=\"config\" [form]=\"form\"></dyn-form>\r\n    </form>\r\n  </fieldset>\r\n</web-section>\r\n","import { DynFormConfig } from '@myndpm/dyn-forms';\r\nimport { DynControlParams } from '@myndpm/dyn-forms/core';\r\nimport { createMatConfig } from '@myndpm/dyn-forms/ui-material';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport function simpleForm(\r\n  obsParams: Observable<DynControlParams>\r\n): DynFormConfig<'edit' | 'display'> {\r\n  // typed mode\r\n  return {\r\n    modes: {\r\n      edit: { params: { readonly: false } },\r\n      display: { params: { readonly: true } },\r\n    },\r\n    controls: [\r\n      createMatConfig('CARD', {\r\n        name: 'billing',\r\n        cssClass: 'row',\r\n        params: obsParams,\r\n        controls: [\r\n          createMatConfig('INPUT', {\r\n            name: 'firstName',\r\n            cssClass: 'col-sm-6 col-md-4',\r\n            validators: ['required'],\r\n            params: { label: 'First Name *' },\r\n          }),\r\n          createMatConfig('INPUT', {\r\n            name: 'lastName',\r\n            cssClass: 'col-sm-6 col-md-4',\r\n            validators: ['required'],\r\n            params: { label: 'Last Name *' },\r\n          }),\r\n          createMatConfig('DIVIDER', {\r\n            params: { invisible: true },\r\n          }),\r\n          createMatConfig('INPUT', {\r\n            name: 'address1',\r\n            cssClass: 'col-12 col-md-8',\r\n            validators: { required: null, minLength: 4 },\r\n            params: { label: 'Address Line 1 *' },\r\n          }),\r\n          createMatConfig('INPUT', {\r\n            name: 'address2',\r\n            cssClass: 'col-12 col-md-8',\r\n            params: { label: 'Address Line 2' },\r\n          }),\r\n          createMatConfig('DIVIDER', {\r\n            params: { invisible: true },\r\n          }),\r\n          createMatConfig('SELECT', {\r\n            name: 'country',\r\n            cssClass: 'col-sm-6 col-md-4',\r\n            default: 'CO',\r\n            validators: ['required'],\r\n            params: {\r\n              label: 'Country',\r\n              options: [\r\n                { value: '- Choose one -', key: null },\r\n                { value: 'Colombia', key: 'CO' },\r\n                { value: 'United States', key: 'US' },\r\n                { value: 'China', key: 'CN' },\r\n                { value: 'Russia', key: 'RU' },\r\n                { value: 'Other', key: 'XX' },\r\n              ],\r\n            },\r\n            modes: {\r\n              display: {\r\n                control: 'INPUT',\r\n                paramFns: { getValue: 'getOptionText' },\r\n              },\r\n            },\r\n          }),\r\n          createMatConfig('INPUT', {\r\n            name: 'zipCode',\r\n            cssClass: 'col-sm-6 col-md-4',\r\n            match: [\r\n              {\r\n                matchers: ['DISABLE'],\r\n                operator: 'AND',\r\n                when: [\r\n                  { path: 'firstName', value: 'Mateo' },\r\n                  { path: 'country', value: 'CO' },\r\n                ],\r\n              },\r\n              {\r\n                matchers: ['HIDE'],\r\n                when: [{ path: 'account', value: 'GUEST' }],\r\n              },\r\n            ],\r\n            params: { label: 'Postal Code' },\r\n          }),\r\n        ],\r\n      }),\r\n      createMatConfig('RADIO', {\r\n        name: 'account',\r\n        params: {\r\n          options: [\r\n            { value: 'Create Account', key: 'CREATE' },\r\n            { value: 'Checkout as a Guest', key: 'GUEST' },\r\n          ],\r\n        },\r\n        modes: {\r\n          display: {\r\n            control: 'INPUT',\r\n            paramFns: { getValue: 'getOptionText' },\r\n          },\r\n        },\r\n      }),\r\n      createMatConfig('ARRAY', {\r\n        name: 'products',\r\n        cssClass: 'row',\r\n        params: {\r\n          title: 'Products',\r\n          subtitle: 'Items to checkout',\r\n          initItem: true,\r\n        },\r\n        controls: [\r\n          createMatConfig('INPUT', {\r\n            name: 'product',\r\n            cssClass: 'col-6 col-md-8',\r\n            validators: ['required'],\r\n            params: { label: 'Product Name *' },\r\n          }),\r\n          createMatConfig('INPUT', {\r\n            name: 'quantity',\r\n            cssClass: 'col-5 col-md-3',\r\n            validators: ['required', ['min', 1]],\r\n            params: { label: 'Quantity *', type: 'number' },\r\n          }),\r\n        ],\r\n      }),\r\n    ],\r\n  };\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'web-form-stepper-step1',\r\n  templateUrl: './step1.component.html',\r\n  styleUrls: ['./step1.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class Step1Component implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>step1 works!</p>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'web-form-stepper-step2',\r\n  templateUrl: './step2.component.html',\r\n  styleUrls: ['./step2.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class Step2Component implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>step2 works!</p>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'web-form-stepper-step3',\r\n  templateUrl: './step3.component.html',\r\n  styleUrls: ['./step3.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class Step3Component implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>step3 works!</p>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'web-form-stepper',\r\n  templateUrl: './stepper.component.html',\r\n  styleUrls: ['./stepper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class StepperComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>stepper works!</p>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'web-form-stepper-summary',\r\n  templateUrl: './summary.component.html',\r\n  styleUrls: ['./summary.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SummaryComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>summary works!</p>\r\n","import { SectionAction, SectionBadge } from '../../../../shared';\r\n\r\nexport const badges: SectionBadge[] = [\r\n  {\r\n    link: 'https://github.com/myndpm/open-source/tree/master/libs/forms',\r\n    img: 'https://img.shields.io/badge/%40myndpm-dyn--forms-brightgreen',\r\n    alt: 'Package',\r\n  },\r\n  {\r\n    link: 'https://www.npmjs.com/package/@myndpm/dyn-forms',\r\n    img: 'https://badge.fury.io/js/%40myndpm%2Fdyn-forms.svg',\r\n    alt: 'NPM Badge',\r\n  },\r\n  {\r\n    link: 'https://npmcharts.com/compare/@myndpm/dyn-forms?minimal=true',\r\n    img: 'https://img.shields.io/npm/dm/@myndpm/dyn-forms.svg?style=flat',\r\n    alt: 'NPM Downloads',\r\n  },\r\n];\r\n\r\nexport const actions: SectionAction[] = [\r\n  {\r\n    link:\r\n      'https://stackblitz.com/edit/myndpm-dyn-forms?file=src/app/simple-form/simple.form.ts',\r\n    ionicon: 'logo-angular',\r\n    tooltip: 'Stackblitz',\r\n  },\r\n  {\r\n    link:\r\n      'https://github.com/myndpm/open-source/blob/master/apps/demos/src/app/demos/submodules/dyn-forms/components/simple/simple.form.ts',\r\n    icon: 'code',\r\n    tooltip: 'See source code',\r\n  },\r\n  {\r\n    link: 'https://prezi.com/view/4Ok1bgCWvf0g26FMVwfx/',\r\n    ionicon: 'easel-outline',\r\n    tooltip: 'Prezi',\r\n  },\r\n  {\r\n    link:\r\n      'https://matheo.medium.com/a-new-approach-to-have-dynamic-forms-in-angular-683a2c417661',\r\n    ionicon: 'logo-medium',\r\n    tooltip: 'Medium',\r\n  },\r\n];\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DynFormsMaterialModule } from '@myndpm/dyn-forms/ui-material';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { SimpleComponent } from './components/simple/simple.component';\r\nimport { Step1Component } from './components/stepper/step1/step1.component';\r\nimport { Step2Component } from './components/stepper/step2/step2.component';\r\nimport { Step3Component } from './components/stepper/step3/step3.component';\r\nimport { StepperComponent } from './components/stepper/stepper.component';\r\nimport { SummaryComponent } from './components/stepper/summary/summary.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    redirectTo: 'simple-form',\r\n  },\r\n  {\r\n    path: 'simple-form',\r\n    component: SimpleComponent,\r\n  },\r\n  {\r\n    path: 'stepper-form',\r\n    component: StepperComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'step-1',\r\n      },\r\n      {\r\n        path: 'step-1',\r\n        component: Step1Component,\r\n      },\r\n      {\r\n        path: 'step-2',\r\n        component: Step2Component,\r\n      },\r\n      {\r\n        path: 'step-3',\r\n        component: Step3Component,\r\n      },\r\n      {\r\n        path: 'summary',\r\n        component: SummaryComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    DynFormsMaterialModule.forFeature(),\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    SimpleComponent,\r\n    StepperComponent,\r\n    Step1Component,\r\n    Step2Component,\r\n    Step3Component,\r\n    SummaryComponent,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        appearance: 'outline',\r\n        hideRequiredMarker: true,\r\n        floatLabel: 'auto',\r\n      },\r\n    },\r\n  ],\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n})\r\nexport class DemoFormsModule {}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Optional, SkipSelf, Directive, ChangeDetectorRef, SimpleChange } from '@angular/core';\nimport isCallable from 'is-callable';\nimport * as i4 from 'rxjs';\nimport { of, Subject, BehaviorSubject, combineLatest, merge as merge$1, isObservable } from 'rxjs';\nimport { first, switchMap, startWith, mapTo, map, distinctUntilChanged, shareReplay, takeUntil, debounceTime, withLatestFrom, scan, filter } from 'rxjs/operators';\nimport { Validators, FormControl, FormArray, FormGroup } from '@angular/forms';\nimport * as i1 from '@myndpm/dyn-forms/logger';\nimport { DynLogger, DYN_LOG_LEVEL, DynLogLevel, DynLogDriver } from '@myndpm/dyn-forms/logger';\nimport deepEqual from 'fast-deep-equal';\n\n/**\n * type guard\n */\nfunction isMatchCondition(value) {\n    return !Array.isArray(value) && typeof value === 'object' && value.path;\n}\n\n// Form Control Type\nvar DynInstanceType;\n(function (DynInstanceType) {\n    DynInstanceType[\"Group\"] = \"GROUP\";\n    DynInstanceType[\"Array\"] = \"ARRAY\";\n    DynInstanceType[\"Control\"] = \"CONTROL\";\n    DynInstanceType[\"Container\"] = \"CONTAINER\";\n})(DynInstanceType || (DynInstanceType = {}));\n\n/**\n * core token gathering the controls in the system\n */\nconst DYN_CONTROLS_TOKEN = new InjectionToken('@myndpm/dyn-forms/dyn-controls');\n/**\n * core tokens for named functions\n */\nconst DYN_VALIDATORS_TOKEN = new InjectionToken('@myndpm/dyn-forms/validators');\nconst DYN_ASYNCVALIDATORS_TOKEN = new InjectionToken('@myndpm/dyn-forms/async-validators');\nconst DYN_MATCHERS_TOKEN = new InjectionToken('@myndpm/dyn-forms/matchers');\nconst DYN_MATCHER_CONDITIONS_TOKEN = new InjectionToken('@myndpm/dyn-forms/matcher-conditions');\nconst DYN_FUNCTIONS_TOKEN = new InjectionToken('@myndpm/dyn-forms/functions');\nconst DYN_ERROR_HANDLERS_TOKEN = new InjectionToken('@myndpm/dyn-forms/error-handlers');\n/**\n * internal tokens managed by the dyn-form component\n */\nconst DYN_MODE = new InjectionToken('@myndpm/dyn-forms/internal/mode');\nconst DYN_MODE_DEFAULTS = new InjectionToken('@myndpm/dyn-forms/internal/mode-defaults');\n\n// customized yeikos/js.merge\nfunction merge(...items) {\n    return _merge(items[0] === true, false, items);\n}\nfunction recursive(...items) {\n    return _merge(items[0] === true, true, items);\n}\nfunction clone(input) {\n    if (Array.isArray(input)) {\n        return input.map(clone);\n    }\n    else if (isPlainObject(input)) {\n        if (input instanceof Map || input instanceof Set) {\n            // treated as an abstract data type\n            return input;\n        }\n        const output = {};\n        for (let index in input) {\n            output[index] = clone(input[index]);\n        }\n        return output;\n    }\n    else {\n        return input;\n    }\n}\nfunction isPlainObject(input) {\n    return input && typeof input === 'object' && !Array.isArray(input);\n}\nfunction _recursiveMerge(base, extend) {\n    if (!isPlainObject(base))\n        return extend;\n    for (const key in extend) {\n        if (['__proto__', 'constructor', 'prototype', 'toString', 'hasOwnProperty'].includes(key)) {\n            continue;\n        }\n        base[key] = (isPlainObject(base[key]) && isPlainObject(extend[key]))\n            ? _recursiveMerge(base[key], extend[key])\n            : extend[key];\n    }\n    return base;\n}\nfunction _merge(isClone, isRecursive, items) {\n    let result;\n    if (isClone || !isPlainObject(result = items.shift())) {\n        result = {};\n    }\n    for (let index = 0; index < items.length; ++index) {\n        const item = items[index];\n        if (!isPlainObject(item)) {\n            continue;\n        }\n        for (const key in item) {\n            if (['__proto__', 'constructor', 'prototype', 'toString', 'hasOwnProperty'].includes(key)) {\n                continue;\n            }\n            const value = isClone ? clone(item[key]) : item[key];\n            result[key] = isRecursive ? _recursiveMerge(result[key], value) : value;\n        }\n    }\n    return result;\n}\n\n/**\n * Mapper to add the incoming priority\n */\nfunction mapPriority(priority) {\n    // TODO verify with real use-cases for the priority order\n    return (item) => { var _a; return (Object.assign(Object.assign({}, item), { priority: (_a = priority !== null && priority !== void 0 ? priority : item.priority) !== null && _a !== void 0 ? _a : 0 })); };\n}\n/**\n * Default Angular validators\n */\nconst defaultValidators = [\n    { id: 'required', fn: () => Validators.required },\n    { id: 'requiredTrue', fn: () => Validators.requiredTrue },\n    { id: 'pattern', fn: (node, pattern) => Validators.pattern(pattern) },\n    { id: 'minLength', fn: (node, minLength) => Validators.minLength(minLength) },\n    { id: 'maxLength', fn: (node, minLength) => Validators.maxLength(minLength) },\n    { id: 'email', fn: () => Validators.email },\n    { id: 'min', fn: (node, min) => Validators.min(min) },\n    { id: 'max', fn: (node, max) => Validators.max(max) },\n].map(mapPriority());\n/**\n * Default matchers\n */\nconst defaultAsyncValidators = [\n    {\n        id: 'RELATED',\n        fn: (node, config, validator = Validators.required) => {\n            return (control) => {\n                return node.root.loaded$.pipe(first(Boolean), switchMap(() => relatedConditionFn(config)(node)), map(hasMatch => hasMatch ? validator(control) : null), first());\n            };\n        }\n    },\n].map(mapPriority());\n/**\n * Default matchers\n */\nconst defaultMatchers = [\n    {\n        id: 'RELATED',\n        fn: () => {\n            return (node, hasMatch, firstTime) => {\n                if (!firstTime) {\n                    node.control.updateValueAndValidity();\n                }\n            };\n        }\n    },\n    {\n        id: 'VALIDATE',\n        fn: (error, validator = Validators.required) => {\n            return (node, hasMatch) => {\n                if (hasMatch) {\n                    if (validator(node.control)) {\n                        node.control.setErrors(error);\n                    }\n                    else {\n                        node.control.updateValueAndValidity();\n                    }\n                }\n                else {\n                    node.control.setErrors(null);\n                }\n            };\n        }\n    },\n    {\n        id: 'DISABLE',\n        fn: () => {\n            return (node, hasMatch) => {\n                hasMatch ? node.control.disable() : node.control.enable();\n            };\n        }\n    },\n    {\n        id: 'ENABLE',\n        fn: () => {\n            return (node, hasMatch) => {\n                hasMatch ? node.control.enable() : node.control.disable();\n            };\n        }\n    },\n    {\n        id: 'SHOW',\n        fn: () => {\n            return (node, hasMatch) => {\n                hasMatch ? node.visible() : node.hidden();\n            };\n        }\n    },\n    {\n        id: 'INVISIBLE',\n        fn: () => {\n            return (node, hasMatch) => {\n                hasMatch ? node.invisible() : node.visible();\n            };\n        }\n    },\n    {\n        id: 'HIDE',\n        fn: () => {\n            return (node, hasMatch) => {\n                hasMatch ? node.hidden() : node.visible();\n            };\n        }\n    },\n].map(mapPriority());\n/**\n * Default condition handler\n */\nconst defaultConditions = [\n    {\n        id: 'DEFAULT',\n        fn: relatedConditionFn,\n    },\n    {\n        id: 'MODE',\n        fn: (mode) => {\n            return (node) => {\n                return node.mode$.pipe(map(value => value === mode));\n            };\n        },\n    },\n].map(mapPriority());\n/**\n * Default error handler\n */\nconst defaultErrorHandlers = [\n    {\n        id: 'FORM',\n        fn: (messages) => {\n            return ({ control, path }) => {\n                if (!control.errors) {\n                    return null;\n                }\n                // match the control errors with the configured messages\n                let currentMatch = [];\n                const config = Object.keys(messages).reduce((result, key) => {\n                    const errorPath = key.split('.');\n                    if (pathEndsWith(path, errorPath) && errorPath.length > currentMatch.length) {\n                        currentMatch = errorPath;\n                        return messages[key];\n                    }\n                    return result;\n                }, null);\n                return config\n                    ? Object.keys(control.errors).reduce((result, error) => {\n                        return result\n                            ? result\n                            : typeof config === 'object'\n                                ? config[error] ? config[error] : result\n                                : config;\n                    }, null)\n                    : null;\n            };\n        }\n    },\n    {\n        id: 'CONTROL',\n        fn: (messages) => {\n            return ({ control }) => {\n                // match the control errors with the configured messages\n                return control.errors\n                    ? Object.keys(control.errors).reduce((result, error) => {\n                        return result\n                            ? result\n                            : typeof messages === 'object'\n                                ? messages[error] ? messages[error] : result\n                                : messages;\n                    }, null)\n                    : null;\n            };\n        }\n    },\n].map(mapPriority());\n/**\n * Default params functions\n */\nconst defaultFunctions = [\n    {\n        id: 'formatText',\n        fn: (defaultText = '-') => {\n            return (node) => {\n                return node.control.value || defaultText;\n            };\n        },\n    },\n    {\n        id: 'formatYesNo',\n        fn: (isBinary = true, defaultText = '-') => {\n            return (node) => {\n                return node.control.value === true\n                    ? 'Yes'\n                    : isBinary || node.control.value === false\n                        ? 'No'\n                        : defaultText;\n            };\n        },\n    },\n    {\n        id: 'getOptionText',\n        fn: () => {\n            return (node) => {\n                const value = node.control.value;\n                const option = node.params.options.find((o) => o.value === value);\n                return value && option ? option.value : value;\n            };\n        },\n    },\n    {\n        id: 'getParamsField',\n        fn: (field = 'label', defaultText = '-') => {\n            return (node) => {\n                return node.params[field] || defaultText;\n            };\n        },\n    },\n].map(mapPriority());\n/**\n * Related Condition\n */\nfunction relatedConditionFn({ path, value, field, negate }) {\n    return (node) => {\n        const control = node.query(path);\n        if (!control) {\n            console.error(`Control '${path}' not found inside a Condition`);\n            return of(true); // do not break AND matchers\n        }\n        if (value === undefined) {\n            // triggers with any valueChange\n            return control.valueChanges.pipe(startWith(control.value), mapTo(true));\n        }\n        return control.valueChanges.pipe(startWith(control.value), \n        // compare the configured value\n        map(controlValue => field && isPlainObject(controlValue)\n            ? controlValue[field]\n            : controlValue), map(controlValue => {\n            return Array.isArray(value)\n                ? value.includes(controlValue)\n                : value === controlValue;\n        }), \n        // negate the result if needed\n        map(result => negate ? !result : result));\n    };\n}\n/**\n * Utils\n */\nfunction getMapFromRecord(config) {\n    return new Map(Object.entries(config));\n}\n// check if the control.path endsWith the provided config\nfunction pathEndsWith(path, config) {\n    return [...config].reverse().every((item, i) => {\n        return item === path[path.length - 1 - i];\n    });\n}\n\nclass DynFormHandlers {\n    constructor(logger, providedErrorHandlers, providedFunctions, providedValidators, providedAsyncValidators, providedMatchers, providedConditions) {\n        var _a, _b, _c, _d, _e, _f;\n        this.logger = logger;\n        this.providedErrorHandlers = providedErrorHandlers;\n        this.providedFunctions = providedFunctions;\n        this.providedValidators = providedValidators;\n        this.providedAsyncValidators = providedAsyncValidators;\n        this.providedMatchers = providedMatchers;\n        this.providedConditions = providedConditions;\n        // registered handlers\n        this.errorHandlers = new Map();\n        this.functions = new Map();\n        this.validators = new Map();\n        this.asyncValidators = new Map();\n        this.matchers = new Map();\n        this.conditions = new Map();\n        // reduce the provided handlers according to priority\n        this.reduceProvider(((_a = this.providedValidators) !== null && _a !== void 0 ? _a : []).concat(defaultValidators), // add Angular's default validators\n        this.validators);\n        this.reduceProvider(((_b = this.providedAsyncValidators) !== null && _b !== void 0 ? _b : []).concat(defaultAsyncValidators), this.asyncValidators);\n        this.reduceProvider(((_c = this.providedMatchers) !== null && _c !== void 0 ? _c : []).concat(defaultMatchers), this.matchers);\n        this.reduceProvider(((_d = this.providedConditions) !== null && _d !== void 0 ? _d : []).concat(defaultConditions), this.conditions);\n        this.reduceProvider(((_e = this.providedErrorHandlers) !== null && _e !== void 0 ? _e : []).concat(defaultErrorHandlers), this.errorHandlers);\n        this.reduceProvider(((_f = this.providedFunctions) !== null && _f !== void 0 ? _f : []).concat(defaultFunctions), this.functions);\n    }\n    getControlOptions(node, config) {\n        return {\n            validators: this.dynValidators(node, this.validators, config === null || config === void 0 ? void 0 : config.validators),\n            asyncValidators: this.dynValidators(node, this.asyncValidators, config === null || config === void 0 ? void 0 : config.asyncValidators),\n            updateOn: config === null || config === void 0 ? void 0 : config.updateOn,\n        };\n    }\n    getMatcher(config) {\n        if (typeof config === 'function') {\n            return config;\n        }\n        else if (Array.isArray(config)) {\n            const [id, args] = config;\n            if (this.matchers.has(id)) {\n                return this.matchers.get(id)(...this.getArgs(args));\n            }\n        }\n        else if (this.matchers.has(config)) {\n            return this.matchers.get(config)();\n        }\n        throw this.logger.providerNotFound('Matcher', config);\n    }\n    getCondition(config) {\n        var _a;\n        if (typeof config === 'function') {\n            return config;\n        }\n        else if (Array.isArray(config)) {\n            const [id, args] = config;\n            if (this.conditions.has(id)) {\n                return this.conditions.get(id)(...this.getArgs(args));\n            }\n        }\n        else if (isMatchCondition(config)) {\n            const id = (_a = config.condition) !== null && _a !== void 0 ? _a : 'DEFAULT'; // default condition handler\n            if (typeof id === 'function') {\n                return id;\n            }\n            else if (this.conditions.has(id)) {\n                return this.conditions.get(id)(config);\n            }\n        }\n        else if (this.conditions.has(config)) {\n            return this.conditions.get(config)();\n        }\n        throw this.logger.providerNotFound('Condition', config);\n    }\n    getFormErrorHandlers(config) {\n        return config\n            ? Array.isArray(config)\n                ? config.map(handler => this.getErrorHandler(handler))\n                : [this.errorHandlers.get('FORM')(config)]\n            : [];\n    }\n    getErrorHandlers(config) {\n        return config\n            ? Array.isArray(config)\n                ? config.map(handler => this.getErrorHandler(handler))\n                : [this.errorHandlers.get('CONTROL')(config)]\n            : [];\n    }\n    getErrorHandler(config) {\n        if (typeof config === 'function') {\n            return config;\n        }\n        else if (Array.isArray(config)) {\n            const [id, args] = config;\n            if (this.errorHandlers.has(id)) {\n                return this.errorHandlers.get(id)(...this.getArgs(args));\n            }\n        }\n        else if (this.errorHandlers.has(config)) {\n            return this.errorHandlers.get(config)();\n        }\n        throw this.logger.providerNotFound('Error Handler', config);\n    }\n    getFunctions(config) {\n        if (!config) {\n            return {};\n        }\n        return Object.keys(config).reduce((result, field) => {\n            result[field] = this.getFunction(config[field]);\n            return result;\n        }, {});\n    }\n    getFunction(config) {\n        if (typeof config === 'function') {\n            return config;\n        }\n        else if (Array.isArray(config)) {\n            const [id, args] = config;\n            if (this.functions.has(id)) {\n                return this.functions.get(id)(...this.getArgs(args));\n            }\n        }\n        else if (this.functions.has(config)) {\n            return this.functions.get(config)();\n        }\n        throw this.logger.providerNotFound('Function', config);\n    }\n    dynValidators(node, dictionary, config) {\n        let validators = [];\n        if (Array.isArray(config)) {\n            // array of ids or [id, args] | F\n            validators = config.map(id => {\n                return this.getValidatorFn(node, id, dictionary);\n            });\n        }\n        else if (config) {\n            // object of { id: args }\n            Object.keys(config).forEach(id => {\n                validators.push(this.getValidatorFn(node, [id, config[id]], dictionary));\n            });\n        }\n        return validators.length ? validators : null;\n    }\n    getValidatorFn(node, config, dictionary) {\n        if (typeof config === 'function') {\n            return config;\n        }\n        else if (Array.isArray(config)) {\n            const [id, args] = config;\n            if (dictionary.has(id)) {\n                return dictionary.get(id)(node, ...this.getArgs(args));\n            }\n        }\n        else if (dictionary.has(config)) {\n            return dictionary.get(config)(node);\n        }\n        throw this.logger.providerNotFound('Validator', config);\n    }\n    getArgs(args) {\n        return (args !== null && args !== void 0 ? args : false)\n            ? Array.isArray(args) ? args : [args]\n            : [];\n    }\n    reduceProvider(providers, dictionary) {\n        // FIXME validate the data-integrity of the provided values and throw logger\n        providers\n            .reduce(\n        // reduce the validators according to the priority\n        (map, validator) => {\n            var _a, _b, _c;\n            if (!map.has(validator.id)\n                || (((_a = validator.priority) !== null && _a !== void 0 ? _a : 0) > ((_c = (_b = map.get(validator.id)) === null || _b === void 0 ? void 0 : _b.priority) !== null && _c !== void 0 ? _c : 0))) {\n                map.set(validator.id, validator);\n            }\n            return map;\n        }, new Map()).forEach(validator => {\n            // keep only the ValidatorFn in the register\n            dictionary.set(validator.id, validator.fn);\n        });\n    }\n}\nDynFormHandlers.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormHandlers, deps: [{ token: i1.DynLogger }, { token: DYN_ERROR_HANDLERS_TOKEN, optional: true }, { token: DYN_FUNCTIONS_TOKEN, optional: true }, { token: DYN_VALIDATORS_TOKEN, optional: true }, { token: DYN_ASYNCVALIDATORS_TOKEN, optional: true }, { token: DYN_MATCHERS_TOKEN, optional: true }, { token: DYN_MATCHER_CONDITIONS_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDynFormHandlers.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormHandlers });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormHandlers, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.DynLogger }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DYN_ERROR_HANDLERS_TOKEN]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DYN_FUNCTIONS_TOKEN]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DYN_VALIDATORS_TOKEN]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DYN_ASYNCVALIDATORS_TOKEN]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DYN_MATCHERS_TOKEN]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DYN_MATCHER_CONDITIONS_TOKEN]\n                }, {\n                    type: Optional\n                }] }]; } });\n\nclass DynFormRegistry {\n    constructor(logger, controls) {\n        this.logger = logger;\n        this.controls = controls;\n    }\n    get(dynControl) {\n        const provided = this.controls.find(({ control }) => dynControl === control);\n        if (!provided) {\n            const error = this.logger.providerNotFound('Control', dynControl);\n            console.error(error.message);\n            throw error;\n        }\n        return provided;\n    }\n    getInstanceFor(dynControl) {\n        return this.get(dynControl).instance;\n    }\n}\nDynFormRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormRegistry, deps: [{ token: i1.DynLogger }, { token: DYN_CONTROLS_TOKEN }], target: i0.ɵɵFactoryTarget.Injectable });\nDynFormRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormRegistry });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormRegistry, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.DynLogger }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DYN_CONTROLS_TOKEN]\n                }] }]; } });\n\n// injected in the DynControls to build their AbstractControls\nclass DynFormFactory {\n    constructor(handlers, registry) {\n        this.handlers = handlers;\n        this.registry = registry;\n    }\n    register(instance, node, config, recursively = false) {\n        // fail-safe validation\n        if (!node.parent.control) {\n            throw new Error(`The parent ControlContainer doesn't have a control`);\n        }\n        // return any existing control with this name\n        if (config.name) {\n            let control;\n            if (node.parent.instance === DynInstanceType.Array) {\n                // check if we have a parent FormArray with node.instance\n                control = node.parent.control.at(parseInt(config.name));\n            }\n            else {\n                // assumes a parent FormGroup\n                control = node.parent.control.get(config.name);\n            }\n            if (control) {\n                return control;\n            }\n        }\n        // looks for an existing deep parent\n        let controlParent = node.parent.control;\n        let controlName = config.name;\n        if (this.isDeepName(controlName)) {\n            const parentNames = controlName.split('.');\n            parentNames.some(parentName => {\n                const control = controlParent.get(parentName);\n                if (!control) {\n                    return true;\n                }\n                controlParent = control;\n                parentNames.shift();\n                return false;\n            });\n            controlName = parentNames.join('.');\n        }\n        // build the control with the given config\n        const { name, parentControl, control } = this.build(instance, node, config, recursively, controlName);\n        if (!control) {\n            throw new Error(`Could not build a control for ${instance}`);\n        }\n        if (name) {\n            this.append(controlParent, name, parentControl);\n        }\n        return control;\n    }\n    build(instance, node, config, recursively = false, controlName = config.name) {\n        var _a;\n        // creates the specific control\n        let name = controlName;\n        let control;\n        switch (instance) {\n            case DynInstanceType.Container:\n            case DynInstanceType.Group: {\n                const group = new FormGroup({}, this.handlers.getControlOptions(node, config));\n                if (recursively) {\n                    this.buildControls(group, node, config);\n                }\n                control = group;\n                break;\n            }\n            case DynInstanceType.Array: {\n                control = new FormArray([], this.handlers.getControlOptions(node, config));\n                break;\n            }\n            case DynInstanceType.Control: {\n                control = new FormControl((_a = config === null || config === void 0 ? void 0 : config.default) !== null && _a !== void 0 ? _a : null, this.handlers.getControlOptions(node, config));\n                break;\n            }\n        }\n        // builds a hierarchy if the name is deep\n        let parentControl = control;\n        if (this.isDeepName(controlName)) {\n            const names = controlName.split('.').reverse();\n            name = names.pop();\n            names.forEach(parentName => {\n                parentControl = new FormGroup({\n                    [parentName]: parentControl,\n                });\n            });\n        }\n        return { name, parentControl, control: control };\n    }\n    /**\n     * Recursively build the child controls and attach them to a given parent.\n     */\n    buildControls(parent, node, config) {\n        var _a;\n        (_a = config.controls) === null || _a === void 0 ? void 0 : _a.forEach((item) => {\n            if (item.name) {\n                const { name, control } = this.build(this.getInstanceFor(item.control), node, item, true);\n                parent.addControl(name, control);\n            }\n            else {\n                this.buildControls(parent, node, item);\n            }\n        });\n    }\n    /**\n     * Append a control to a given parent in the specified name.\n     */\n    append(parent, name, control) {\n        // only FormGroup can be extended\n        if (parent instanceof FormGroup) {\n            parent.addControl(name, control);\n        }\n        else if (parent instanceof FormArray) {\n            parent.push(control);\n        }\n    }\n    /**\n     * getInstanceFor facade for DynControl\n     */\n    getInstanceFor(control) {\n        return this.registry.getInstanceFor(control);\n    }\n    isDeepName(name) {\n        return Boolean(name && name.split('.').length > 1);\n    }\n}\nDynFormFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormFactory, deps: [{ token: DynFormHandlers }, { token: DynFormRegistry }], target: i0.ɵɵFactoryTarget.Injectable });\nDynFormFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormFactory });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormFactory, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: DynFormHandlers }, { type: DynFormRegistry }]; } });\n\n// initialized by dyn-form, dyn-factory, dyn-group\n// and the abstract DynForm* classes\nclass DynFormTreeNode {\n    constructor(formFactory, formHandlers, logger, _mode$, \n    // parent node should be set for all except the root\n    parent) {\n        this.formFactory = formFactory;\n        this.formHandlers = formHandlers;\n        this.logger = logger;\n        this._mode$ = _mode$;\n        this.parent = parent;\n        // form hierarchy\n        this.isolated = false;\n        this.index = 0;\n        this.deep = 0;\n        this.path = [];\n        this.route = [];\n        this.children = [];\n        // listened by dyn-factory\n        this.visibility$ = new Subject();\n        // listened by DynControl\n        this.paramsUpdates$ = new BehaviorSubject({});\n        this.hook$ = new Subject();\n        this._formLoaded = false; // view already initialized\n        this._errorHandlers = [];\n        this._children$ = new Subject();\n        this._numChild$ = new BehaviorSubject(0);\n        this._loaded$ = new BehaviorSubject(false);\n        this._errorMsg$ = new BehaviorSubject(null);\n        this._unsubscribe = new Subject();\n        this.loaded$ = this._children$.pipe(startWith(null), switchMap(() => combineLatest([\n            this._numChild$,\n            this._loaded$,\n            ...this.children.map(child => child.loaded$),\n        ])), map(([numChilds, loaded, ...children]) => {\n            const isControl = this.instance === DynInstanceType.Control;\n            const hasAllChildren = numChilds === children.length;\n            const allChildrenValid = children.every(Boolean);\n            const allChildrenLoaded = this.instance === DynInstanceType.Control ? true : hasAllChildren && allChildrenValid;\n            const result = Boolean(loaded) && allChildrenLoaded;\n            this.logger.nodeLoad(this, !isControl\n                ? { result, loaded, numChilds, children }\n                : { result, loaded });\n            return result;\n        }), distinctUntilChanged(), shareReplay(1));\n    }\n    // control config\n    get dynControl() {\n        return this._dynControl;\n    }\n    get name() {\n        return this._name;\n    }\n    get instance() {\n        return this._instance;\n    }\n    get control() {\n        return this._control;\n    }\n    get params() {\n        return this._params;\n    }\n    get isRoot() {\n        return this.isolated || !this.parent;\n    }\n    get isFormLoaded() {\n        return this._formLoaded;\n    }\n    get errorMsg$() {\n        return this._errorMsg$.asObservable();\n    }\n    get mode$() {\n        return this._mode$.asObservable();\n    }\n    // form root node\n    get root() {\n        return this.isRoot ? this : this.parent.root;\n    }\n    /**\n     * Visibility methods\n     */\n    visible() {\n        this.visibility$.next('VISIBLE');\n    }\n    invisible() {\n        this.visibility$.next('INVISIBLE');\n    }\n    hidden() {\n        this.visibility$.next('HIDDEN');\n    }\n    /**\n     * State methods\n     */\n    childsIncrement() {\n        this._numChild$.next(this._numChild$.getValue() + 1);\n        this.logger.nodeMethod(this, 'childsIncrement', { numChilds: this._numChild$.getValue() });\n    }\n    childsDecrement() {\n        this._numChild$.next(this._numChild$.getValue() - 1);\n        this.logger.nodeMethod(this, 'childsDecrement', { numChilds: this._numChild$.getValue() });\n    }\n    /**\n     * Feature methods\n     */\n    // let the ControlNode know of an incoming hook\n    callHook(event) {\n        this.logger.hookCalled(this, event.hook, event.payload);\n        this.hook$.next(event);\n    }\n    // query for a control upper in the tree\n    query(path, searchNodes = false) {\n        var _a, _b;\n        /* eslint-disable @typescript-eslint/no-this-alias */\n        let node = this;\n        let result;\n        do {\n            // query by form.control and by node.path\n            result = (_b = (_a = node.control.get(path)) !== null && _a !== void 0 ? _a : (searchNodes ? node.select(path) : null)) !== null && _b !== void 0 ? _b : null;\n            // move upper in the tree\n            node = node.parent;\n        } while (!result && node);\n        return result;\n    }\n    // select a child control by node.path\n    select(path) {\n        const selector = path.split('.');\n        let name = '';\n        if (this._name) { // container with no name\n            name = selector.shift();\n        }\n        if (!selector.length) { // search over\n            return this._name === name ? this.control : null;\n        }\n        else if (this._name !== name) {\n            return null; // not in the search path\n        }\n        // propagate the query to the children\n        let result = null;\n        this.children.some(node => {\n            result = node.select(selector.join('.'));\n            return result ? true : false; // return the first match\n        });\n        return result;\n    }\n    // listen another control value changes\n    valueChanges(path) {\n        const control = this.query(path);\n        return control === null || control === void 0 ? void 0 : control.valueChanges.pipe(startWith(control.value));\n    }\n    /**\n     * Lifecycle methods\n     */\n    onInit(instance, config) {\n        var _a;\n        // throw error if the name is already set and different to the incoming one\n        if (this.name !== undefined && this.name !== ((_a = config.name) !== null && _a !== void 0 ? _a : '')) {\n            throw this.logger.nodeFailed(config.control);\n        }\n        // throw error if the configured instance is different to the inherited one\n        const configInstance = this.formFactory.getInstanceFor(config.control);\n        if (instance !== configInstance) {\n            throw this.logger.nodeInstanceMismatch(config.control, instance, configInstance);\n        }\n        // register the instance type for the childs to know\n        this._instance = instance;\n        if (config.name) {\n            // register the control into the parent\n            this._control = this.formFactory.register(instance, this, config);\n        }\n        else {\n            // or takes the parent control\n            // useful for nested UI groups in the same FormGroup\n            this._control = this.parent.control;\n        }\n        this.load(config);\n    }\n    setControl(control, instance = DynInstanceType.Group) {\n        // manual setup with no wiring nor config validation\n        this._instance = instance;\n        this._control = control;\n    }\n    load(config) {\n        var _a, _b, _c, _d;\n        if (!this._control) {\n            throw this.logger.nodeWithoutControl();\n        }\n        // keep the id of the control for the logs\n        this._dynControl = config.control;\n        // register the name to build the form path\n        this._name = (_a = config.name) !== null && _a !== void 0 ? _a : '';\n        // disconnect this node from any parent DynControl\n        this.isolated = Boolean(config.isolated);\n        this.deep = this.getDeep();\n        this.path = this.getPath();\n        this.route = this.getRoute();\n        // store the number of configured childs\n        this._numChild$.next(![DynInstanceType.Array, DynInstanceType.Container].includes(this._instance)\n            ? (_c = (_b = config.controls) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0\n            : 0);\n        // store the matchers to be processed in setupListeners\n        this._matchers = this.getMatchers(config);\n        // store the params to be accessible to the handlers\n        this._params = config.params;\n        // resolve and store the error handlers\n        this._errorHandlers = config.errorMsgs\n            ? this.formHandlers.getFormErrorHandlers(config.errorMsgs)\n            : config.errorMsg\n                ? this.formHandlers.getErrorHandlers(config.errorMsg)\n                : [];\n        if (!this.isolated) {\n            // register the node with its parent\n            (_d = this.parent) === null || _d === void 0 ? void 0 : _d.addChild(this);\n        }\n    }\n    markAsPending() {\n        this._loaded$.next(false);\n    }\n    markAsLoaded() {\n        this._loaded$.next(true);\n    }\n    setupListeners() {\n        var _a;\n        if (!this.isFormLoaded) {\n            this.logger.setupListeners(this);\n            this._formLoaded = true;\n            // listen control changes to update the error\n            merge$1(this._control.valueChanges, this._control.statusChanges).pipe(takeUntil(this._unsubscribe), debounceTime(20), // wait for subcontrols to be updated\n            map(() => this._control.errors), distinctUntilChanged(), withLatestFrom(this._errorMsg$)).subscribe(([_, currentError]) => {\n                if (this._control.valid) {\n                    // reset any existing error\n                    if (currentError) {\n                        this._errorMsg$.next(null);\n                    }\n                }\n                else {\n                    // update the error message if needed\n                    const errorMsg = this.getErrorMessage();\n                    if (currentError !== errorMsg) {\n                        this._errorMsg$.next(errorMsg);\n                    }\n                }\n            });\n            // process the stored matchers\n            (_a = this._matchers) === null || _a === void 0 ? void 0 : _a.map((config) => {\n                const matchers = config.matchers.map(matcher => this.formHandlers.getMatcher(matcher));\n                let count = 0;\n                combineLatest(\n                // build an array of observables to listen changes into\n                config.when\n                    .map(condition => this.formHandlers.getCondition(condition)) // handler fn\n                    .map(fn => fn(this)) // condition observables\n                ).pipe(map(results => config.operator === 'OR' // AND by default\n                    ? results.some(Boolean)\n                    : results.every(Boolean)), takeUntil(this._unsubscribe))\n                    .subscribe(hasMatch => {\n                    const firstTime = (count === 0);\n                    // run the matchers with the conditions result\n                    // TODO config to run the matcher only if hasMatch? (unidirectional)\n                    matchers.map(matcher => matcher(this, config.negate ? !hasMatch : hasMatch, firstTime));\n                    count++;\n                });\n            });\n        }\n        // call the children\n        this.children.map(child => child.setupListeners());\n    }\n    onDestroy() {\n        // TODO test unload with routed forms\n        var _a;\n        if (!this.isolated) {\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.removeChild(this);\n        }\n        this.hook$.complete();\n        this.paramsUpdates$.complete();\n        this.visibility$.complete();\n        this._errorMsg$.complete();\n        this._unsubscribe.next();\n        this._unsubscribe.complete();\n    }\n    /**\n     * Hierarchy methods\n     */\n    setIndex(index) {\n        this.index = index;\n    }\n    getDeep() {\n        var _a;\n        return this.isRoot ? 0 : ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.deep) + 1;\n    }\n    // control.path relative to the root\n    getPath() {\n        var _a;\n        return [\n            ...(!this.isRoot ? this.parent.path : []),\n            (_a = this._name) !== null && _a !== void 0 ? _a : '',\n        ].filter(Boolean);\n    }\n    // control.route relative to the root\n    getRoute() {\n        return [\n            ...(!this.isRoot ? this.parent.route : []),\n            this.dynControl || this.instance +\n                `${this.index !== undefined ? `[${this.index}]` : ''}`,\n        ];\n    }\n    addChild(node) {\n        this.logger.nodeMethod(this, 'addChild', { numChilds: this._numChild$.getValue(), children: this.children.length });\n        this.children.push(node);\n        this._children$.next();\n        // TODO updateValue and validity? or it's automatically done?\n    }\n    removeChild(node) {\n        this.logger.nodeMethod(this, 'removeChild');\n        this.children.some((child, i) => {\n            return (child === node) ? this.children.splice(i, 1) : false;\n        });\n        this._children$.next();\n        // TODO what happen to the data if we remove the control\n        // TODO update validity if not isolated\n    }\n    // process the config to extract the matchers\n    getMatchers(config) {\n        var _a;\n        const matchers = ((_a = config.match) === null || _a === void 0 ? void 0 : _a.slice()) || [];\n        // listen changes in the RELATED field\n        // with a matcher configured like the asyncValidator\n        if (config.asyncValidators) {\n            const hasRelated = (Array.isArray(config.asyncValidators)\n                ? config.asyncValidators.find((validator) => {\n                    return Array.isArray(validator) ? validator[0] === 'RELATED' : false;\n                })\n                : config.asyncValidators['RELATED']);\n            if (hasRelated) {\n                matchers.push({\n                    matchers: ['RELATED'],\n                    when: [hasRelated[0]],\n                });\n            }\n        }\n        return matchers;\n    }\n    // error message resolver\n    getErrorMessage() {\n        let errorMsg = null;\n        if (this._control.errors) {\n            // loop the handlers and retrieve the message\n            this._errorHandlers.concat(this.root._errorHandlers || []).some(handler => {\n                errorMsg = handler(this);\n                return Boolean(errorMsg);\n            });\n        }\n        // TODO i18n transformation\n        return errorMsg;\n    }\n}\nDynFormTreeNode.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormTreeNode, deps: [{ token: DynFormFactory }, { token: DynFormHandlers }, { token: i1.DynLogger }, { token: DYN_MODE, optional: true }, { token: DynFormTreeNode, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDynFormTreeNode.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormTreeNode });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormTreeNode, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: DynFormFactory }, { type: DynFormHandlers }, { type: i1.DynLogger }, { type: i4.BehaviorSubject, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DYN_MODE]\n                }] }, { type: DynFormTreeNode, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }]; } });\n\nclass DynControlNode {\n    constructor(injector) {\n        this._unsubscribe = new Subject();\n        this.node = injector.get(DynFormTreeNode);\n    }\n    get errorMsg$() {\n        return this.node.errorMsg$;\n    }\n    get onDestroy$() {\n        return this._unsubscribe.asObservable();\n    }\n    ngOnInit() {\n        // listen hook calls\n        this.node.hook$\n            .pipe(takeUntil(this._unsubscribe))\n            .subscribe(hook => this.callHook(hook));\n    }\n    ngOnDestroy() {\n        this._unsubscribe.next();\n        this._unsubscribe.complete();\n        // remove it from the hierarchy\n        this.node.onDestroy();\n    }\n    // propagate hook calls from the top to the bottom of the DynControls tree\n    // note: concrete hooks will receive the parent data if they define no config.name\n    callHook(event) {\n        const method = this[`hook${event.hook}`];\n        if (isCallable(method)) {\n            method.bind(this)(event.payload);\n        }\n        // propagate to the childs\n        this.callChildHooks(event);\n    }\n    // hook propagated to child DynControls\n    // customized by special cases like FormArray\n    callChildHooks({ hook, payload, plain }) {\n        this.node.children.map(node => {\n            const fieldName = node.name;\n            // validate the expected payload\n            if (!plain && (!payload || fieldName && !Object.prototype.hasOwnProperty.call(payload, fieldName))) {\n                return;\n            }\n            node.callHook({\n                hook,\n                payload: !plain && fieldName ? payload[fieldName] : payload,\n                plain,\n            });\n        });\n    }\n}\nDynControlNode.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynControlNode, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Directive });\nDynControlNode.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynControlNode, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynControlNode, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });\n\nclass DynControl extends DynControlNode {\n    constructor(injector) {\n        super(injector);\n        this._id = '';\n        this.params$ = new BehaviorSubject({});\n        this._mode = injector.get(DYN_MODE);\n        this._ref = injector.get(ChangeDetectorRef);\n        this._logger = injector.get(DynLogger);\n        this._factory = injector.get(DynFormFactory);\n        this._handlers = injector.get(DynFormHandlers);\n    }\n    get params() {\n        return this.params$.getValue();\n    }\n    get control() {\n        return this.node.control;\n    }\n    // utility properties\n    get parentControl() {\n        return this.node.parent.control;\n    }\n    get visibility$() {\n        return this.node.visibility$.asObservable();\n    }\n    get id() {\n        var _a;\n        if (this._id) {\n            return this._id;\n        }\n        const array = new Uint32Array(8);\n        (_a = window === null || window === void 0 ? void 0 : window.crypto) === null || _a === void 0 ? void 0 : _a.getRandomValues(array);\n        for (let i = 0; i < array.length; i++) {\n            this._id += (i < 2 || i > 5 ? '' : '-') + array[i].toString(16).slice(-4);\n        }\n        return this._id;\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        // merge any configured paramFns\n        if (this.config.paramFns) {\n            this.updateParams(undefined, this.config.paramFns);\n        }\n        // listen parameters changes after the control is ready\n        combineLatest([\n            isObservable(this.config.params) ? this.config.params : of(this.config.params),\n            this.node.paramsUpdates$.pipe(startWith({})),\n        ]).pipe(scan((params, [config, updates]) => merge(true, params, config, updates)), filter(params => !Array.isArray(params))).subscribe((params) => {\n            // emulates ngOnChanges\n            const change = new SimpleChange(this.params, this.completeParams(params), !this.params);\n            this.params$.next(change.currentValue);\n            this._logger.nodeParamsUpdated(this.node, this.constructor.name, this.params);\n            setTimeout(() => {\n                // emulates ngOnChanges and async pipe\n                this.ngOnChanges({ params: change });\n                this._ref.markForCheck();\n            }, 1);\n        });\n    }\n    ngAfterViewInit() {\n        this.node.markAsLoaded();\n    }\n    /* eslint-disable @typescript-eslint/no-unused-vars, @angular-eslint/no-empty-lifecycle-method */\n    ngOnChanges(changes) {\n        // emulated while assigning the params as DynControls has no Inputs\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.params$.complete();\n    }\n    // complete a partial specification of the required parameters\n    // ensuring that all will be present in the template to avoid exceptions\n    completeParams(params) {\n        return params;\n    }\n    updateParams(newParams, newParamFns) {\n        this.node.paramsUpdates$.next(merge(true, newParams, this._handlers.getFunctions(newParamFns)));\n    }\n    // hook to refresh the form status\n    hookUpdateValidity() {\n        this.control.updateValueAndValidity({ onlySelf: true });\n        this._ref.markForCheck();\n    }\n}\n// central place to define the provided Type\nDynControl.dynControl = '';\n// central place to define the provided Instance\nDynControl.dynInstance = DynInstanceType.Group;\nDynControl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynControl, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Directive });\nDynControl.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynControl, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynControl, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });\n\nclass DynFormArray extends DynControl {\n    // auto-register in the form hierarchy\n    ngOnInit() {\n        if (!this.config.name && this.node.parent.instance !== DynInstanceType.Array) {\n            throw this._logger.unnamedArray(this.config.control);\n        }\n        // initialize the node\n        this.node.onInit(DynInstanceType.Array, this.config);\n        // provide the parameters\n        super.ngOnInit();\n        // log the successful initialization\n        this._logger.nodeLoaded('dyn-form-array', this.node);\n    }\n    // hook propagated to child DynControls\n    callChildHooks({ hook, payload, plain }) {\n        if (!plain && !Array.isArray(payload)) {\n            return;\n        }\n        this.node.children.forEach((node, i) => {\n            if (plain || (payload === null || payload === void 0 ? void 0 : payload.length) >= i - 1) {\n                node.callHook({\n                    hook,\n                    payload: !plain ? payload[i] : payload,\n                    plain,\n                });\n            }\n        });\n    }\n    addItem() {\n        const { control } = this._factory.build(DynInstanceType.Group, this.node, this.config);\n        this.control.push(control);\n        this.node.childsIncrement();\n    }\n    removeItem(index) {\n        this.control.removeAt(index);\n        this.node.childsDecrement();\n    }\n    // matches the incoming quantity of items with the existing controls\n    // do not remove any existing data because this is \"patch\"\n    hookPrePatch(payload) {\n        if (Array.isArray(payload)) {\n            const numItems = this.control.controls.length;\n            for (let i = 1; i <= Math.max(numItems, payload.length); i++) {\n                if (i > numItems) {\n                    this.addItem();\n                }\n                else if (i >= payload.length) {\n                    this.removeItem(i);\n                }\n            }\n            this._ref.markForCheck();\n        }\n    }\n}\nDynFormArray.dynInstance = DynInstanceType.Array;\nDynFormArray.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormArray, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDynFormArray.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynFormArray, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormArray, decorators: [{\n            type: Directive\n        }] });\n\nclass DynFormContainer extends DynControl {\n    // auto-register in the form hierarchy\n    ngOnInit() {\n        // initialize the node\n        if (!this.control) {\n            // containers could have initialized the node differently\n            this.node.onInit(DynInstanceType.Container, this.config);\n        }\n        // provide the parameters\n        super.ngOnInit();\n        // log the successful initialization\n        this._logger.nodeLoaded('dyn-form-container', this.node);\n    }\n}\nDynFormContainer.dynInstance = DynInstanceType.Container;\nDynFormContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormContainer, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDynFormContainer.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynFormContainer, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormContainer, decorators: [{\n            type: Directive\n        }] });\n\nclass DynFormControl extends DynControl {\n    // auto-register in the form hierarchy\n    ngOnInit() {\n        if (!this.config.name && this.node.parent.instance !== DynInstanceType.Control) {\n            throw new Error(`No config.name provided for ${this.config.control}`);\n        }\n        // initialize the node\n        this.node.onInit(DynInstanceType.Control, this.config);\n        // provide the parameters\n        super.ngOnInit();\n        // log the successful initialization\n        this._logger.nodeLoaded('dyn-form-control', this.node);\n    }\n}\nDynFormControl.dynInstance = DynInstanceType.Control;\nDynFormControl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormControl, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDynFormControl.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynFormControl, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormControl, decorators: [{\n            type: Directive\n        }] });\n\nclass DynFormGroup extends DynControl {\n    // auto-register in the form hierarchy\n    ngOnInit() {\n        // initialize the node\n        this.node.onInit(DynInstanceType.Group, this.config);\n        // provide the parameters\n        super.ngOnInit();\n        // log the successful initialization\n        this._logger.nodeLoaded('dyn-form-group', this.node);\n    }\n}\nDynFormGroup.dynInstance = DynInstanceType.Group;\nDynFormGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormGroup, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDynFormGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynFormGroup, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormGroup, decorators: [{\n            type: Directive\n        }] });\n\n// utility used by DynFormsModule.forFeature\nfunction getModuleProviders(args) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n    return [\n        {\n            provide: DYN_LOG_LEVEL,\n            useValue: DynLogLevel.Fatal,\n        },\n        DynLogDriver,\n        DynLogger,\n        DynFormRegistry,\n        DynFormHandlers,\n        DynFormFactory,\n        ...(_a = args === null || args === void 0 ? void 0 : args.providers) !== null && _a !== void 0 ? _a : [],\n        ...(_c = (_b = args === null || args === void 0 ? void 0 : args.controls) === null || _b === void 0 ? void 0 : _b.map(mapPriority(args === null || args === void 0 ? void 0 : args.priority)).map((control) => ({\n            provide: DYN_CONTROLS_TOKEN,\n            useValue: control,\n            multi: true,\n        }))) !== null && _c !== void 0 ? _c : [],\n        ...(_e = (_d = args === null || args === void 0 ? void 0 : args.errorHandlers) === null || _d === void 0 ? void 0 : _d.map(mapPriority(args === null || args === void 0 ? void 0 : args.priority)).map((errorHandler) => ({\n            provide: DYN_ERROR_HANDLERS_TOKEN,\n            useValue: errorHandler,\n            multi: true,\n        }))) !== null && _e !== void 0 ? _e : [],\n        ...(_g = (_f = args === null || args === void 0 ? void 0 : args.functions) === null || _f === void 0 ? void 0 : _f.map(mapPriority(args === null || args === void 0 ? void 0 : args.priority)).map((fn) => ({\n            provide: DYN_FUNCTIONS_TOKEN,\n            useValue: fn,\n            multi: true,\n        }))) !== null && _g !== void 0 ? _g : [],\n        ...(_j = (_h = args === null || args === void 0 ? void 0 : args.validators) === null || _h === void 0 ? void 0 : _h.map(mapPriority(args === null || args === void 0 ? void 0 : args.priority)).map((validator) => ({\n            provide: DYN_VALIDATORS_TOKEN,\n            useValue: validator,\n            multi: true,\n        }))) !== null && _j !== void 0 ? _j : [],\n        ...(_l = (_k = args === null || args === void 0 ? void 0 : args.asyncValidators) === null || _k === void 0 ? void 0 : _k.map(mapPriority(args === null || args === void 0 ? void 0 : args.priority)).map((asyncValidator) => ({\n            provide: DYN_ASYNCVALIDATORS_TOKEN,\n            useValue: asyncValidator,\n            multi: true,\n        }))) !== null && _l !== void 0 ? _l : [],\n        ...(_o = (_m = args === null || args === void 0 ? void 0 : args.matchers) === null || _m === void 0 ? void 0 : _m.map(mapPriority(args === null || args === void 0 ? void 0 : args.priority)).map((matcher) => ({\n            provide: DYN_MATCHERS_TOKEN,\n            useValue: matcher,\n            multi: true,\n        }))) !== null && _o !== void 0 ? _o : [],\n        ...(_q = (_p = args === null || args === void 0 ? void 0 : args.conditions) === null || _p === void 0 ? void 0 : _p.map(mapPriority(args === null || args === void 0 ? void 0 : args.priority)).map((condition) => ({\n            provide: DYN_MATCHER_CONDITIONS_TOKEN,\n            useValue: condition,\n            multi: true,\n        }))) !== null && _q !== void 0 ? _q : [],\n    ];\n}\n\n// provided by the dyn-form component next to the internal tokens\nclass DynFormMode {\n    constructor(mode$, modes) {\n        this.mode$ = mode$;\n        this.modes = modes;\n    }\n    deepEqual(a, b) {\n        return deepEqual(a, b);\n    }\n    // resolves the config to be used by dyn-factory\n    // this algorithm decides how to override the main config with mode customizations\n    getModeConfig(config) {\n        var _a;\n        const mode = this.mode$.getValue();\n        let result = Object.assign(Object.assign({}, config), { modes: undefined });\n        if (!mode) {\n            return result;\n        }\n        // overrides any partial config set in the form.modes[mode]\n        if (this.modes && Object.prototype.hasOwnProperty.call(this.modes, mode)) {\n            result = this.mergeConfigs(result, this.modes[mode]);\n        }\n        // overrides any customized config in control.modes[mode]\n        if ((_a = config.modes) === null || _a === void 0 ? void 0 : _a[mode]) {\n            result = this.mergeConfigs(result, config.modes[mode]);\n        }\n        return result;\n    }\n    areConfigsEquivalent(config, newConfig) {\n        return (config === null || config === void 0 ? void 0 : config.control) === newConfig.control &&\n            deepEqual(config === null || config === void 0 ? void 0 : config.default, newConfig.default) &&\n            deepEqual(config === null || config === void 0 ? void 0 : config.validators, newConfig.validators) &&\n            deepEqual(config === null || config === void 0 ? void 0 : config.asyncValidators, newConfig.asyncValidators) &&\n            deepEqual(config === null || config === void 0 ? void 0 : config.updateOn, newConfig.updateOn) &&\n            deepEqual(config === null || config === void 0 ? void 0 : config.match, newConfig.match);\n    }\n    mergeConfigs(config, mode) {\n        // custom merge strategy for DynControlConfig\n        if (mode.control) {\n            config.control = mode.control;\n        }\n        if (Object.prototype.hasOwnProperty.call(mode, 'default')) {\n            config.default = mode.default;\n        }\n        if (Object.prototype.hasOwnProperty.call(mode, 'validators')) {\n            config.validators = mode.validators;\n        }\n        if (Object.prototype.hasOwnProperty.call(mode, 'asyncValidators')) {\n            config.asyncValidators = mode.asyncValidators;\n        }\n        if (Object.prototype.hasOwnProperty.call(mode, 'updateOn')) {\n            config.updateOn = mode.updateOn;\n        }\n        if (Object.prototype.hasOwnProperty.call(mode, 'match')) {\n            config.match = mode.match;\n        }\n        if (Object.prototype.hasOwnProperty.call(mode, 'cssClass')) {\n            config.cssClass = mode.cssClass;\n        }\n        if (Object.prototype.hasOwnProperty.call(mode, 'errorMsg')) {\n            config.errorMsg = mode.errorMsg;\n        }\n        // do not override an existing observable (because of modeParams)\n        // an observable will need to take in account the mode changes inside\n        if (mode.params && !isObservable(config.params)) {\n            config.params = !isObservable(mode.params)\n                ? merge(true, config.params, mode.params)\n                : mode.params;\n        }\n        if (Object.prototype.hasOwnProperty.call(mode, 'paramFns')) {\n            config.paramFns = merge(true, config.paramFns, mode.paramFns);\n        }\n        return config;\n    }\n}\nDynFormMode.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormMode, deps: [{ token: DYN_MODE }, { token: DYN_MODE_DEFAULTS }], target: i0.ɵɵFactoryTarget.Injectable });\nDynFormMode.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormMode });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormMode, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i4.BehaviorSubject, decorators: [{\n                    type: Inject,\n                    args: [DYN_MODE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DYN_MODE_DEFAULTS]\n                }] }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DYN_ASYNCVALIDATORS_TOKEN, DYN_CONTROLS_TOKEN, DYN_ERROR_HANDLERS_TOKEN, DYN_FUNCTIONS_TOKEN, DYN_MATCHERS_TOKEN, DYN_MATCHER_CONDITIONS_TOKEN, DYN_MODE, DYN_MODE_DEFAULTS, DYN_VALIDATORS_TOKEN, DynControl, DynControlNode, DynFormArray, DynFormContainer, DynFormControl, DynFormFactory, DynFormGroup, DynFormHandlers, DynFormMode, DynFormRegistry, DynFormTreeNode, DynInstanceType, clone, getModuleProviders, isMatchCondition, isPlainObject, merge, recursive };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Injectable, Inject } from '@angular/core';\n\nvar DynLogLevel;\n(function (DynLogLevel) {\n    DynLogLevel[DynLogLevel[\"All\"] = 255] = \"All\";\n    DynLogLevel[DynLogLevel[\"Hooks\"] = 128] = \"Hooks\";\n    DynLogLevel[DynLogLevel[\"Load\"] = 64] = \"Load\";\n    DynLogLevel[DynLogLevel[\"Lifecycle\"] = 32] = \"Lifecycle\";\n    DynLogLevel[DynLogLevel[\"Hierarchy\"] = 16] = \"Hierarchy\";\n    DynLogLevel[DynLogLevel[\"Debug\"] = 8] = \"Debug\";\n    DynLogLevel[DynLogLevel[\"Warning\"] = 4] = \"Warning\";\n    DynLogLevel[DynLogLevel[\"Error\"] = 2] = \"Error\";\n    DynLogLevel[DynLogLevel[\"Fatal\"] = 1] = \"Fatal\";\n})(DynLogLevel || (DynLogLevel = {}));\nconst dynLogLevels = new Map([\n    [DynLogLevel.Hooks, 'HOOKS'],\n    [DynLogLevel.Load, 'LOAD'],\n    [DynLogLevel.Lifecycle, 'CYCLE'],\n    [DynLogLevel.Hierarchy, 'SETUP'],\n    [DynLogLevel.Debug, 'DEBUG'],\n    [DynLogLevel.Warning, 'WARN'],\n    [DynLogLevel.Error, 'ERROR'],\n    [DynLogLevel.Fatal, 'FATAL'],\n]);\n\nconst DYN_LOG_LEVEL = new InjectionToken('@myndpm/dyn-forms/logger');\n\n/**\n * Service to be overriden, defaults to console driver.\n */\nclass DynLogDriver {\n    constructor(level) {\n        this.level = level;\n        this.logFatal = (event) => {\n            return new Error(event.message);\n        };\n        this.logError = (event) => {\n            console.error(...this.format(event));\n        };\n        this.logWarning = (event) => {\n            console.warn(...this.format(event));\n        };\n        this.logInfo = (event) => {\n            console.log(...this.format(event));\n        };\n    }\n    log(event) {\n        // do not log anything on production\n        // or below the configured limit\n        if (!isDevMode() || !(event.level & this.level)) {\n            return;\n        }\n        return this.getLogger(event.level)(event);\n    }\n    getLogger(level) {\n        switch (level) {\n            case DynLogLevel.Fatal:\n                return this.logFatal;\n            case DynLogLevel.Error:\n                return this.logError;\n            case DynLogLevel.Warning:\n                return this.logWarning;\n            default:\n                return this.logInfo;\n        }\n    }\n    format(event) {\n        const result = [\n            ...this.colorify(event.deep || 0, event.level),\n            event.message,\n        ];\n        return event.payload ? [...result, event.payload] : result;\n    }\n    colorify(indent, level, text = `${''.padStart(2 * (indent || 0), ' ')}%c[${dynLogLevels.get(level)}]`) {\n        switch (level) {\n            case DynLogLevel.Fatal:\n                return [text, `color: #dc3545`];\n            case DynLogLevel.Error:\n                return [text, `color: #dc3545`];\n            case DynLogLevel.Warning:\n                return [text, `color: #fd7e14`];\n            case DynLogLevel.Hierarchy:\n                return [text, `color: #0d6efd`];\n            case DynLogLevel.Lifecycle:\n                return [text, `color: #6f42c1`];\n            case DynLogLevel.Load:\n                return [text, `color: #20c997`];\n            case DynLogLevel.Hooks:\n                return [text, `color: #adb5bd`];\n            default:\n                return [text, `color: #0d6efd`]; // info\n        }\n    }\n}\nDynLogDriver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynLogDriver, deps: [{ token: DYN_LOG_LEVEL }], target: i0.ɵɵFactoryTarget.Injectable });\nDynLogDriver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynLogDriver });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynLogDriver, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: DynLogLevel, decorators: [{\n                    type: Inject,\n                    args: [DYN_LOG_LEVEL]\n                }] }]; } });\n\n// collector of all log messages of the library\nclass DynLogger {\n    constructor(driver) {\n        this.driver = driver;\n    }\n    rootForm() {\n        return this.driver.log({\n            level: DynLogLevel.Fatal,\n            message: `Please provide a [form] to <dyn-form>`,\n        });\n    }\n    unnamedArray(control) {\n        return this.driver.log({\n            level: DynLogLevel.Fatal,\n            message: `No config.name provided for ${control}`,\n        });\n    }\n    providerNotFound(provider, config) {\n        return this.driver.log({\n            level: DynLogLevel.Fatal,\n            message: `${provider} ${JSON.stringify(config)} not provided.`,\n        });\n    }\n    nodeFailed(control) {\n        return this.driver.log({\n            level: DynLogLevel.Fatal,\n            message: `Control '${control}' need to provide its own DynFormTreeNode. ` +\n                `It is consuming the parent Node and that will cause unexpected effects.`,\n        });\n    }\n    nodeInstanceMismatch(control, superclass, configured) {\n        return this.driver.log({\n            level: DynLogLevel.Fatal,\n            message: `Control '${control}' extends  from '${superclass}' but is provided as '${configured}'.`,\n        });\n    }\n    nodeWithoutControl() {\n        return this.driver.log({\n            level: DynLogLevel.Fatal,\n            message: `Could not resolve a control for the Node .`,\n        });\n    }\n    nodeLoaded(origin, { deep, path, route }, payload) {\n        this.driver.log({\n            deep,\n            level: DynLogLevel.Hierarchy,\n            message: !deep\n                ? `[${origin}] root node initialized`\n                : `[${origin}] initialized '${path.join('.')}' (${route.join('/')})`,\n            payload,\n        });\n    }\n    nodeMethod({ deep, path, route }, method, payload) {\n        this.driver.log({\n            deep,\n            level: DynLogLevel.Debug,\n            message: `[node.${method}] '${path.join('.')}' (${route.join('/')})`,\n            payload,\n        });\n    }\n    nodeLoad({ deep, path, route }, payload) {\n        this.driver.log({\n            deep,\n            level: DynLogLevel.Load,\n            message: `'${path.join('.')}' (${route.join('/')})`,\n            payload,\n        });\n    }\n    nodeParamsUpdated({ deep }, origin, payload) {\n        this.driver.log({\n            deep,\n            level: DynLogLevel.Lifecycle,\n            message: `[${origin}] updating params`,\n            payload,\n        });\n    }\n    controlInitializing({ deep }, payload) {\n        this.driver.log({\n            deep,\n            level: DynLogLevel.Debug,\n            message: `[dyn-factory] instantiating dynamic component`,\n            payload,\n        });\n    }\n    controlInstantiated({ deep, dynControl }, payload) {\n        this.driver.log({\n            deep,\n            level: DynLogLevel.Hierarchy,\n            message: `[dyn-factory] instantiated dynamic control${dynControl ? ` (${dynControl})` : ''}`,\n            payload,\n        });\n    }\n    formCycle(name, payload) {\n        this.driver.log({\n            level: DynLogLevel.Lifecycle,\n            message: `[DynForm] ${name}`,\n            payload,\n        });\n    }\n    setupListeners({ deep, path, route }) {\n        this.driver.log({\n            deep,\n            level: DynLogLevel.Debug,\n            message: `'${path.join('.')}' setupListeners (${route.join('/')})`,\n        });\n    }\n    hookCalled({ deep, path }, hook, payload) {\n        this.driver.log({\n            deep,\n            level: DynLogLevel.Hooks,\n            message: `'${hook}' called on '${path.join('.')}'`,\n            payload: payload && typeof payload === 'object' ? payload : JSON.stringify(payload),\n        });\n    }\n}\nDynLogger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynLogger, deps: [{ token: DynLogDriver }], target: i0.ɵɵFactoryTarget.Injectable });\nDynLogger.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynLogger });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynLogger, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: DynLogDriver }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DYN_LOG_LEVEL, DynLogDriver, DynLogLevel, DynLogger, dynLogLevels };\n","import * as i3$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, HostBinding, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i1 from '@angular/material/card';\nimport { MatCardModule } from '@angular/material/card';\nimport * as i1$1 from '@angular/material/checkbox';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport * as i2$1 from '@angular/material/datepicker';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport * as i1$3 from '@angular/material/divider';\nimport { MatDividerModule } from '@angular/material/divider';\nimport * as i1$2 from '@angular/material/form-field';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i4 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i4$1 from '@angular/material/input';\nimport { MatInputModule } from '@angular/material/input';\nimport * as i1$4 from '@angular/material/radio';\nimport { MatRadioModule } from '@angular/material/radio';\nimport * as i2$2 from '@angular/material/select';\nimport { MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MatSelectModule } from '@angular/material/select';\nimport * as i2 from '@myndpm/dyn-forms';\nimport { DynFormsModule } from '@myndpm/dyn-forms';\nimport { DynFormArray, DynInstanceType, DynFormContainer, DynFormControl, getModuleProviders } from '@myndpm/dyn-forms/core';\nimport { combineLatest } from 'rxjs';\nimport { takeUntil, switchMap, startWith, tap } from 'rxjs/operators';\nimport * as i3$2 from '@angular/material/core';\n\nclass DynMatArrayComponent extends DynFormArray {\n    constructor() {\n        super(...arguments);\n        this.dynInstanceType = DynInstanceType;\n    }\n    static createConfig(partial) {\n        return Object.assign(Object.assign({}, partial), { control: DynMatArrayComponent.dynControl });\n    }\n    get items() {\n        return this.control.controls;\n    }\n    get isReadonly() {\n        return Boolean(this.params.readonly);\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        if (this.params.initItem && !this.control.length) {\n            this.addItem();\n            this._ref.markForCheck();\n        }\n    }\n    completeParams(params) {\n        return Object.assign(Object.assign({}, params), { addButton: params.addButton || 'Add Item', addColor: params.addColor || 'accent', removeIcon: params.removeIcon || 'close', removeColor: params.removeColor || 'accent' });\n    }\n}\nDynMatArrayComponent.dynControl = 'ARRAY';\nDynMatArrayComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatArrayComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDynMatArrayComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynMatArrayComponent, selector: \"dyn-mat-array\", host: { properties: { \"class.readonly\": \"this.isReadonly\" } }, usesInheritance: true, ngImport: i0, template: \"<mat-card>\\n  <mat-card-header>\\n    <img *ngIf=\\\"params.avatar\\\" mat-card-avatar [src]=\\\"params.avatar\\\" >\\n    <mat-card-title *ngIf=\\\"params.title\\\">{{ params.title }}</mat-card-title>\\n    <mat-card-subtitle *ngIf=\\\"params.subtitle\\\">{{ params.subtitle }}</mat-card-subtitle>\\n  </mat-card-header>\\n\\n  <mat-card-content>\\n    <div class=\\\"array-item\\\" *ngFor=\\\"let item of items; index as i\\\">\\n      <dyn-group\\n        [class]=\\\"config.cssClass\\\"\\n        [name]=\\\"i.toString()\\\"\\n        [group]=\\\"item\\\"\\n        [controls]=\\\"config.controls\\\"\\n      ></dyn-group>\\n\\n      <button\\n      mat-icon-button type=\\\"button\\\"\\n      [color]=\\\"params.removeColor\\\"\\n      (click)=\\\"removeItem(i)\\\">\\n        <mat-icon>{{ params.removeIcon }}</mat-icon>\\n      </button>\\n    </div>\\n  </mat-card-content>\\n\\n  <mat-card-actions [align]=\\\"'end'\\\">\\n    <button\\n    mat-raised-button type=\\\"button\\\"\\n    [color]=\\\"params.addColor\\\"\\n    (click)=\\\"addItem()\\\">\\n      {{ params.addButton }}\\n    </button>\\n  </mat-card-actions>\\n</mat-card>\\n\", styles: [\"mat-card-header ::ng-deep>:first-child{margin-left:0}.array-item{display:flex;flex-direction:row;place-content:center space-between;align-items:center}.array-item dyn-group{display:flex;flex:1}.array-item .mat-icon-button{margin-bottom:20px}:host.readonly button{visibility:hidden}\\n\"], components: [{ type: i1.MatCard, selector: \"mat-card\", exportAs: [\"matCard\"] }, { type: i1.MatCardHeader, selector: \"mat-card-header\" }, { type: i2.DynGroupComponent, selector: \"dyn-group\", inputs: [\"isolated\", \"group\", \"name\", \"controls\"] }, { type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { type: i4.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.MatCardAvatar, selector: \"[mat-card-avatar], [matCardAvatar]\" }, { type: i1.MatCardTitle, selector: \"mat-card-title, [mat-card-title], [matCardTitle]\" }, { type: i1.MatCardSubtitle, selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\" }, { type: i1.MatCardContent, selector: \"mat-card-content, [mat-card-content], [matCardContent]\" }, { type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.MatCardActions, selector: \"mat-card-actions\", inputs: [\"align\"], exportAs: [\"matCardActions\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatArrayComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-mat-array',\n                    templateUrl: './array.component.html',\n                    styleUrls: ['./array.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { isReadonly: [{\n                type: HostBinding,\n                args: ['class.readonly']\n            }] } });\n\nclass DynMatCardComponent extends DynFormContainer {\n    static createConfig(partial) {\n        return Object.assign(Object.assign({}, partial), { control: DynMatCardComponent.dynControl });\n    }\n}\nDynMatCardComponent.dynControl = 'CARD';\nDynMatCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatCardComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDynMatCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynMatCardComponent, selector: \"dyn-mat-card\", usesInheritance: true, ngImport: i0, template: \"<mat-card>\\n  <mat-card-header>\\n    <img *ngIf=\\\"params.avatar\\\" mat-card-avatar [src]=\\\"params.avatar\\\" >\\n    <mat-card-title *ngIf=\\\"params.title\\\">{{ params.title }}</mat-card-title>\\n    <mat-card-subtitle *ngIf=\\\"params.subtitle\\\">{{ params.subtitle }}</mat-card-subtitle>\\n  </mat-card-header>\\n\\n  <mat-card-content>\\n    <dyn-group\\n      [class]=\\\"config.cssClass\\\"\\n      [group]=\\\"control\\\"\\n      [controls]=\\\"config.controls\\\"\\n    ></dyn-group>\\n  </mat-card-content>\\n</mat-card>\\n\", styles: [\"mat-card-header ::ng-deep>:first-child{margin-left:0}\\n\"], components: [{ type: i1.MatCard, selector: \"mat-card\", exportAs: [\"matCard\"] }, { type: i1.MatCardHeader, selector: \"mat-card-header\" }, { type: i2.DynGroupComponent, selector: \"dyn-group\", inputs: [\"isolated\", \"group\", \"name\", \"controls\"] }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.MatCardAvatar, selector: \"[mat-card-avatar], [matCardAvatar]\" }, { type: i1.MatCardTitle, selector: \"mat-card-title, [mat-card-title], [matCardTitle]\" }, { type: i1.MatCardSubtitle, selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\" }, { type: i1.MatCardContent, selector: \"mat-card-content, [mat-card-content], [matCardContent]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatCardComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-mat-card',\n                    templateUrl: './card.component.html',\n                    styleUrls: ['./card.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }] });\n\nclass DynMatCheckboxComponent extends DynFormControl {\n    static createConfig(partial) {\n        return Object.assign(Object.assign({}, partial), { control: DynMatCheckboxComponent.dynControl });\n    }\n    get isReadonly() {\n        return Boolean(this.params.readonly);\n    }\n    completeParams(params) {\n        return Object.assign(Object.assign({}, params), { label: params.label || '-missing label-', labelPosition: params.labelPosition || 'after' });\n    }\n}\nDynMatCheckboxComponent.dynControl = 'CHECKBOX';\nDynMatCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatCheckboxComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDynMatCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynMatCheckboxComponent, selector: \"dyn-mat-checkbox\", host: { properties: { \"class.readonly\": \"this.isReadonly\" } }, usesInheritance: true, ngImport: i0, template: \"<mat-checkbox\\n  [formControl]=\\\"control\\\"\\n  [indeterminate]=\\\"params.indeterminate\\\"\\n  [labelPosition]=\\\"params.labelPosition\\\">\\n  {{ params.label }}\\n</mat-checkbox>\\n\", styles: [\":host{display:block}\\n\"], components: [{ type: i1$1.MatCheckbox, selector: \"mat-checkbox\", inputs: [\"disableRipple\", \"color\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"id\", \"labelPosition\", \"name\", \"required\", \"checked\", \"disabled\", \"indeterminate\", \"aria-describedby\", \"value\"], outputs: [\"change\", \"indeterminateChange\"], exportAs: [\"matCheckbox\"] }], directives: [{ type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i5.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatCheckboxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-mat-checkbox',\n                    templateUrl: './checkbox.component.html',\n                    styleUrls: ['./checkbox.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { isReadonly: [{\n                type: HostBinding,\n                args: ['class.readonly']\n            }] } });\n\nclass DynMatContainerComponent extends DynFormContainer {\n    static createConfig(partial) {\n        return Object.assign(Object.assign({}, partial), { control: DynMatContainerComponent.dynControl });\n    }\n}\nDynMatContainerComponent.dynControl = 'CONTAINER';\nDynMatContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatContainerComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDynMatContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynMatContainerComponent, selector: \"dyn-mat-container\", usesInheritance: true, ngImport: i0, template: \"<dyn-group\\n  [class]=\\\"config.cssClass\\\"\\n  [group]=\\\"control\\\"\\n  [controls]=\\\"config.controls\\\"\\n></dyn-group>\\n\", styles: [\"\"], components: [{ type: i2.DynGroupComponent, selector: \"dyn-group\", inputs: [\"isolated\", \"group\", \"name\", \"controls\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-mat-container',\n                    templateUrl: './container.component.html',\n                    styleUrls: ['./container.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }] });\n\nclass DynMatDatepickerComponent extends DynFormControl {\n    static createConfig(partial) {\n        return Object.assign(Object.assign({}, partial), { control: DynMatDatepickerComponent.dynControl });\n    }\n    get isReadonly() {\n        return Boolean(this.params.readonly);\n    }\n    completeParams(params) {\n        return Object.assign(Object.assign({}, params), { floatLabel: params.floatLabel || 'auto', placeholder: params.placeholder || '' });\n    }\n}\nDynMatDatepickerComponent.dynControl = 'DATEPICKER';\nDynMatDatepickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatDatepickerComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDynMatDatepickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynMatDatepickerComponent, selector: \"dyn-mat-datepicker\", host: { properties: { \"class.readonly\": \"this.isReadonly\" } }, usesInheritance: true, ngImport: i0, template: \"<!-- design decision to force the always-floating-label on display-mode -->\\n<mat-form-field [floatLabel]=\\\"params.readonly ? 'always' : params.floatLabel\\\">\\n  <mat-label *ngIf=\\\"params.label\\\">{{ params.label }}</mat-label>\\n\\n  <input\\n    matInput\\n    [formControl]=\\\"control\\\"\\n    [placeholder]=\\\"params.placeholder\\\"\\n    [matDatepicker]=\\\"picker\\\"\\n  />\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker></mat-datepicker>\\n\\n  <span *ngIf=\\\"params.readonly\\\">\\n    {{ (params.getValue ? params.getValue(node) : control.value) || '-' }}\\n  </span>\\n\\n  <mat-hint *ngIf=\\\"params.hint\\\">{{ params.hint }}</mat-hint>\\n</mat-form-field>\\n\", styles: [\":host{display:block}:host .mat-form-field{width:100%}:host .mat-form-field ::ng-deep .mat-input-element{line-height:1.2em}:host.readonly ::ng-deep .mat-form-field-outline,:host.readonly ::ng-deep input{display:none}:host.readonly ::ng-deep .mat-form-field-underline{visibility:hidden}:host.readonly ::ng-deep .mat-form-field-appearance-fill .mat-form-field-flex{background:transparent}\\n\"], components: [{ type: i1$2.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"floatLabel\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { type: i2$1.MatDatepickerToggle, selector: \"mat-datepicker-toggle\", inputs: [\"tabIndex\", \"disabled\", \"for\", \"aria-label\", \"disableRipple\"], exportAs: [\"matDatepickerToggle\"] }, { type: i2$1.MatDatepicker, selector: \"mat-datepicker\", exportAs: [\"matDatepicker\"] }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$2.MatLabel, selector: \"mat-label\" }, { type: i4$1.MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"id\", \"disabled\", \"required\", \"type\", \"value\", \"readonly\", \"placeholder\", \"errorStateMatcher\", \"aria-describedby\"], exportAs: [\"matInput\"] }, { type: i5.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2$1.MatDatepickerInput, selector: \"input[matDatepicker]\", inputs: [\"matDatepicker\", \"min\", \"max\", \"matDatepickerFilter\"], exportAs: [\"matDatepickerInput\"] }, { type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i5.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i1$2.MatSuffix, selector: \"[matSuffix]\" }, { type: i1$2.MatHint, selector: \"mat-hint\", inputs: [\"align\", \"id\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatDatepickerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-mat-datepicker',\n                    templateUrl: './datepicker.component.html',\n                    styleUrls: ['./datepicker.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { isReadonly: [{\n                type: HostBinding,\n                args: ['class.readonly']\n            }] } });\n\nclass DynMatDividerComponent extends DynFormContainer {\n    static createConfig(partial) {\n        return Object.assign(Object.assign({}, partial), { control: DynMatDividerComponent.dynControl });\n    }\n    get isInvisible() {\n        return Boolean(this.params.invisible);\n    }\n}\nDynMatDividerComponent.dynControl = 'DIVIDER';\nDynMatDividerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatDividerComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDynMatDividerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynMatDividerComponent, selector: \"dyn-mat-divider\", host: { properties: { \"class.is-invisible\": \"this.isInvisible\" } }, usesInheritance: true, ngImport: i0, template: \"<mat-divider></mat-divider>\\n\", styles: [\":host{display:block}:host.is-invisible{visibility:hidden}\\n\"], components: [{ type: i1$3.MatDivider, selector: \"mat-divider\", inputs: [\"vertical\", \"inset\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatDividerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-mat-divider',\n                    templateUrl: './divider.component.html',\n                    styleUrls: ['./divider.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { isInvisible: [{\n                type: HostBinding,\n                args: ['class.is-invisible']\n            }] } });\n\nclass DynMatInputComponent extends DynFormControl {\n    static createConfig(partial) {\n        return Object.assign(Object.assign({}, partial), { control: DynMatInputComponent.dynControl });\n    }\n    get isReadonly() {\n        return Boolean(this.params.readonly);\n    }\n    completeParams(params) {\n        return Object.assign(Object.assign({}, params), { floatLabel: params.floatLabel || 'auto', type: params.type || 'text', placeholder: params.placeholder || '', rows: params.rows || 3, errorStateMatcher: {\n                isErrorState: (control) => {\n                    return Boolean((control === null || control === void 0 ? void 0 : control.invalid) && control.touched);\n                },\n            } });\n    }\n}\nDynMatInputComponent.dynControl = 'INPUT';\nDynMatInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDynMatInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynMatInputComponent, selector: \"dyn-mat-input\", host: { properties: { \"class.readonly\": \"this.isReadonly\" } }, usesInheritance: true, ngImport: i0, template: \"<!-- design decision to force the always-floating-label on display-mode -->\\n<mat-form-field [floatLabel]=\\\"params.readonly ? 'always' : params.floatLabel\\\">\\n  <mat-label *ngIf=\\\"params.label\\\">{{ params.label }}</mat-label>\\n\\n  <ng-container\\n    *ngIf=\\\"params.type === 'textarea' then textareaControl else inputControl\\\"\\n  ></ng-container>\\n  <ng-template #inputControl>\\n    <input\\n      matInput\\n      [type]=\\\"params.type\\\"\\n      [formControl]=\\\"control\\\"\\n      [errorStateMatcher]=\\\"params.errorStateMatcher\\\"\\n      [placeholder]=\\\"params.placeholder\\\"\\n    />\\n  </ng-template>\\n  <ng-template #textareaControl>\\n    <textarea\\n      matInput\\n      [formControl]=\\\"control\\\"\\n      [errorStateMatcher]=\\\"params.errorStateMatcher\\\"\\n      [placeholder]=\\\"params.placeholder\\\"\\n      [rows]=\\\"params.rows\\\"\\n    ></textarea>\\n  </ng-template>\\n\\n  <span *ngIf=\\\"params.readonly\\\">\\n    {{ (params.getValue ? params.getValue(node) : control.value) || '-' }}\\n  </span>\\n\\n  <mat-icon *ngIf=\\\"params.iconPrefix\\\" matPrefix>{{ params.iconPrefix }}</mat-icon>\\n  <mat-icon *ngIf=\\\"params.iconSuffix\\\" matSuffix>{{ params.iconSuffix }}</mat-icon>\\n  <span *ngIf=\\\"params.textSuffix\\\" matSuffix>{{ params.textSuffix }}</span>\\n\\n  <mat-hint *ngIf=\\\"params.hint\\\">{{ params.hint }}</mat-hint>\\n  <mat-error *ngIf=\\\"errorMsg$ | async as errorMsg\\\">{{ errorMsg }}</mat-error>\\n</mat-form-field>\\n\", styles: [\":host{display:block}:host .mat-form-field{width:100%}:host .mat-form-field ::ng-deep .mat-input-element{line-height:1.2em}:host.readonly ::ng-deep .mat-form-field-outline,:host.readonly ::ng-deep .mat-error,:host.readonly ::ng-deep .mat-hint,:host.readonly ::ng-deep input{display:none}:host.readonly ::ng-deep .mat-form-field-underline{visibility:hidden}:host.readonly ::ng-deep .mat-form-field-appearance-fill .mat-form-field-flex{background:transparent}:host.readonly ::ng-deep .mat-form-field-invalid.mat-form-field .mat-form-field-label{color:#0009}:host.readonly ::ng-deep .mat-form-field-invalid.mat-form-field-appearance-outline .mat-form-field-outline-thick{color:#000000de}\\n\"], components: [{ type: i1$2.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"floatLabel\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { type: i4.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$2.MatLabel, selector: \"mat-label\" }, { type: i4$1.MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"id\", \"disabled\", \"required\", \"type\", \"value\", \"readonly\", \"placeholder\", \"errorStateMatcher\", \"aria-describedby\"], exportAs: [\"matInput\"] }, { type: i5.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i5.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i1$2.MatPrefix, selector: \"[matPrefix]\" }, { type: i1$2.MatSuffix, selector: \"[matSuffix]\" }, { type: i1$2.MatHint, selector: \"mat-hint\", inputs: [\"align\", \"id\"] }, { type: i1$2.MatError, selector: \"mat-error\", inputs: [\"id\"] }], pipes: { \"async\": i3$1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatInputComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-mat-input',\n                    templateUrl: './input.component.html',\n                    styleUrls: ['./input.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { isReadonly: [{\n                type: HostBinding,\n                args: ['class.readonly']\n            }] } });\n\nclass DynMatMulticheckboxComponent extends DynFormControl {\n    constructor() {\n        super(...arguments);\n        this.controls = [];\n        // avoids infinite loop emiting valueChange\n        this._internalValueChange = false;\n    }\n    static createConfig(partial) {\n        return Object.assign(Object.assign({}, partial), { control: DynMatMulticheckboxComponent.dynControl });\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        // listen valueChanges to sync the internal checkboxes\n        this.control.valueChanges\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(() => {\n            if (!this._internalValueChange) {\n                this.params.options.forEach((option, i) => {\n                    this.controls[i].setValue(this.hasValue(option.key));\n                });\n            }\n            this._internalValueChange = false;\n        });\n        this.params$.pipe(takeUntil(this.onDestroy$), switchMap((params) => {\n            // map one control to each option\n            this.controls = params.options.map((option) => {\n                return new FormControl(this.hasValue(option.key));\n            });\n            return combineLatest(this.controls.map(({ value, valueChanges }) => {\n                return valueChanges.pipe(startWith(value));\n            })).pipe(takeUntil(this.onDestroy$), \n            // TODO add distinctUntilChanged with lodash.isEqual\n            tap((values) => {\n                this._internalValueChange = true;\n                this.control.setValue(values.map((enabled, i) => enabled ? this.params.options[i].key : null).filter(Boolean));\n            }));\n        })).subscribe();\n    }\n    completeParams(params) {\n        return Object.assign(Object.assign({}, params), { options: params.options || [] });\n    }\n    hasValue(option) {\n        return (Array.isArray(this.control.value) ? this.control.value : []).includes(option);\n    }\n}\nDynMatMulticheckboxComponent.dynControl = 'MULTICHECK';\nDynMatMulticheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatMulticheckboxComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDynMatMulticheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynMatMulticheckboxComponent, selector: \"dyn-mat-multicheckbox\", usesInheritance: true, ngImport: i0, template: \"<mat-label *ngIf=\\\"params.label\\\">{{ params.label }}</mat-label>\\n\\n<div class=\\\"multicleck-option\\\" *ngFor=\\\"let option of params.options; index as i\\\">\\n  <mat-checkbox [formControl]=\\\"controls[i]\\\">\\n    {{ option.value }}\\n  </mat-checkbox>\\n</div>\\n\", styles: [\":host{display:block;margin:.25em 0;padding-bottom:1.34375em}:host mat-label{display:block;margin-bottom:.25em}\\n\"], components: [{ type: i1$1.MatCheckbox, selector: \"mat-checkbox\", inputs: [\"disableRipple\", \"color\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"id\", \"labelPosition\", \"name\", \"required\", \"checked\", \"disabled\", \"indeterminate\", \"aria-describedby\", \"value\"], outputs: [\"change\", \"indeterminateChange\"], exportAs: [\"matCheckbox\"] }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$2.MatLabel, selector: \"mat-label\" }, { type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i5.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatMulticheckboxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-mat-multicheckbox',\n                    templateUrl: './multicheckbox.component.html',\n                    styleUrls: ['./multicheckbox.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }] });\n\nclass DynMatRadioComponent extends DynFormControl {\n    static createConfig(partial) {\n        return Object.assign(Object.assign({}, partial), { control: DynMatRadioComponent.dynControl });\n    }\n    completeParams(params) {\n        return Object.assign(Object.assign({}, params), { options: params.options || [] });\n    }\n}\nDynMatRadioComponent.dynControl = 'RADIO';\nDynMatRadioComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatRadioComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDynMatRadioComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynMatRadioComponent, selector: \"dyn-mat-radio\", usesInheritance: true, ngImport: i0, template: \"<mat-label *ngIf=\\\"params.label\\\">{{ params.label }}</mat-label>\\n\\n<mat-radio-group [formControl]=\\\"control\\\">\\n  <mat-radio-button\\n    *ngFor=\\\"let option of params.options\\\"\\n    [value]=\\\"option.key\\\"\\n    [disabled]=\\\"params.readonly\\\"\\n  >\\n    {{ option.value }}\\n  </mat-radio-button>\\n</mat-radio-group>\\n\", styles: [\":host{display:block;margin:.25em 0;padding-bottom:1.34375em}:host mat-label{display:block;margin-bottom:.5em}:host .mat-radio-button{margin-right:1em}\\n\"], components: [{ type: i1$4.MatRadioButton, selector: \"mat-radio-button\", inputs: [\"disableRipple\", \"tabIndex\"], exportAs: [\"matRadioButton\"] }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$2.MatLabel, selector: \"mat-label\" }, { type: i1$4.MatRadioGroup, selector: \"mat-radio-group\", exportAs: [\"matRadioGroup\"] }, { type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i5.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatRadioComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-mat-radio',\n                    templateUrl: './radio.component.html',\n                    styleUrls: ['./radio.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }] });\n\nclass DynMatSelectComponent extends DynFormControl {\n    static createConfig(partial) {\n        return Object.assign(Object.assign({}, partial), { control: DynMatSelectComponent.dynControl });\n    }\n    completeParams(params) {\n        function compareWith(o1, o2) {\n            return o1 == o2;\n        }\n        function sortComparator(a, b) {\n            return a.value.localeCompare(b.value);\n        }\n        return Object.assign(Object.assign({}, params), { placeholder: params.placeholder || '', multiple: Boolean(params.multiple), options: params.options || [], compareWith: params.compareWith || compareWith, sortComparator: params.sortComparator || sortComparator, panelClass: params.panelClass || '' });\n    }\n}\nDynMatSelectComponent.dynControl = 'SELECT';\nDynMatSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatSelectComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDynMatSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynMatSelectComponent, selector: \"dyn-mat-select\", usesInheritance: true, ngImport: i0, template: \"<mat-form-field>\\n  <mat-label *ngIf=\\\"params.label\\\">{{ params.label }}</mat-label>\\n  <mat-select\\n    [formControl]=\\\"control\\\"\\n    [placeholder]=\\\"params.placeholder\\\"\\n    [multiple]=\\\"params.multiple\\\"\\n    [compareWith]=\\\"params.compareWith\\\"\\n    [sortComparator]=\\\"params.sortComparator\\\"\\n    [panelClass]=\\\"params.panelClass\\\"\\n  >\\n    <mat-option *ngFor=\\\"let option of params.options\\\" [value]=\\\"option.key\\\">\\n      {{ option.value }}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\", styles: [\":host{display:block}:host .mat-form-field{width:100%}\\n\"], components: [{ type: i1$2.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"floatLabel\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { type: i2$2.MatSelect, selector: \"mat-select\", inputs: [\"disabled\", \"disableRipple\", \"tabIndex\"], exportAs: [\"matSelect\"] }, { type: i3$2.MatOption, selector: \"mat-option\", exportAs: [\"matOption\"] }], directives: [{ type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$2.MatLabel, selector: \"mat-label\" }, { type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i5.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynMatSelectComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-mat-select',\n                    templateUrl: './select.component.html',\n                    styleUrls: ['./select.component.scss'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }] });\n\nconst PROVIDERS = getModuleProviders({\n    providers: [\n        MAT_SELECT_SCROLL_STRATEGY_PROVIDER,\n    ],\n    controls: [\n        {\n            control: DynMatArrayComponent.dynControl,\n            instance: DynMatArrayComponent.dynInstance,\n            component: DynMatArrayComponent,\n        },\n        {\n            control: DynMatCardComponent.dynControl,\n            instance: DynMatCardComponent.dynInstance,\n            component: DynMatCardComponent,\n        },\n        {\n            control: DynMatCheckboxComponent.dynControl,\n            instance: DynMatCheckboxComponent.dynInstance,\n            component: DynMatCheckboxComponent,\n        },\n        {\n            control: DynMatContainerComponent.dynControl,\n            instance: DynMatContainerComponent.dynInstance,\n            component: DynMatContainerComponent,\n        },\n        {\n            control: DynMatDatepickerComponent.dynControl,\n            instance: DynMatDatepickerComponent.dynInstance,\n            component: DynMatDatepickerComponent,\n        },\n        {\n            control: DynMatDividerComponent.dynControl,\n            instance: DynMatDividerComponent.dynInstance,\n            component: DynMatDividerComponent,\n        },\n        {\n            control: DynMatInputComponent.dynControl,\n            instance: DynMatInputComponent.dynInstance,\n            component: DynMatInputComponent,\n        },\n        {\n            control: DynMatMulticheckboxComponent.dynControl,\n            instance: DynMatMulticheckboxComponent.dynInstance,\n            component: DynMatMulticheckboxComponent,\n        },\n        {\n            control: DynMatRadioComponent.dynControl,\n            instance: DynMatRadioComponent.dynInstance,\n            component: DynMatRadioComponent,\n        },\n        {\n            control: DynMatSelectComponent.dynControl,\n            instance: DynMatSelectComponent.dynInstance,\n            component: DynMatSelectComponent,\n        },\n    ],\n});\nclass DynFormsMaterialModule {\n    static forFeature() {\n        return {\n            ngModule: DynFormsMaterialModule,\n            providers: PROVIDERS,\n        };\n    }\n}\nDynFormsMaterialModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormsMaterialModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDynFormsMaterialModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormsMaterialModule, declarations: [DynMatArrayComponent,\n        DynMatCardComponent,\n        DynMatCheckboxComponent,\n        DynMatContainerComponent,\n        DynMatDatepickerComponent,\n        DynMatDividerComponent,\n        DynMatInputComponent,\n        DynMatMulticheckboxComponent,\n        DynMatRadioComponent,\n        DynMatSelectComponent], imports: [CommonModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatRadioModule,\n        MatSelectModule,\n        DynFormsModule], exports: [\n        // reduce the boilerplate\n        DynFormsModule,\n        MatDialogModule] });\nDynFormsMaterialModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormsMaterialModule, imports: [[\n            CommonModule,\n            ReactiveFormsModule,\n            MatButtonModule,\n            MatCardModule,\n            MatCheckboxModule,\n            MatDatepickerModule,\n            MatDialogModule,\n            MatDividerModule,\n            MatFormFieldModule,\n            MatIconModule,\n            MatInputModule,\n            MatRadioModule,\n            MatSelectModule,\n            DynFormsModule,\n        ], \n        // reduce the boilerplate\n        DynFormsModule,\n        MatDialogModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormsMaterialModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                        MatButtonModule,\n                        MatCardModule,\n                        MatCheckboxModule,\n                        MatDatepickerModule,\n                        MatDialogModule,\n                        MatDividerModule,\n                        MatFormFieldModule,\n                        MatIconModule,\n                        MatInputModule,\n                        MatRadioModule,\n                        MatSelectModule,\n                        DynFormsModule,\n                    ],\n                    declarations: [\n                        DynMatArrayComponent,\n                        DynMatCardComponent,\n                        DynMatCheckboxComponent,\n                        DynMatContainerComponent,\n                        DynMatDatepickerComponent,\n                        DynMatDividerComponent,\n                        DynMatInputComponent,\n                        DynMatMulticheckboxComponent,\n                        DynMatRadioComponent,\n                        DynMatSelectComponent,\n                    ],\n                    // FIXME added for Stackblitz\n                    entryComponents: [\n                        DynMatArrayComponent,\n                        DynMatCardComponent,\n                        DynMatCheckboxComponent,\n                        DynMatContainerComponent,\n                        DynMatDatepickerComponent,\n                        DynMatDividerComponent,\n                        DynMatInputComponent,\n                        DynMatMulticheckboxComponent,\n                        DynMatRadioComponent,\n                        DynMatSelectComponent,\n                    ],\n                    exports: [\n                        // reduce the boilerplate\n                        DynFormsModule,\n                        MatDialogModule,\n                    ]\n                }]\n        }] });\n\n// factory\nfunction createMatConfig(type, partial) {\n    switch (type) {\n        // containers\n        case DynMatArrayComponent.dynControl:\n            return DynMatArrayComponent.createConfig(partial);\n        case DynMatCardComponent.dynControl:\n            return DynMatCardComponent.createConfig(partial);\n        case DynMatContainerComponent.dynControl:\n            return DynMatContainerComponent.createConfig(partial);\n        case DynMatDividerComponent.dynControl:\n            return DynMatDividerComponent.createConfig(partial);\n        // controls\n        case DynMatCheckboxComponent.dynControl:\n            return DynMatCheckboxComponent.createConfig(partial);\n        case DynMatDatepickerComponent.dynControl:\n            return DynMatDatepickerComponent.createConfig(partial);\n        case DynMatMulticheckboxComponent.dynControl:\n            return DynMatMulticheckboxComponent.createConfig(partial);\n        case DynMatSelectComponent.dynControl:\n            return DynMatSelectComponent.createConfig(partial);\n        case DynMatRadioComponent.dynControl:\n            return DynMatRadioComponent.createConfig(partial);\n        case DynMatInputComponent.dynControl:\n        default:\n            return DynMatInputComponent.createConfig(partial);\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DynFormsMaterialModule, DynMatArrayComponent, DynMatCardComponent, DynMatCheckboxComponent, DynMatContainerComponent, DynMatDatepickerComponent, DynMatDividerComponent, DynMatInputComponent, DynMatMulticheckboxComponent, DynMatRadioComponent, DynMatSelectComponent, createMatConfig };\n","import * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injector, SkipSelf, INJECTOR, ViewContainerRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, ViewChild, HostBinding, NgModule } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport * as i1 from '@myndpm/dyn-forms/core';\nimport { DYN_MODE, DynFormMode, DynFormTreeNode, DynFormFactory, DynFormHandlers, DYN_MODE_DEFAULTS, DynControlNode, DynInstanceType, getModuleProviders } from '@myndpm/dyn-forms/core';\nimport * as i2 from '@myndpm/dyn-forms/logger';\nimport { DynLogger } from '@myndpm/dyn-forms/logger';\nimport { takeUntil, debounceTime, filter, first, tap, delay, switchMap } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nclass DynFactoryComponent {\n    constructor(parent, ref, resolver, registry, logger, node) {\n        this.parent = parent;\n        this.ref = ref;\n        this.resolver = resolver;\n        this.registry = registry;\n        this.logger = logger;\n        this.node = node;\n        this.visibility = 'VISIBLE';\n    }\n    get cssClass() {\n        return [\n            this.config.cssClass,\n            // add the visibility class\n            this.visibility ? `dyn-${this.visibility.toLowerCase()}` : null,\n            // add a default class based on the name\n            this.config.name ? `dyn-control-${this.config.name}` : null,\n        ].filter(Boolean).join(' ');\n    }\n    ngOnInit() {\n        var _a;\n        // resolve the injector to use and get providers\n        this._injector = (_a = this.injector) !== null && _a !== void 0 ? _a : this.parent;\n        this._mode$ = this._injector.get(DYN_MODE);\n        this._formMode = this._injector.get(DynFormMode);\n        // process the dynamic component with each mode change\n        let config;\n        this._mode$.subscribe(() => {\n            const newConfig = this._formMode.getModeConfig(this.config);\n            // do not re-create the control if the config is the same\n            if (!this._formMode.deepEqual(config, newConfig)) {\n                // check if the params are the only changed ones\n                if (this._formMode.areConfigsEquivalent(config, newConfig)) {\n                    if (newConfig.params || newConfig.paramFns) {\n                        this.component.instance.updateParams(newConfig.params, newConfig.paramFns);\n                    }\n                }\n                else {\n                    this.logger.controlInitializing(this.node, { control: newConfig.control, name: newConfig.name });\n                    this.container.clear();\n                    this.createFrom(newConfig);\n                }\n                config = newConfig;\n            }\n        });\n    }\n    createFrom(config) {\n        var _a;\n        try {\n            const control = this.registry.get(config.control);\n            const factory = this.resolver.resolveComponentFactory(control.component);\n            const newInjectionLayer = Injector.create({\n                providers: [\n                    // new form-hierarchy sublevel\n                    // DynControls has its own DynFormTreeNode\n                    {\n                        provide: DynFormTreeNode,\n                        useClass: DynFormTreeNode,\n                        deps: [\n                            DynFormFactory,\n                            DynFormHandlers,\n                            DynLogger,\n                            DYN_MODE,\n                            [new SkipSelf(), DynFormTreeNode],\n                        ],\n                    },\n                ],\n                parent: this._injector,\n            });\n            this.component = this.container.createComponent(factory, undefined, newInjectionLayer);\n            this.component.instance.config = config;\n            this.component.instance.node.setIndex(this.index);\n            // we let the corresponding DynFormTreeNode to initialize the control\n            // and register itself in the Form Tree in the lifecycle methods\n            this.component.hostView.detectChanges();\n            this.logger.controlInstantiated(this.component.instance.node, { control: config.control, name: config.name, controls: ((_a = config.controls) === null || _a === void 0 ? void 0 : _a.length) || 0 });\n            // listen control.visibility$\n            this.component.instance.visibility$\n                .pipe(takeUntil(this.component.instance.onDestroy$))\n                .subscribe((visibility) => {\n                this.visibility = visibility;\n                this.ref.markForCheck();\n            });\n        }\n        catch (e) {\n            // log any error happening in the control instantiation\n            console.error(e);\n        }\n    }\n}\nDynFactoryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFactoryComponent, deps: [{ token: INJECTOR }, { token: i0.ChangeDetectorRef }, { token: i0.ComponentFactoryResolver }, { token: i1.DynFormRegistry }, { token: i2.DynLogger }, { token: i1.DynFormTreeNode }], target: i0.ɵɵFactoryTarget.Component });\nDynFactoryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynFactoryComponent, selector: \"dyn-factory\", inputs: { config: \"config\", index: \"index\", injector: \"injector\" }, host: { properties: { \"class\": \"this.cssClass\" } }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ViewContainerRef, static: true }], ngImport: i0, template: \"<ng-container #container></ng-container>\\n\", styles: [\"dyn-factory.dyn-invisible{visibility:hidden!important}dyn-factory.dyn-hidden{display:none!important}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFactoryComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-factory',\n                    templateUrl: './factory.component.html',\n                    styleUrls: ['./factory.component.scss'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector, decorators: [{\n                    type: Inject,\n                    args: [INJECTOR]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ComponentFactoryResolver }, { type: i1.DynFormRegistry }, { type: i2.DynLogger }, { type: i1.DynFormTreeNode }]; }, propDecorators: { config: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], injector: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: ['container', { static: true, read: ViewContainerRef }]\n            }], cssClass: [{\n                type: HostBinding,\n                args: ['class']\n            }] } });\n\nclass DynFormComponent {\n    constructor(injector, ref, node, logger) {\n        this.injector = injector;\n        this.ref = ref;\n        this.node = node;\n        this.logger = logger;\n        this.isolated = false;\n        // stream mode changes via DYN_MODE\n        this.mode$ = new BehaviorSubject(undefined);\n        // registered hook listeners\n        this.listeners = new Map();\n        // works in AfterViewInit\n        this.valueChanges = (time = 50) => {\n            // this omit the consecutive changes while patching a Form Array\n            // the more complex the form is, the more debounce would be needed\n            return this.form.valueChanges.pipe(debounceTime(time));\n        };\n    }\n    // easier <dyn-form #dyn> and dyn.control.*\n    get control() {\n        return this.node.control;\n    }\n    ngOnInit() {\n        var _a, _b, _c;\n        // figure out the control to use\n        if (!this.isolated && !this.form && this.node.parent) {\n            // use the parent DynFormTreeNode control\n            this.form = this.node.parent.control;\n        }\n        else {\n            // incoming form is mandatory\n            if (!(this.form instanceof FormGroup)) {\n                throw this.logger.rootForm();\n            }\n        }\n        // manually register the node\n        this.node.setControl(this.form);\n        this.node.load({\n            isolated: Boolean(this.isolated),\n            controls: (_a = this.config) === null || _a === void 0 ? void 0 : _a.controls,\n            errorMsgs: (_b = this.config) === null || _b === void 0 ? void 0 : _b.errorMsgs,\n        });\n        this.logger.nodeLoaded('dyn-form', this.node);\n        this.configLayer = Injector.create({\n            parent: this.injector,\n            providers: [\n                {\n                    provide: DYN_MODE,\n                    useValue: this.mode$,\n                },\n                // TODO merge with parent values\n                {\n                    provide: DYN_MODE_DEFAULTS,\n                    useValue: (_c = this.config) === null || _c === void 0 ? void 0 : _c.modes,\n                },\n                {\n                    provide: DynFormMode,\n                    useClass: DynFormMode,\n                    deps: [\n                        DYN_MODE,\n                        DYN_MODE_DEFAULTS,\n                    ],\n                }\n            ],\n        });\n        // prevent ExpressionChangedAfterItHasBeenCheckedError\n        this.ref.detectChanges();\n    }\n    ngAfterViewInit() {\n        this.node.markAsLoaded();\n        this.node.loaded$\n            .pipe(filter(Boolean))\n            .subscribe(() => {\n            this.logger.formCycle('loaded$.setupListeners');\n            // trigger processes once the form hierarchy is built\n            this.node.setupListeners();\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.mode) {\n            this.mode$.next(this.mode);\n        }\n    }\n    ngOnDestroy() {\n        this.mode$.complete();\n    }\n    /**\n     * API\n     */\n    whenReady() {\n        return this.node.loaded$.pipe(filter(Boolean), first());\n    }\n    // notify the dynControls about the incoming data\n    patchValue(value) {\n        this.whenReady().pipe(tap(() => {\n            this.node.markAsPending();\n            this.logger.formCycle('PrePatch');\n            this.callHook('PrePatch', value);\n        }), delay(20), // waits any PrePatch loading change\n        switchMap(() => {\n            this.node.markAsLoaded();\n            return this.whenReady();\n        }), tap(() => {\n            this.logger.formCycle('PostPatch', this.form.value);\n            this.form.patchValue(value);\n            this.callHook('PostPatch', value);\n        })).subscribe();\n    }\n    // update the validators programatically\n    validate() {\n        this.callHook('UpdateValidity', null, true);\n    }\n    // call a hook in the dynControls using plain/hierarchical data\n    callHook(hook, payload, plain = false) {\n        var _a;\n        this.node.children.forEach(node => {\n            const fieldName = node.name;\n            // validate the expected payload\n            if (!plain && (!payload || !fieldName || !Object.prototype.hasOwnProperty.call(payload, fieldName))) {\n                return;\n            }\n            node.callHook({\n                hook,\n                payload: !plain ? payload[fieldName] : payload,\n                plain,\n            });\n        });\n        // invoke listeners after the field hooks\n        if (this.listeners.has(hook)) {\n            (_a = this.listeners.get(hook)) === null || _a === void 0 ? void 0 : _a.map(listener => listener(payload));\n        }\n    }\n    // register hook listener\n    addHookListener(hook, listener) {\n        if (!this.listeners.has(hook)) {\n            this.listeners.set(hook, []);\n        }\n        this.listeners.get(hook).push(listener);\n    }\n}\nDynFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormComponent, deps: [{ token: INJECTOR }, { token: i0.ChangeDetectorRef }, { token: i1.DynFormTreeNode }, { token: i2.DynLogger }], target: i0.ɵɵFactoryTarget.Component });\nDynFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynFormComponent, selector: \"dyn-form\", inputs: { isolated: \"isolated\", form: \"form\", config: \"config\", mode: \"mode\" }, providers: [DynFormTreeNode], usesOnChanges: true, ngImport: i0, template: \"\\n<ng-content></ng-content>\\n\\n<ng-container *ngIf=\\\"config\\\">\\n  <dyn-factory\\n    *ngFor=\\\"let control of config.controls; index as i\\\"\\n    [config]=\\\"control\\\"\\n    [injector]=\\\"configLayer\\\"\\n    [index]=\\\"i\\\"\\n  ></dyn-factory>\\n</ng-container>\\n\", components: [{ type: DynFactoryComponent, selector: \"dyn-factory\", inputs: [\"config\", \"index\", \"injector\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-form',\n                    templateUrl: './form.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [DynFormTreeNode],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector, decorators: [{\n                    type: Inject,\n                    args: [INJECTOR]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i1.DynFormTreeNode }, { type: i2.DynLogger }]; }, propDecorators: { isolated: [{\n                type: Input\n            }], form: [{\n                type: Input\n            }], config: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }] } });\n\n/**\n * This component just wraps the incoming controls in a FormGroup.\n */\nclass DynGroupComponent extends DynControlNode {\n    constructor(injector, logger) {\n        super(injector);\n        this.logger = logger;\n        this.isolated = false;\n    }\n    ngOnInit() {\n        var _a;\n        super.ngOnInit();\n        if (((_a = this.node.parent) === null || _a === void 0 ? void 0 : _a.instance) === DynInstanceType.Container) {\n            this.node.parent.childsIncrement();\n        }\n        this.node.setControl(this.group);\n        this.node.load({\n            name: this.name,\n            controls: this.controls,\n            isolated: Boolean(this.isolated),\n        });\n        // log the successful initialization\n        this.logger.nodeLoaded('dyn-group', this.node);\n    }\n    ngAfterViewInit() {\n        this.node.markAsLoaded();\n    }\n}\nDynGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynGroupComponent, deps: [{ token: i0.Injector }, { token: i2.DynLogger }], target: i0.ɵɵFactoryTarget.Component });\nDynGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.13\", type: DynGroupComponent, selector: \"dyn-group\", inputs: { isolated: \"isolated\", group: \"group\", name: \"name\", controls: \"controls\" }, providers: [DynFormTreeNode], usesInheritance: true, ngImport: i0, template: \"<dyn-factory\\n  *ngFor=\\\"let control of controls; index as i\\\"\\n  [config]=\\\"control\\\"\\n  [index]=\\\"i\\\"\\n></dyn-factory>\\n\", components: [{ type: DynFactoryComponent, selector: \"dyn-factory\", inputs: [\"config\", \"index\", \"injector\"] }], directives: [{ type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'dyn-group',\n                    templateUrl: './group.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [DynFormTreeNode],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i2.DynLogger }]; }, propDecorators: { isolated: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], controls: [{\n                type: Input\n            }] } });\n\nclass DynFormsModule {\n    static forFeature(args) {\n        return {\n            ngModule: DynFormsModule,\n            providers: getModuleProviders(args),\n        };\n    }\n}\nDynFormsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDynFormsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormsModule, declarations: [DynFactoryComponent, DynFormComponent, DynGroupComponent], imports: [CommonModule, ReactiveFormsModule], exports: [DynFactoryComponent, DynFormComponent, DynGroupComponent] });\nDynFormsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormsModule, imports: [[CommonModule, ReactiveFormsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.13\", ngImport: i0, type: DynFormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ReactiveFormsModule],\n                    declarations: [DynFactoryComponent, DynFormComponent, DynGroupComponent],\n                    entryComponents: [DynFactoryComponent, DynFormComponent, DynGroupComponent],\n                    exports: [DynFactoryComponent, DynFormComponent, DynGroupComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DynFactoryComponent, DynFormComponent, DynFormsModule, DynGroupComponent };\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n/* globals document: false */\nvar documentDotAll = typeof document === 'object' && typeof document.all === 'undefined' && document.all !== undefined ? document.all : {};\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (value === documentDotAll) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (typeof value === 'function' && !value.prototype) { return true; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (value === documentDotAll) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (typeof value === 'function' && !value.prototype) { return true; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\treturn strClass === fnClass || strClass === genClass;\n\t};\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, undefined, i));\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n","import * as i0 from '@angular/core';\nimport { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardContent {\n}\nMatCardContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardContent, selector: \"mat-card-content, [mat-card-content], [matCardContent]\", host: { classAttribute: \"mat-card-content\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                    host: { 'class': 'mat-card-content' },\n                }]\n        }] });\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardTitle, selector: \"mat-card-title, [mat-card-title], [matCardTitle]\", host: { classAttribute: \"mat-card-title\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                    host: {\n                        'class': 'mat-card-title',\n                    },\n                }]\n        }] });\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardSubtitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardSubtitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardSubtitle, selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\", host: { classAttribute: \"mat-card-subtitle\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardSubtitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                    host: {\n                        'class': 'mat-card-subtitle',\n                    },\n                }]\n        }] });\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardActions.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardActions, selector: \"mat-card-actions\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-card-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-card-actions\" }, exportAs: [\"matCardActions\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-actions',\n                    exportAs: 'matCardActions',\n                    host: {\n                        'class': 'mat-card-actions',\n                        '[class.mat-card-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardFooter, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardFooter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardFooter, selector: \"mat-card-footer\", host: { classAttribute: \"mat-card-footer\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardFooter, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-footer',\n                    host: { 'class': 'mat-card-footer' },\n                }]\n        }] });\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardImage, selector: \"[mat-card-image], [matCardImage]\", host: { classAttribute: \"mat-card-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-image], [matCardImage]',\n                    host: { 'class': 'mat-card-image' },\n                }]\n        }] });\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardSmImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardSmImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardSmImage, selector: \"[mat-card-sm-image], [matCardImageSmall]\", host: { classAttribute: \"mat-card-sm-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardSmImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\n                    host: { 'class': 'mat-card-sm-image' },\n                }]\n        }] });\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardMdImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardMdImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardMdImage, selector: \"[mat-card-md-image], [matCardImageMedium]\", host: { classAttribute: \"mat-card-md-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardMdImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\n                    host: { 'class': 'mat-card-md-image' },\n                }]\n        }] });\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardLgImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardLgImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardLgImage, selector: \"[mat-card-lg-image], [matCardImageLarge]\", host: { classAttribute: \"mat-card-lg-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardLgImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\n                    host: { 'class': 'mat-card-lg-image' },\n                }]\n        }] });\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardXlImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardXlImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardXlImage, selector: \"[mat-card-xl-image], [matCardImageXLarge]\", host: { classAttribute: \"mat-card-xl-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardXlImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                    host: { 'class': 'mat-card-xl-image' },\n                }]\n        }] });\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardAvatar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardAvatar, selector: \"[mat-card-avatar], [matCardAvatar]\", host: { classAttribute: \"mat-card-avatar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-avatar], [matCardAvatar]',\n                    host: { 'class': 'mat-card-avatar' },\n                }]\n        }] });\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCard, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatCard.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCard, selector: \"mat-card\", host: { properties: { \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-card mat-focus-indicator\" }, exportAs: [\"matCard\"], ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\", styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCard, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card', exportAs: 'matCard', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-card mat-focus-indicator',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\", styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardHeader, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatCardHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardHeader, selector: \"mat-card-header\", host: { classAttribute: \"mat-card-header\" }, ngImport: i0, template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { 'class': 'mat-card-header' }, template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\" }]\n        }] });\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardTitleGroup, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatCardTitleGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCardTitleGroup, selector: \"mat-card-title-group\", host: { classAttribute: \"mat-card-title-group\" }, ngImport: i0, template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardTitleGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card-title-group', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { 'class': 'mat-card-title-group' }, template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\" }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatCardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardModule, declarations: [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar], imports: [MatCommonModule], exports: [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule] });\nMatCardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [\n                        MatCard,\n                        MatCardHeader,\n                        MatCardTitleGroup,\n                        MatCardContent,\n                        MatCardTitle,\n                        MatCardSubtitle,\n                        MatCardActions,\n                        MatCardFooter,\n                        MatCardSmImage,\n                        MatCardMdImage,\n                        MatCardLgImage,\n                        MatCardImage,\n                        MatCardXlImage,\n                        MatCardAvatar,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatCard,\n                        MatCardHeader,\n                        MatCardTitleGroup,\n                        MatCardContent,\n                        MatCardTitle,\n                        MatCardSubtitle,\n                        MatCardActions,\n                        MatCardFooter,\n                        MatCardSmImage,\n                        MatCardMdImage,\n                        MatCardLgImage,\n                        MatCardImage,\n                        MatCardXlImage,\n                        MatCardAvatar,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n","import * as i1 from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport * as i2 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i3 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true,\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nconst _MatCheckboxBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxBase {\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this.defaultColor = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    /** Whether the checkbox is required. */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    ngAfterViewChecked() { }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        const clickAction = this._options?.clickAction;\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /** Focuses the checkbox. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix =\n                    newState === 1 /* Checked */\n                        ? 'unchecked-checked'\n                        : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix =\n                    newState === 2 /* Unchecked */\n                        ? 'checked-unchecked'\n                        : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix =\n                    newState === 1 /* Checked */\n                        ? 'indeterminate-checked'\n                        : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCheckbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }, { token: i0.NgZone }, { token: 'tabindex', attribute: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_CHECKBOX_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCheckbox, selector: \"mat-checkbox\", inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], id: \"id\", required: \"required\", labelPosition: \"labelPosition\", name: \"name\", value: \"value\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"class.mat-checkbox-indeterminate\": \"indeterminate\", \"class.mat-checkbox-checked\": \"checked\", \"class.mat-checkbox-disabled\": \"disabled\", \"class.mat-checkbox-label-before\": \"labelPosition == \\\"before\\\"\", \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-checkbox\" }, providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], exportAs: [\"matCheckbox\"], usesInheritance: true, ngImport: i0, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _animationMode === 'NoopAnimations' ? 0 : 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-ripple{outline:solid 3px}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}\\n\"], directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i3.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', exportAs: 'matCheckbox', host: {\n                        'class': 'mat-checkbox',\n                        '[id]': 'id',\n                        '[attr.tabindex]': 'null',\n                        '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                        '[class.mat-checkbox-checked]': 'checked',\n                        '[class.mat-checkbox-disabled]': 'disabled',\n                        '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    }, providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR], inputs: ['disableRipple', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _animationMode === 'NoopAnimations' ? 0 : 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-ripple{outline:solid 3px}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], id: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], indeterminateChange: [{\n                type: Output\n            }], value: [{\n                type: Input\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], checked: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], indeterminate: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCheckboxRequiredValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCheckboxRequiredValidator, selector: \"mat-checkbox[required][formControlName],\\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]\", providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                    providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n_MatCheckboxRequiredValidatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] });\n_MatCheckboxRequiredValidatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MatCheckboxRequiredValidator],\n                    declarations: [MatCheckboxRequiredValidator],\n                }]\n        }] });\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCheckboxModule, declarations: [MatCheckbox], imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule], exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule] });\nMatCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCheckboxModule, imports: [[MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule],\n                    exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                    declarations: [MatCheckbox],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n","import * as i4 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i9 from '@angular/cdk/overlay';\nimport { Overlay, FlexibleConnectedPositionStrategy, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i8 from '@angular/cdk/portal';\nimport { ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, Optional, SkipSelf, InjectionToken, Inject, ViewChild, forwardRef, Directive, Attribute, ContentChild, InjectFlags, Self, TemplateRef, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i1$1 from '@angular/material/core';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor, mixinErrorState, MatCommonModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport * as i2 from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { trigger, transition, animate, keyframes, style, state } from '@angular/animations';\nimport * as i2$2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl } from '@angular/forms';\nimport * as i2$1 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Datepicker data that requires internationalization. */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the calendar popup (used by screen readers). */\n        this.calendarLabel = 'Calendar';\n        /** A label for the button used to open the calendar popup (used by screen readers). */\n        this.openCalendarLabel = 'Open calendar';\n        /** Label for the button used to close the calendar popup. */\n        this.closeCalendarLabel = 'Close calendar';\n        /** A label for the previous month button (used by screen readers). */\n        this.prevMonthLabel = 'Previous month';\n        /** A label for the next month button (used by screen readers). */\n        this.nextMonthLabel = 'Next month';\n        /** A label for the previous year button (used by screen readers). */\n        this.prevYearLabel = 'Previous year';\n        /** A label for the next year button (used by screen readers). */\n        this.nextYearLabel = 'Next year';\n        /** A label for the previous multi-year button (used by screen readers). */\n        this.prevMultiYearLabel = 'Previous 24 years';\n        /** A label for the next multi-year button (used by screen readers). */\n        this.nextMultiYearLabel = 'Next 24 years';\n        /** A label for the 'switch to month view' button (used by screen readers). */\n        this.switchToMonthViewLabel = 'Choose date';\n        /** A label for the 'switch to year view' button (used by screen readers). */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /** Formats a range of years. */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatDatepickerIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n        this.compareValue = compareValue;\n        this.rawValue = rawValue;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MatCalendarBody {\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** The number of columns in the table. */\n        this.numCols = 7;\n        /** The cell number of the active cell in the table. */\n        this.activeCell = 0;\n        /** Whether a range is being selected. */\n        this.isRange = false;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /** Start of the preview range. */\n        this.previewStart = null;\n        /** End of the preview range. */\n        this.previewEnd = null;\n        /** Emits when a new value is selected. */\n        this.selectedValueChange = new EventEmitter();\n        /** Emits when the preview has changed as a result of a user action. */\n        this.previewChange = new EventEmitter();\n        /**\n         * Event handler for when the user enters an element\n         * inside the calendar body (e.g. by hovering in or focus).\n         */\n        this._enterHandler = (event) => {\n            if (this._skipNextFocus && event.type === 'focus') {\n                this._skipNextFocus = false;\n                return;\n            }\n            // We only need to hit the zone when we're selecting a range.\n            if (event.target && this.isRange) {\n                const cell = this._getCellFromElement(event.target);\n                if (cell) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\n                }\n            }\n        };\n        /**\n         * Event handler for when the user's pointer leaves an element\n         * inside the calendar body (e.g. by hovering out or blurring).\n         */\n        this._leaveHandler = (event) => {\n            // We only need to hit the zone when we're selecting a range.\n            if (this.previewEnd !== null && this.isRange) {\n                // Only reset the preview end value when leaving cells. This looks better, because\n                // we have a gap between the cells and the rows and we don't want to remove the\n                // range just for it to show up again when the user moves a few pixels to the side.\n                if (event.target && isTableCell(event.target)) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\n                }\n            }\n        };\n        _ngZone.runOutsideAngular(() => {\n            const element = _elementRef.nativeElement;\n            element.addEventListener('mouseenter', this._enterHandler, true);\n            element.addEventListener('focus', this._enterHandler, true);\n            element.addEventListener('mouseleave', this._leaveHandler, true);\n            element.addEventListener('blur', this._leaveHandler, true);\n        });\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit({ value: cell.value, event });\n        }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n        return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${(50 * this.cellAspectRatio) / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mouseenter', this._enterHandler, true);\n        element.removeEventListener('focus', this._enterHandler, true);\n        element.removeEventListener('mouseleave', this._leaveHandler, true);\n        element.removeEventListener('blur', this._leaveHandler, true);\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview = true) {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    if (!movePreview) {\n                        this._skipNextFocus = true;\n                    }\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n        return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n        return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n        return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n        return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n        if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let previousCell = this.rows[rowIndex][colIndex - 1];\n        if (!previousCell) {\n            const previousRow = this.rows[rowIndex - 1];\n            previousCell = previousRow && previousRow[previousRow.length - 1];\n        }\n        return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n        if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let nextCell = this.rows[rowIndex][colIndex + 1];\n        if (!nextCell) {\n            const nextRow = this.rows[rowIndex + 1];\n            nextCell = nextRow && nextRow[0];\n        }\n        return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n        return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n        return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n        // Note that we don't need to null check the start/end\n        // here, because the `value` will always be defined.\n        return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n        return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n        return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n        return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n        let cell;\n        if (isTableCell(element)) {\n            cell = element;\n        }\n        else if (isTableCell(element.parentNode)) {\n            cell = element.parentNode;\n        }\n        if (cell) {\n            const row = cell.getAttribute('data-mat-row');\n            const col = cell.getAttribute('data-mat-col');\n            if (row && col) {\n                return this.rows[parseInt(row)][parseInt(col)];\n            }\n        }\n        return null;\n    }\n}\nMatCalendarBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCalendarBody, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatCalendarBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: { label: \"label\", rows: \"rows\", todayValue: \"todayValue\", startValue: \"startValue\", endValue: \"endValue\", labelMinRequiredCells: \"labelMinRequiredCells\", numCols: \"numCols\", activeCell: \"activeCell\", isRange: \"isRange\", cellAspectRatio: \"cellAspectRatio\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", previewStart: \"previewStart\", previewEnd: \"previewEnd\" }, outputs: { selectedValueChange: \"selectedValueChange\", previewChange: \"previewChange\" }, host: { classAttribute: \"mat-calendar-body\" }, exportAs: [\"matCalendarBody\"], usesOnChanges: true, ngImport: i0, template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    This cell is purely decorative, but we can't put `aria-hidden` or `role=\\\"presentation\\\"` on it,\\n    because it throws off the week days for the rest of the row on NVDA. The aspect ratio of the\\n    table cells is maintained by setting the top and bottom padding as a percentage of the width\\n    (a variant of the trick described here: https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      [attr.aria-current]=\\\"todayValue === item.compareValue ? 'date' : null\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\", styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCalendarBody, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-calendar-body]', host: {\n                        'class': 'mat-calendar-body',\n                    }, exportAs: 'matCalendarBody', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    This cell is purely decorative, but we can't put `aria-hidden` or `role=\\\"presentation\\\"` on it,\\n    because it throws off the week days for the rest of the row on NVDA. The aspect ratio of the\\n    table cells is maintained by setting the top and bottom padding as a percentage of the width\\n    (a variant of the trick described here: https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      [attr.aria-current]=\\\"todayValue === item.compareValue ? 'date' : null\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\", styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { label: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], todayValue: [{\n                type: Input\n            }], startValue: [{\n                type: Input\n            }], endValue: [{\n                type: Input\n            }], labelMinRequiredCells: [{\n                type: Input\n            }], numCols: [{\n                type: Input\n            }], activeCell: [{\n                type: Input\n            }], isRange: [{\n                type: Input\n            }], cellAspectRatio: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], previewStart: [{\n                type: Input\n            }], previewEnd: [{\n                type: Input\n            }], selectedValueChange: [{\n                type: Output\n            }], previewChange: [{\n                type: Output\n            }] } });\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n    return node.nodeName === 'TD';\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n    return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n    return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n    return (rangeEnabled &&\n        start !== null &&\n        end !== null &&\n        start !== end &&\n        value >= start &&\n        value <= end);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A class representing a range of dates. */\nclass DateRange {\n    constructor(\n    /** The start date of the range. */\n    start, \n    /** The end date of the range. */\n    end) {\n        this.start = start;\n        this.end = end;\n    }\n}\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\nclass MatDateSelectionModel {\n    constructor(\n    /** The current selection. */\n    selection, _adapter) {\n        this.selection = selection;\n        this._adapter = _adapter;\n        this._selectionChanged = new Subject();\n        /** Emits when the selection has changed. */\n        this.selectionChanged = this._selectionChanged;\n        this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n        const oldValue = this.selection;\n        this.selection = value;\n        this._selectionChanged.next({ selection: value, source, oldValue });\n    }\n    ngOnDestroy() {\n        this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n        return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n}\nMatDateSelectionModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDateSelectionModel, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Injectable });\nMatDateSelectionModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDateSelectionModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined }, { type: i1$1.DateAdapter }]; } });\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\nclass MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n        super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n        return this.selection != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatSingleDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatSingleDateSelectionModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatSingleDateSelectionModel, deps: [{ token: i1$1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nMatSingleDateSelectionModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatSingleDateSelectionModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatSingleDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DateAdapter }]; } });\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\nclass MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n        let { start, end } = this.selection;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        const { start, end } = this.selection;\n        // Empty ranges are valid.\n        if (start == null && end == null) {\n            return true;\n        }\n        // Complete ranges are only valid if both dates are valid and the start is before the end.\n        if (start != null && end != null) {\n            return (this._isValidDateInstance(start) &&\n                this._isValidDateInstance(end) &&\n                this._adapter.compareDate(start, end) <= 0);\n        }\n        // Partial ranges are valid if the start/end is valid.\n        return ((start == null || this._isValidDateInstance(start)) &&\n            (end == null || this._isValidDateInstance(end)));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n        return this.selection.start != null && this.selection.end != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatRangeDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatRangeDateSelectionModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRangeDateSelectionModel, deps: [{ token: i1$1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nMatRangeDateSelectionModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRangeDateSelectionModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRangeDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DateAdapter }]; } });\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nclass DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n        this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n        let { start, end } = currentRange;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n        let start = null;\n        let end = null;\n        if (currentRange.start && !currentRange.end && activeDate) {\n            start = currentRange.start;\n            end = activeDate;\n        }\n        return new DateRange(start, end);\n    }\n}\nDefaultMatCalendarRangeStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultMatCalendarRangeStrategy, deps: [{ token: i1$1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nDefaultMatCalendarRangeStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultMatCalendarRangeStrategy });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultMatCalendarRangeStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DateAdapter }]; } });\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n    return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n    deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n    useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nclass MatMonthView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rangeStrategy = _rangeStrategy;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new date is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n        const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n        if (comparisonChange && !comparisonChange.firstChange) {\n            this._setRanges(this.selected);\n        }\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n        const date = event.value;\n        const selectedYear = this._dateAdapter.getYear(this.activeDate);\n        const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n        const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n        let rangeStartDate;\n        let rangeEndDate;\n        if (this._selected instanceof DateRange) {\n            rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n            rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n        }\n        else {\n            rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n        }\n        if (rangeStartDate !== date || rangeEndDate !== date) {\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit({ value: selectedDate, event: event.event });\n        this._previewStart = this._previewEnd = null;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey\n                    ? this._dateAdapter.addCalendarYears(this._activeDate, -1)\n                    : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey\n                    ? this._dateAdapter.addCalendarYears(this._activeDate, 1)\n                    : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._selectionKeyPressed = true;\n                if (this._canSelect(this._activeDate)) {\n                    // Prevent unexpected default actions such as form submission.\n                    // Note that we only prevent the default action here while the selection happens in\n                    // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                    // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                    // because it's too late (see #23305).\n                    event.preventDefault();\n                }\n                return;\n            case ESCAPE:\n                // Abort the current range selection if the user presses escape mid-selection.\n                if (this._previewEnd != null && !hasModifierKey(event)) {\n                    this._previewStart = this._previewEnd = null;\n                    this.selectedChange.emit(null);\n                    this._userSelection.emit({ value: null, event });\n                    event.preventDefault();\n                    event.stopPropagation(); // Prevents the overlay from closing.\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed && this._canSelect(this._activeDate)) {\n                this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    /** Initializes this month view. */\n    _init() {\n        this._setRanges(this.selected);\n        this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n        this._monthLabel = this._dateFormats.display.monthLabel\n            ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel)\n            : this._dateAdapter\n                .getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK +\n                this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) %\n                DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n        this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({ event, value: cell }) {\n        if (this._rangeStrategy) {\n            // We can assume that this will be a range, because preview\n            // events aren't fired for single date selections.\n            const value = cell ? cell.rawValue : null;\n            const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n            this._previewStart = this._getCellCompareValue(previewRange.start);\n            this._previewEnd = this._getCellCompareValue(previewRange.end);\n            // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n            // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n            // when navigating one month back using the keyboard which will cause this handler\n            // to throw a \"changed after checked\" error when updating the preview state.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        let weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this._shouldEnableDate(date);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n            this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n        }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n        return (!!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date)));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate)\n            ? this._dateAdapter.getDate(date)\n            : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 &&\n            d2 &&\n            this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n        if (date) {\n            // We use the time since the Unix epoch to compare dates in this view, rather than the\n            // cell values, because we need to support ranges that span across multiple months/years.\n            const year = this._dateAdapter.getYear(date);\n            const month = this._dateAdapter.getMonth(date);\n            const day = this._dateAdapter.getDate(date);\n            return new Date(year, month, day).getTime();\n        }\n        return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n        if (selectedValue instanceof DateRange) {\n            this._rangeStart = this._getCellCompareValue(selectedValue.start);\n            this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n            this._isRange = true;\n        }\n        else {\n            this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n            this._isRange = false;\n        }\n        this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n        this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n    /** Gets whether a date can be selected in the month view. */\n    _canSelect(date) {\n        return !this.dateFilter || this.dateFilter(date);\n    }\n}\nMatMonthView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatMonthView, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_DATE_FORMATS, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }, { token: MAT_DATE_RANGE_SELECTION_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatMonthView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatMonthView, selector: \"mat-month-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matMonthView\"], usesOnChanges: true, ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <!-- For the day-of-the-week column header, we use an `<abbr>` element because VoiceOver\\n           ignores the `aria-label`. ChromeVox, however, does not read the full name\\n           for the `<abbr>`, so we still set `aria-label` on the header element. -->\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">\\n        <abbr class=\\\"mat-calendar-abbr\\\" [attr.title]=\\\"day.long\\\">{{day.narrow}}</abbr>\\n      </th>\\n    </tr>\\n    <tr><th aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", components: [{ type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\"], exportAs: [\"matCalendarBody\"] }], directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatMonthView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-month-view', exportAs: 'matMonthView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <!-- For the day-of-the-week column header, we use an `<abbr>` element because VoiceOver\\n           ignores the `aria-label`. ChromeVox, however, does not read the full name\\n           for the `<abbr>`, so we still set `aria-label` on the header element. -->\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">\\n        <abbr class=\\\"mat-calendar-abbr\\\" [attr.title]=\\\"day.long\\\">{{day.narrow}}</abbr>\\n      </th>\\n    </tr>\\n    <tr><th aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], _userSelection: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nclass MatMultiYearView {\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new year is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected year. This doesn't imply a change on the selected date */\n        this.yearSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n        const year = event.value;\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage -\n                    getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) -\n                    1);\n                break;\n            case PAGE_UP:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                // Note that we only prevent the default action here while the selection happens in\n                // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                // because it's too late (see #23305).\n                this._selectionKeyPressed = true;\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed) {\n                this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n        const date = this._dateAdapter.createDate(year, 0, 1);\n        const yearName = this._dateAdapter.getYearName(date);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined ||\n            year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n        this._selectedYear = null;\n        if (value instanceof DateRange) {\n            const displayValue = value.start || value.end;\n            if (displayValue) {\n                this._selectedYear = this._dateAdapter.getYear(displayValue);\n            }\n        }\n        else if (value) {\n            this._selectedYear = this._dateAdapter.getYear(value);\n        }\n    }\n}\nMatMultiYearView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatMultiYearView, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatMultiYearView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatMultiYearView, selector: \"mat-multi-year-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matMultiYearView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", components: [{ type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\"], exportAs: [\"matCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatMultiYearView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-multi-year-view', exportAs: 'matMultiYearView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    const year1 = dateAdapter.getYear(date1);\n    const year2 = dateAdapter.getYear(date2);\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return (Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage));\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo(activeYear - getStartingYear(dateAdapter, minDate, maxDate), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    let startingYear = 0;\n    if (maxDate) {\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n    return ((a % b) + b) % b;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nclass MatYearView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new month is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected month. This doesn't imply a change on the selected date */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n        const month = event.value;\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                // Note that we only prevent the default action here while the selection happens in\n                // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                // because it's too late (see #23305).\n                this._selectionKeyPressed = true;\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed) {\n                this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    /** Initializes this year view. */\n    _init() {\n        this._setSelectedMonth(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [\n            [0, 1, 2, 3],\n            [4, 5, 6, 7],\n            [8, 9, 10, 11],\n        ].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate)\n            ? this._dateAdapter.getMonth(date)\n            : null;\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined ||\n            month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n        if (value instanceof DateRange) {\n            this._selectedMonth =\n                this._getMonthInCurrentYear(value.start) || this._getMonthInCurrentYear(value.end);\n        }\n        else {\n            this._selectedMonth = this._getMonthInCurrentYear(value);\n        }\n    }\n}\nMatYearView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatYearView, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_DATE_FORMATS, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatYearView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatYearView, selector: \"mat-year-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matYearView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", components: [{ type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\"], exportAs: [\"matCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatYearView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-year-view', exportAs: 'matYearView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs. */\nlet uniqueId = 0;\n/** Default header for MatCalendar */\nclass MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._buttonDescriptionId = `mat-calendar-button-${uniqueId++}`;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The label for the current calendar view. */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        const minYearOfPage = activeYear -\n            getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month'\n            ? this._intl.switchToMultiYearViewLabel\n            : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel,\n        }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel,\n        }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n        this.calendar.activeDate =\n            this.calendar.currentView == 'month'\n                ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)\n                : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n        this.calendar.activeDate =\n            this.calendar.currentView == 'month'\n                ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)\n                : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return (!this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate));\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n        return (!this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate));\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return (this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2));\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCalendarHeader, deps: [{ token: MatDatepickerIntl }, { token: forwardRef(() => MatCalendar) }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatCalendarHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCalendarHeader, selector: \"mat-calendar-header\", exportAs: [\"matCalendarHeader\"], ngImport: i0, template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <svg class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"\\n           viewBox=\\\"0 0 10 5\\\" focusable=\\\"false\\\">\\n           <polygon points=\\\"0,0 5,5 10,0\\\"/>\\n      </svg>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\", components: [{ type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i4.CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: [\"cdkAriaLive\"], exportAs: [\"cdkAriaLive\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCalendarHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-calendar-header', exportAs: 'matCalendarHeader', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <svg class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"\\n           viewBox=\\\"0 0 10 5\\\" focusable=\\\"false\\\">\\n           <polygon points=\\\"0,0 5,5 10,0\\\"/>\\n      </svg>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatCalendar)]\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i0.ChangeDetectorRef }]; } });\n/** A calendar that is used as part of the datepicker. */\nclass MatCalendar {\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /** Whether the calendar should be started in month or year view. */\n        this.startView = 'month';\n        /** Emits when the currently selected date changes. */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() {\n        return this._startAt;\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() {\n        return this._clampedActiveDate;\n    }\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() {\n        return this._currentView;\n    }\n    set currentView(value) {\n        const viewChangedResult = this._currentView !== value ? value : null;\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n        if (viewChangedResult) {\n            this.viewChanged.emit(viewChangedResult);\n        }\n    }\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /** Focuses the active date. */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        this._getCurrentViewComponent()._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n        const date = event.value;\n        if (this.selected instanceof DateRange ||\n            (date && !this._dateAdapter.sameDate(date, this.selected))) {\n            this.selectedChange.emit(date);\n        }\n        this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n        // The return type is explicitly written as a union to ensure that the Closure compiler does\n        // not optimize calls to _init(). Without the explict return type, TypeScript narrows it to\n        // only the first component type. See https://github.com/angular/components/issues/22996.\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCalendar, deps: [{ token: MatDatepickerIntl }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatCalendar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatCalendar, selector: \"mat-calendar\", inputs: { headerComponent: \"headerComponent\", startAt: \"startAt\", startView: \"startView\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", _userSelection: \"_userSelection\" }, host: { classAttribute: \"mat-calendar\" }, providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER], viewQueries: [{ propertyName: \"monthView\", first: true, predicate: MatMonthView, descendants: true }, { propertyName: \"yearView\", first: true, predicate: MatYearView, descendants: true }, { propertyName: \"multiYearView\", first: true, predicate: MatMultiYearView, descendants: true }], exportAs: [\"matCalendar\"], usesOnChanges: true, ngImport: i0, template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\", styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-abbr{text-decoration:none}\\n\"], components: [{ type: MatMonthView, selector: \"mat-month-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\"], outputs: [\"selectedChange\", \"_userSelection\", \"activeDateChange\"], exportAs: [\"matMonthView\"] }, { type: MatYearView, selector: \"mat-year-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\"], outputs: [\"selectedChange\", \"monthSelected\", \"activeDateChange\"], exportAs: [\"matYearView\"] }, { type: MatMultiYearView, selector: \"mat-multi-year-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\"], outputs: [\"selectedChange\", \"yearSelected\", \"activeDateChange\"], exportAs: [\"matMultiYearView\"] }], directives: [{ type: i8.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }, { type: i4.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }, { type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatCalendar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-calendar', host: {\n                        'class': 'mat-calendar',\n                    }, exportAs: 'matCalendar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER], template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\", styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-abbr{text-decoration:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerIntl }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { headerComponent: [{\n                type: Input\n            }], startAt: [{\n                type: Input\n            }], startView: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], viewChanged: [{\n                type: Output\n            }], _userSelection: [{\n                type: Output\n            }], monthView: [{\n                type: ViewChild,\n                args: [MatMonthView]\n            }], yearView: [{\n                type: ViewChild,\n                args: [MatYearView]\n            }], multiYearView: [{\n                type: ViewChild,\n                args: [MatMultiYearView]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        transition('void => enter-dropdown', animate('120ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(1, 0.8)' }),\n            style({ opacity: 1, transform: 'scale(1, 1)' }),\n        ]))),\n        transition('void => enter-dialog', animate('150ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0.7)' }),\n            style({ transform: 'none', opacity: 1 }),\n        ]))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 }))),\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nconst _MatDatepickerContentBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Component used as the content for the datepicker overlay. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the overlay that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MatDatepickerContent extends _MatDatepickerContentBase {\n    constructor(elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy, intl) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._globalModel = _globalModel;\n        this._dateAdapter = _dateAdapter;\n        this._rangeSelectionStrategy = _rangeSelectionStrategy;\n        this._subscriptions = new Subscription();\n        /** Emits when an animation has finished. */\n        this._animationDone = new Subject();\n        /** Portal with projected action buttons. */\n        this._actionsPortal = null;\n        this._closeButtonText = intl.closeCalendarLabel;\n    }\n    ngOnInit() {\n        // If we have actions, clone the model so that we have the ability to cancel the selection,\n        // otherwise update the global model directly. Note that we want to assign this as soon as\n        // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n        this._model = this._actionsPortal ? this._globalModel.clone() : this._globalModel;\n        this._animationState = this.datepicker.touchUi ? 'enter-dialog' : 'enter-dropdown';\n    }\n    ngAfterViewInit() {\n        this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n        const selection = this._model.selection;\n        const value = event.value;\n        const isRange = selection instanceof DateRange;\n        // If we're selecting a range and we have a selection strategy, always pass the value through\n        // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n        // A null value when picking a range means that the user cancelled the selection (e.g. by\n        // pressing escape), whereas when selecting a single value it means that the value didn't\n        // change. This isn't very intuitive, but it's here for backwards-compatibility.\n        if (isRange && this._rangeSelectionStrategy) {\n            const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n            this._model.updateSelection(newSelection, this);\n        }\n        else if (value &&\n            (isRange || !this._dateAdapter.sameDate(value, selection))) {\n            this._model.add(value);\n        }\n        // Delegate closing the overlay to the actions.\n        if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n            this.datepicker.close();\n        }\n    }\n    _startExitAnimation() {\n        this._animationState = 'void';\n        this._changeDetectorRef.markForCheck();\n    }\n    _getSelected() {\n        return this._model.selection;\n    }\n    /** Applies the current pending selection to the global model. */\n    _applyPendingSelection() {\n        if (this._model !== this._globalModel) {\n            this._globalModel.updateSelection(this._model.selection, this);\n        }\n    }\n}\nMatDatepickerContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerContent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MatDateSelectionModel }, { token: i1$1.DateAdapter }, { token: MAT_DATE_RANGE_SELECTION_STRATEGY, optional: true }, { token: MatDatepickerIntl }], target: i0.ɵɵFactoryTarget.Component });\nMatDatepickerContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDatepickerContent, selector: \"mat-datepicker-content\", inputs: { color: \"color\" }, host: { listeners: { \"@transformPanel.done\": \"_animationDone.next()\" }, properties: { \"@transformPanel\": \"_animationState\", \"class.mat-datepicker-content-touch\": \"datepicker.touchUi\" }, classAttribute: \"mat-datepicker-content\" }, viewQueries: [{ propertyName: \"_calendar\", first: true, predicate: MatCalendar, descendants: true }], exportAs: [\"matDatepickerContent\"], usesInheritance: true, ngImport: i0, template: \"<div\\n  cdkTrapFocus\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\", styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"], components: [{ type: MatCalendar, selector: \"mat-calendar\", inputs: [\"headerComponent\", \"startAt\", \"startView\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\"], outputs: [\"selectedChange\", \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\"], exportAs: [\"matCalendar\"] }, { type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i4.CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: [\"cdkTrapFocus\", \"cdkTrapFocusAutoCapture\"], exportAs: [\"cdkTrapFocus\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i8.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerContent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-content', host: {\n                        'class': 'mat-datepicker-content',\n                        '[@transformPanel]': '_animationState',\n                        '(@transformPanel.done)': '_animationDone.next()',\n                        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n                    }, animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar], exportAs: 'matDatepickerContent', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['color'], template: \"<div\\n  cdkTrapFocus\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\", styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatDateSelectionModel }, { type: i1$1.DateAdapter }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n                }] }, { type: MatDatepickerIntl }]; }, propDecorators: { _calendar: [{\n                type: ViewChild,\n                args: [MatCalendar]\n            }] } });\n/** Base class for a datepicker. */\nclass MatDatepickerBase {\n    constructor(_overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _model) {\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._model = _model;\n        this._inputStateChanges = Subscription.EMPTY;\n        /** The view that the calendar should start in. */\n        this.startView = 'month';\n        this._touchUi = false;\n        /** Preferred position of the datepicker in the X axis. */\n        this.xPosition = 'start';\n        /** Preferred position of the datepicker in the Y axis. */\n        this.yPosition = 'below';\n        this._restoreFocus = true;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when the datepicker has been opened. */\n        this.openedStream = new EventEmitter();\n        /** Emits when the datepicker has been closed. */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /** The id for the datepicker calendar. */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        /** The element that was focused before the datepicker was opened. */\n        this._focusedElementBeforeOpen = null;\n        /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n        this._backdropHarnessClass = `${this.id}-backdrop`;\n        /** Emits when the datepicker's state changes. */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** The date to open the calendar to initially. */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** Color palette to use on the datepicker's calendar. */\n    get color() {\n        return (this._color || (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined));\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a dropdown and elements have more padding to allow for bigger touch targets.\n     */\n    get touchUi() {\n        return this._touchUi;\n    }\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n        return this._disabled === undefined && this.datepickerInput\n            ? this.datepickerInput.disabled\n            : !!this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /**\n     * Whether to restore focus to the previously-focused element when the calendar is closed.\n     * Note that automatic focus restoration is an accessibility feature and it is recommended that\n     * you provide your own equivalent, if you decide to turn it off.\n     */\n    get restoreFocus() {\n        return this._restoreFocus;\n    }\n    set restoreFocus(value) {\n        this._restoreFocus = coerceBooleanProperty(value);\n    }\n    /**\n     * Classes to be passed to the date picker panel.\n     * Supports string and string array values, similar to `ngClass`.\n     */\n    get panelClass() {\n        return this._panelClass;\n    }\n    set panelClass(value) {\n        this._panelClass = coerceStringArray(value);\n    }\n    /** Whether the calendar is open. */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        coerceBooleanProperty(value) ? this.open() : this.close();\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n    _getDateFilter() {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n    ngOnChanges(changes) {\n        const positionChange = changes['xPosition'] || changes['yPosition'];\n        if (positionChange && !positionChange.firstChange && this._overlayRef) {\n            const positionStrategy = this._overlayRef.getConfig().positionStrategy;\n            if (positionStrategy instanceof FlexibleConnectedPositionStrategy) {\n                this._setConnectedPositions(positionStrategy);\n                if (this.opened) {\n                    this._overlayRef.updatePosition();\n                }\n            }\n        }\n        this.stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n        this._destroyOverlay();\n        this.close();\n        this._inputStateChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n        this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Emits changed view */\n    _viewChanged(view) {\n        this.viewChanged.emit(view);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    registerInput(input) {\n        if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._inputStateChanges.unsubscribe();\n        this.datepickerInput = input;\n        this._inputStateChanges = input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n        return this._model;\n    }\n    /**\n     * Registers a portal containing action buttons with the datepicker.\n     * @param portal Portal to be registered.\n     */\n    registerActions(portal) {\n        if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single actions row.');\n        }\n        this._actionsPortal = portal;\n    }\n    /**\n     * Removes a portal containing action buttons from the datepicker.\n     * @param portal Portal to be removed.\n     */\n    removeActions(portal) {\n        if (portal === this._actionsPortal) {\n            this._actionsPortal = null;\n        }\n    }\n    /** Open the calendar. */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        this._focusedElementBeforeOpen = _getFocusedElementPierceShadowDom();\n        this._openOverlay();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._componentRef) {\n            const instance = this._componentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe(() => this._destroyOverlay());\n        }\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        };\n        if (this._restoreFocus &&\n            this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /** Applies the current pending selection on the overlay to the model. */\n    _applyPendingSelection() {\n        this._componentRef?.instance?._applyPendingSelection();\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n        instance.datepicker = this;\n        instance.color = this.color;\n        instance._actionsPortal = this._actionsPortal;\n    }\n    /** Opens the overlay with the calendar. */\n    _openOverlay() {\n        this._destroyOverlay();\n        const isDialog = this.touchUi;\n        const labelId = this.datepickerInput.getOverlayLabelId();\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        const overlayRef = (this._overlayRef = this._overlay.create(new OverlayConfig({\n            positionStrategy: isDialog ? this._getDialogStrategy() : this._getDropdownStrategy(),\n            hasBackdrop: true,\n            backdropClass: [\n                isDialog ? 'cdk-overlay-dark-backdrop' : 'mat-overlay-transparent-backdrop',\n                this._backdropHarnessClass,\n            ],\n            direction: this._dir,\n            scrollStrategy: isDialog ? this._overlay.scrollStrategies.block() : this._scrollStrategy(),\n            panelClass: `mat-datepicker-${isDialog ? 'dialog' : 'popup'}`,\n        })));\n        const overlayElement = overlayRef.overlayElement;\n        overlayElement.setAttribute('role', 'dialog');\n        if (labelId) {\n            overlayElement.setAttribute('aria-labelledby', labelId);\n        }\n        if (isDialog) {\n            overlayElement.setAttribute('aria-modal', 'true');\n        }\n        this._getCloseStream(overlayRef).subscribe(event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        });\n        this._componentRef = overlayRef.attach(portal);\n        this._forwardContentValues(this._componentRef.instance);\n        // Update the position once the calendar has rendered. Only relevant in dropdown mode.\n        if (!isDialog) {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => overlayRef.updatePosition());\n        }\n    }\n    /** Destroys the current overlay. */\n    _destroyOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = this._componentRef = null;\n        }\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDialogStrategy() {\n        return this._overlay.position().global().centerHorizontally().centerVertically();\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDropdownStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition();\n        return this._setConnectedPositions(strategy);\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n        const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n        const secondaryX = primaryX === 'start' ? 'end' : 'start';\n        const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n        const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n        return strategy.withPositions([\n            {\n                originX: primaryX,\n                originY: secondaryY,\n                overlayX: primaryX,\n                overlayY: primaryY,\n            },\n            {\n                originX: primaryX,\n                originY: primaryY,\n                overlayX: primaryX,\n                overlayY: secondaryY,\n            },\n            {\n                originX: secondaryX,\n                originY: secondaryY,\n                overlayX: secondaryX,\n                overlayY: primaryY,\n            },\n            {\n                originX: secondaryX,\n                originY: primaryY,\n                overlayX: secondaryX,\n                overlayY: secondaryY,\n            },\n        ]);\n    }\n    /** Gets an observable that will emit when the overlay is supposed to be closed. */\n    _getCloseStream(overlayRef) {\n        return merge(overlayRef.backdropClick(), overlayRef.detachments(), overlayRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                (this.datepickerInput && hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW));\n        })));\n    }\n}\nMatDatepickerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerBase, deps: [{ token: i9.Overlay }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: MAT_DATEPICKER_SCROLL_STRATEGY }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }, { token: MatDateSelectionModel }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDatepickerBase, inputs: { calendarHeaderComponent: \"calendarHeaderComponent\", startAt: \"startAt\", startView: \"startView\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", xPosition: \"xPosition\", yPosition: \"yPosition\", restoreFocus: \"restoreFocus\", dateClass: \"dateClass\", panelClass: \"panelClass\", opened: \"opened\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", openedStream: \"opened\", closedStream: \"closed\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i9.Overlay }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: MatDateSelectionModel }]; }, propDecorators: { calendarHeaderComponent: [{\n                type: Input\n            }], startAt: [{\n                type: Input\n            }], startView: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], touchUi: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], restoreFocus: [{\n                type: Input\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], viewChanged: [{\n                type: Output\n            }], dateClass: [{\n                type: Input\n            }], openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], panelClass: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nclass MatDatepicker extends MatDatepickerBase {\n}\nMatDatepicker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepicker, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDatepicker.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDatepicker, selector: \"mat-datepicker\", providers: [\n        MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n        { provide: MatDatepickerBase, useExisting: MatDatepicker },\n    ], exportAs: [\"matDatepicker\"], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepicker, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-datepicker',\n                    template: '',\n                    exportAs: 'matDatepicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n                        { provide: MatDatepickerBase, useExisting: MatDatepicker },\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n    constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    target, \n    /** Reference to the native input element associated with the datepicker input. */\n    targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/** Base class for datepicker inputs. */\nclass MatDatepickerInputBase {\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        /** Emits when a `change` event is fired on this `<input>`. */\n        this.dateChange = new EventEmitter();\n        /** Emits when an `input` event is fired on this `<input>`. */\n        this.dateInput = new EventEmitter();\n        /** Emits when the internal state has changed */\n        this.stateChanges = new Subject();\n        this._onTouched = () => { };\n        this._validatorOnChange = () => { };\n        this._cvaOnChange = () => { };\n        this._valueChangesSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /** The form control validator for whether the input parses. */\n        this._parseValidator = () => {\n            return this._lastValueValid\n                ? null\n                : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /** The form control validator for the date filter. */\n        this._filterValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !controlValue || this._matchesFilter(controlValue)\n                ? null\n                : { 'matDatepickerFilter': true };\n        };\n        /** The form control validator for the min date. */\n        this._minValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const min = this._getMinDate();\n            return !min || !controlValue || this._dateAdapter.compareDate(min, controlValue) <= 0\n                ? null\n                : { 'matDatepickerMin': { 'min': min, 'actual': controlValue } };\n        };\n        /** The form control validator for the max date. */\n        this._maxValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const max = this._getMaxDate();\n            return !max || !controlValue || this._dateAdapter.compareDate(max, controlValue) >= 0\n                ? null\n                : { 'matDatepickerMax': { 'max': max, 'actual': controlValue } };\n        };\n        /** Whether the last value set on the input was valid. */\n        this._lastValueValid = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this._assignValueProgrammatically(this.value);\n        });\n    }\n    /** The value of the input. */\n    get value() {\n        return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n        this._assignValueProgrammatically(value);\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() {\n        return !!this._disabled || this._parentDisabled();\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n        return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n        this._model = model;\n        this._valueChangesSubscription.unsubscribe();\n        if (this._pendingValue) {\n            this._assignValue(this._pendingValue);\n        }\n        this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n            if (this._shouldHandleChangeEvent(event)) {\n                const value = this._getValueFromModel(event.selection);\n                this._lastValueValid = this._isValidValue(value);\n                this._cvaOnChange(value);\n                this._onTouched();\n                this._formatValue(value);\n                this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            }\n        });\n    }\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._valueChangesSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this._assignValueProgrammatically(value);\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._openPopup();\n            event.preventDefault();\n        }\n    }\n    _onInput(value) {\n        const lastValueWasValid = this._lastValueValid;\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = this._isValidValue(date);\n        date = this._dateAdapter.getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this.value)) {\n            this._assignValue(date);\n            this._cvaOnChange(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            // Call the CVA change handler for invalid values\n            // since this is what marks the control as dirty.\n            if (value && !this.value) {\n                this._cvaOnChange(date);\n            }\n            if (lastValueWasValid !== this._lastValueValid) {\n                this._validatorOnChange();\n            }\n        }\n    }\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value = value\n            ? this._dateAdapter.format(value, this._dateFormats.display.dateInput)\n            : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n        // We may get some incoming values before the model was\n        // assigned. Save the value so that we can assign it later.\n        if (this._model) {\n            this._assignValueToModel(value);\n            this._pendingValue = null;\n        }\n        else {\n            this._pendingValue = value;\n        }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n        return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n        return false;\n    }\n    /** Programmatically assigns a value to the input. */\n    _assignValueProgrammatically(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = this._isValidValue(value);\n        value = this._dateAdapter.getValidDateOrNull(value);\n        this._assignValue(value);\n        this._formatValue(value);\n    }\n    /** Gets whether a value matches the current date filter. */\n    _matchesFilter(value) {\n        const filter = this._getDateFilter();\n        return !filter || filter(value);\n    }\n}\nMatDatepickerInputBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerInputBase, deps: [{ token: i0.ElementRef }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerInputBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDatepickerInputBase, inputs: { value: \"value\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerInputBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }]; }, propDecorators: { value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], dateChange: [{\n                type: Output\n            }], dateInput: [{\n                type: Output\n            }] } });\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n    const keys = Object.keys(changes);\n    for (let key of keys) {\n        const { previousValue, currentValue } = changes[key];\n        if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n            if (!adapter.sameDate(previousValue, currentValue)) {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true,\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true,\n};\n/** Directive used to connect an input to a MatDatepicker. */\nclass MatDatepickerInput extends MatDatepickerInputBase {\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        this._validator = Validators.compose(super._getValidators());\n    }\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n        if (datepicker) {\n            this._datepicker = datepicker;\n            this._closedSubscription = datepicker.closedStream.subscribe(() => this._onTouched());\n            this._registerModel(datepicker.registerInput(this));\n        }\n    }\n    /** The minimum valid date. */\n    get min() {\n        return this._min;\n    }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** The maximum valid date. */\n    get max() {\n        return this._max;\n    }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(value) {\n        const wasMatchingValue = this._matchesFilter(this.value);\n        this._dateFilter = value;\n        if (this._matchesFilter(this.value) !== wasMatchingValue) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        if (this._formField) {\n            return this._formField.getLabelId();\n        }\n        return this._elementRef.nativeElement.getAttribute('aria-labelledby');\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n        return this.value;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._closedSubscription.unsubscribe();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n        if (this._datepicker) {\n            this._datepicker.open();\n        }\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            this._model.updateSelection(value, this);\n        }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n        return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n        return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n        return this._dateFilter;\n    }\n    _shouldHandleChangeEvent(event) {\n        return event.source !== this;\n    }\n}\nMatDatepickerInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerInput, deps: [{ token: i0.ElementRef }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDatepickerInput, selector: \"input[matDatepicker]\", inputs: { matDatepicker: \"matDatepicker\", min: \"min\", max: \"max\", dateFilter: [\"matDatepickerFilter\", \"dateFilter\"] }, host: { listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"blur\": \"_onBlur()\", \"keydown\": \"_onKeydown($event)\" }, properties: { \"attr.aria-haspopup\": \"_datepicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_datepicker?.opened && _datepicker.id) || null\", \"attr.min\": \"min ? _dateAdapter.toIso8601(min) : null\", \"attr.max\": \"max ? _dateAdapter.toIso8601(max) : null\", \"attr.data-mat-calendar\": \"_datepicker ? _datepicker.id : null\", \"disabled\": \"disabled\" }, classAttribute: \"mat-datepicker-input\" }, providers: [\n        MAT_DATEPICKER_VALUE_ACCESSOR,\n        MAT_DATEPICKER_VALIDATORS,\n        { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n    ], exportAs: [\"matDatepickerInput\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matDatepicker]',\n                    providers: [\n                        MAT_DATEPICKER_VALUE_ACCESSOR,\n                        MAT_DATEPICKER_VALIDATORS,\n                        { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                    ],\n                    host: {\n                        'class': 'mat-datepicker-input',\n                        '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                        // Used by the test harness to tie this input to its calendar. We can't depend on\n                        // `aria-owns` for this, because it's only defined while the calendar is open.\n                        '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(blur)': '_onBlur()',\n                        '(keydown)': '_onKeydown($event)',\n                    },\n                    exportAs: 'matDatepickerInput',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }, { type: i2$1.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }]; }, propDecorators: { matDatepicker: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input,\n                args: ['matDatepickerFilter']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerToggleIcon, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerToggleIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDatepickerToggleIcon, selector: \"[matDatepickerToggleIcon]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerToggleIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerToggleIcon]',\n                }]\n        }] });\nclass MatDatepickerToggle {\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n    }\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    _watchStateChanges() {\n        const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n        const inputStateChanged = this.datepicker && this.datepicker.datepickerInput\n            ? this.datepicker.datepickerInput.stateChanges\n            : of();\n        const datepickerToggled = this.datepicker\n            ? merge(this.datepicker.openedStream, this.datepicker.closedStream)\n            : of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n}\nMatDatepickerToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerToggle, deps: [{ token: MatDatepickerIntl }, { token: i0.ChangeDetectorRef }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDatepickerToggle.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDatepickerToggle, selector: \"mat-datepicker-toggle\", inputs: { datepicker: [\"for\", \"datepicker\"], tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], disabled: \"disabled\", disableRipple: \"disableRipple\" }, host: { listeners: { \"click\": \"_open($event)\" }, properties: { \"attr.tabindex\": \"null\", \"class.mat-datepicker-toggle-active\": \"datepicker && datepicker.opened\", \"class.mat-accent\": \"datepicker && datepicker.color === \\\"accent\\\"\", \"class.mat-warn\": \"datepicker && datepicker.color === \\\"warn\\\"\", \"attr.data-mat-calendar\": \"datepicker ? datepicker.id : null\" }, classAttribute: \"mat-datepicker-toggle\" }, queries: [{ propertyName: \"_customIcon\", first: true, predicate: MatDatepickerToggleIcon, descendants: true }], viewQueries: [{ propertyName: \"_button\", first: true, predicate: [\"button\"], descendants: true }], exportAs: [\"matDatepickerToggle\"], usesOnChanges: true, ngImport: i0, template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\", styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"], components: [{ type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-toggle', host: {\n                        'class': 'mat-datepicker-toggle',\n                        '[attr.tabindex]': 'null',\n                        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                        '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                        '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                        // Used by the test harness to tie this toggle to its datepicker.\n                        '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n                        // Bind the `click` on the host, rather than the inner `button`, so that we can call\n                        // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n                        // it so that the input doesn't get focused automatically by the form field (See #21836).\n                        '(click)': '_open($event)',\n                    }, exportAs: 'matDatepickerToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\", styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }]; }, propDecorators: { datepicker: [{\n                type: Input,\n                args: ['for']\n            }], tabIndex: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], disabled: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], _customIcon: [{\n                type: ContentChild,\n                args: [MatDatepickerToggleIcon]\n            }], _button: [{\n                type: ViewChild,\n                args: ['button']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nclass MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    constructor(_rangeInput, elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._rangeInput = _rangeInput;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._injector = _injector;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n    }\n    ngOnInit() {\n        // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n        // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n        // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n        // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n        // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n        // everything has been resolved.\n        // tslint:disable-next-line:no-bitwise\n        const ngControl = this._injector.get(NgControl, null, InjectFlags.Self | InjectFlags.Optional);\n        if (ngControl) {\n            this.ngControl = ngControl;\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n        return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n        return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n        super._onInput(value);\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n        this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n        return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n        return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n        return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n        return this._rangeInput._groupDisabled;\n    }\n    _shouldHandleChangeEvent({ source }) {\n        return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n    }\n    _assignValueProgrammatically(value) {\n        super._assignValueProgrammatically(value);\n        const opposite = (this === this._rangeInput._startInput\n            ? this._rangeInput._endInput\n            : this._rangeInput._startInput);\n        opposite?._validatorOnChange();\n    }\n}\nMatDateRangeInputPartBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDateRangeInputPartBase, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1$1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$2.NgForm, optional: true }, { token: i2$2.FormGroupDirective, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatDateRangeInputPartBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDateRangeInputPartBase, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDateRangeInputPartBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_INPUT_PARENT]\n                }] }, { type: i0.ElementRef }, { type: i1$1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$2.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2$2.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }]; } });\nconst _MatDateRangeInputBase = mixinErrorState(MatDateRangeInputPartBase);\n/** Input for entering the start date in a `mat-date-range-input`. */\nclass MatStartDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the start date isn't after the end date. */\n        this._startValidator = (control) => {\n            const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const end = this._model ? this._model.selection.end : null;\n            return !start || !end || this._dateAdapter.compareDate(start, end) <= 0\n                ? null\n                : { 'matStartDateInvalid': { 'end': end, 'actual': start } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.start;\n    }\n    _shouldHandleChangeEvent(change) {\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !change.oldValue?.start\n                ? !!change.selection.start\n                : !change.selection.start ||\n                    !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(value, this._model.selection.end);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _formatValue(value) {\n        super._formatValue(value);\n        // Any time the input value is reformatted we need to tell the parent.\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n        const element = this._elementRef.nativeElement;\n        const value = element.value;\n        return value.length > 0 ? value : element.placeholder;\n    }\n}\nMatStartDate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatStartDate, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1$1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$2.NgForm, optional: true }, { token: i2$2.FormGroupDirective, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatStartDate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatStartDate, selector: \"input[matStartDate]\", inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, host: { attributes: { \"type\": \"text\" }, listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"keydown\": \"_onKeydown($event)\", \"blur\": \"_onBlur()\" }, properties: { \"disabled\": \"disabled\", \"attr.id\": \"_rangeInput.id\", \"attr.aria-haspopup\": \"_rangeInput.rangePicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null\", \"attr.min\": \"_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null\", \"attr.max\": \"_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null\" }, classAttribute: \"mat-start-date mat-date-range-input-inner\" }, providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n        { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatStartDate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matStartDate]',\n                    host: {\n                        'class': 'mat-start-date mat-date-range-input-inner',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(keydown)': '_onKeydown($event)',\n                        '[attr.id]': '_rangeInput.id',\n                        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                        '(blur)': '_onBlur()',\n                        'type': 'text',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n                        { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true },\n                    ],\n                    // These need to be specified explicitly, because some tooling doesn't\n                    // seem to pick them up from the base class. See #20932.\n                    outputs: ['dateChange', 'dateInput'],\n                    inputs: ['errorStateMatcher'],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_INPUT_PARENT]\n                }] }, { type: i0.ElementRef }, { type: i1$1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$2.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2$2.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }]; } });\n/** Input for entering the end date in a `mat-date-range-input`. */\nclass MatEndDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the end date isn't before the start date. */\n        this._endValidator = (control) => {\n            const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const start = this._model ? this._model.selection.start : null;\n            return !end || !start || this._dateAdapter.compareDate(end, start) >= 0\n                ? null\n                : { 'matEndDateInvalid': { 'start': start, 'actual': end } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.end;\n    }\n    _shouldHandleChangeEvent(change) {\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !change.oldValue?.end\n                ? !!change.selection.end\n                : !change.selection.end ||\n                    !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(this._model.selection.start, value);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _onKeydown(event) {\n        // If the user is pressing backspace on an empty end input, move focus back to the start.\n        if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n            this._rangeInput._startInput.focus();\n        }\n        super._onKeydown(event);\n    }\n}\nMatEndDate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatEndDate, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1$1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$2.NgForm, optional: true }, { token: i2$2.FormGroupDirective, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatEndDate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatEndDate, selector: \"input[matEndDate]\", inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, host: { attributes: { \"type\": \"text\" }, listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"keydown\": \"_onKeydown($event)\", \"blur\": \"_onBlur()\" }, properties: { \"disabled\": \"disabled\", \"attr.aria-haspopup\": \"_rangeInput.rangePicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null\", \"attr.min\": \"_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null\", \"attr.max\": \"_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null\" }, classAttribute: \"mat-end-date mat-date-range-input-inner\" }, providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n        { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatEndDate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matEndDate]',\n                    host: {\n                        'class': 'mat-end-date mat-date-range-input-inner',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(keydown)': '_onKeydown($event)',\n                        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                        '(blur)': '_onBlur()',\n                        'type': 'text',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n                        { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true },\n                    ],\n                    // These need to be specified explicitly, because some tooling doesn't\n                    // seem to pick them up from the base class. See #20932.\n                    outputs: ['dateChange', 'dateInput'],\n                    inputs: ['errorStateMatcher'],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DATE_RANGE_INPUT_PARENT]\n                }] }, { type: i0.ElementRef }, { type: i1$1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$2.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2$2.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_FORMATS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nclass MatDateRangeInput {\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        /** Unique ID for the input. */\n        this.id = `mat-date-range-input-${nextUniqueId++}`;\n        /** Whether the control is focused. */\n        this.focused = false;\n        /** Name of the form control. */\n        this.controlType = 'mat-date-range-input';\n        this._groupDisabled = false;\n        /** Value for the `aria-describedby` attribute of the inputs. */\n        this._ariaDescribedBy = null;\n        /** Separator text to be shown between the inputs. */\n        this.separator = '–';\n        /** Start of the comparison range that should be shown in the calendar. */\n        this.comparisonStart = null;\n        /** End of the comparison range that should be shown in the calendar. */\n        this.comparisonEnd = null;\n        /** Emits when the input's state has changed. */\n        this.stateChanges = new Subject();\n        if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        // The datepicker module can be used both with MDC and non-MDC form fields. We have\n        // to conditionally add the MDC input class so that the range picker looks correctly.\n        if (_formField?._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n            const classList = _elementRef.nativeElement.classList;\n            classList.add('mat-mdc-input-element');\n            classList.add('mat-mdc-form-field-input-control');\n        }\n        // TODO(crisbeto): remove `as any` after #18206 lands.\n        this.ngControl = control;\n    }\n    /** Current value of the range input. */\n    get value() {\n        return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n        const start = this._startInput?._getPlaceholder() || '';\n        const end = this._endInput?._getPlaceholder() || '';\n        return start || end ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() {\n        return this._rangePicker;\n    }\n    set rangePicker(rangePicker) {\n        if (rangePicker) {\n            this._model = rangePicker.registerInput(this);\n            this._rangePicker = rangePicker;\n            this._closedSubscription.unsubscribe();\n            this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n                this._startInput?._onTouched();\n                this._endInput?._onTouched();\n            });\n            this._registerModel(this._model);\n        }\n    }\n    /** Whether the input is required. */\n    get required() {\n        return !!this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(value) {\n        const start = this._startInput;\n        const end = this._endInput;\n        const wasMatchingStart = start && start._matchesFilter(start.value);\n        const wasMatchingEnd = end && end._matchesFilter(start.value);\n        this._dateFilter = value;\n        if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n            start._validatorOnChange();\n        }\n        if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n            end._validatorOnChange();\n        }\n    }\n    /** The minimum valid date. */\n    get min() {\n        return this._min;\n    }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._revalidate();\n        }\n    }\n    /** The maximum valid date. */\n    get max() {\n        return this._max;\n    }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._revalidate();\n        }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._startInput && this._endInput\n            ? this._startInput.disabled && this._endInput.disabled\n            : this._groupDisabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._groupDisabled) {\n            this._groupDisabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n        if (this._startInput && this._endInput) {\n            return this._startInput.errorState || this._endInput.errorState;\n        }\n        return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n        const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n        const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n        return startEmpty && endEmpty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n        if (!this.focused && !this.disabled) {\n            if (!this._model || !this._model.selection.start) {\n                this._startInput.focus();\n            }\n            else {\n                this._endInput.focus();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._startInput) {\n                throw Error('mat-date-range-input must contain a matStartDate input');\n            }\n            if (!this._endInput) {\n                throw Error('mat-date-range-input must contain a matEndDate input');\n            }\n        }\n        if (this._model) {\n            this._registerModel(this._model);\n        }\n        // We don't need to unsubscribe from this, because we\n        // know that the input streams will be completed on destroy.\n        merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n            this.stateChanges.next(undefined);\n        });\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._closedSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n        return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        return this._formField ? this._formField.getLabelId() : null;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue() {\n        return this._startInput ? this._startInput.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n        return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n        this.stateChanges.next(undefined);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n        if (this._rangePicker) {\n            this._rangePicker.open();\n        }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n        return ((!this._formField ||\n            (this._formField.getLabelId() && !this._formField._shouldLabelFloat())) &&\n            this.empty);\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n        const formField = this._formField;\n        return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    /** Updates the focused state of the range input. */\n    _updateFocus(origin) {\n        this.focused = origin !== null;\n        this.stateChanges.next();\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n        if (this._startInput) {\n            this._startInput._validatorOnChange();\n        }\n        if (this._endInput) {\n            this._endInput._validatorOnChange();\n        }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n        if (this._startInput) {\n            this._startInput._registerModel(model);\n        }\n        if (this._endInput) {\n            this._endInput._registerModel(model);\n        }\n    }\n}\nMatDateRangeInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDateRangeInput, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i2$2.ControlContainer, optional: true, self: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDateRangeInput.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDateRangeInput, selector: \"mat-date-range-input\", inputs: { rangePicker: \"rangePicker\", required: \"required\", dateFilter: \"dateFilter\", min: \"min\", max: \"max\", disabled: \"disabled\", separator: \"separator\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, host: { attributes: { \"role\": \"group\" }, properties: { \"class.mat-date-range-input-hide-placeholders\": \"_shouldHidePlaceholders()\", \"class.mat-date-range-input-required\": \"required\", \"attr.id\": \"null\", \"attr.aria-labelledby\": \"_getAriaLabelledby()\", \"attr.aria-describedby\": \"_ariaDescribedBy\", \"attr.data-mat-calendar\": \"rangePicker ? rangePicker.id : null\" }, classAttribute: \"mat-date-range-input\" }, providers: [\n        { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n        { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n    ], queries: [{ propertyName: \"_startInput\", first: true, predicate: MatStartDate, descendants: true }, { propertyName: \"_endInput\", first: true, predicate: MatEndDate, descendants: true }], exportAs: [\"matDateRangeInput\"], usesOnChanges: true, ngImport: i0, template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\", styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"], directives: [{ type: i4.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDateRangeInput, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-date-range-input', exportAs: 'matDateRangeInput', host: {\n                        'class': 'mat-date-range-input',\n                        '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n                        '[class.mat-date-range-input-required]': 'required',\n                        '[attr.id]': 'null',\n                        'role': 'group',\n                        '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                        '[attr.aria-describedby]': '_ariaDescribedBy',\n                        // Used by the test harness to tie this input to its calendar. We can't depend on\n                        // `aria-owns` for this, because it's only defined while the calendar is open.\n                        '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n                        { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n                    ], template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\", styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i2$2.ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: i1$1.DateAdapter, decorators: [{\n                    type: Optional\n                }] }, { type: i2$1.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }]; }, propDecorators: { rangePicker: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], separator: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], _startInput: [{\n                type: ContentChild,\n                args: [MatStartDate]\n            }], _endInput: [{\n                type: ContentChild,\n                args: [MatEndDate]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nclass MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n        super._forwardContentValues(instance);\n        const input = this.datepickerInput;\n        if (input) {\n            instance.comparisonStart = input.comparisonStart;\n            instance.comparisonEnd = input.comparisonEnd;\n        }\n    }\n}\nMatDateRangePicker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDateRangePicker, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDateRangePicker.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDateRangePicker, selector: \"mat-date-range-picker\", providers: [\n        MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n        MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n        { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n    ], exportAs: [\"matDateRangePicker\"], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDateRangePicker, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-date-range-picker',\n                    template: '',\n                    exportAs: 'matDateRangePicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n                        MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n                        { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that will close the datepicker and assign the current selection to the data model. */\nclass MatDatepickerApply {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n    _applySelection() {\n        this._datepicker._applyPendingSelection();\n        this._datepicker.close();\n    }\n}\nMatDatepickerApply.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerApply, deps: [{ token: MatDatepickerBase }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerApply.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDatepickerApply, selector: \"[matDatepickerApply], [matDateRangePickerApply]\", host: { listeners: { \"click\": \"_applySelection()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerApply, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerApply], [matDateRangePickerApply]',\n                    host: { '(click)': '_applySelection()' },\n                }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerBase }]; } });\n/** Button that will close the datepicker and discard the current selection. */\nclass MatDatepickerCancel {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n}\nMatDatepickerCancel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerCancel, deps: [{ token: MatDatepickerBase }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerCancel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDatepickerCancel, selector: \"[matDatepickerCancel], [matDateRangePickerCancel]\", host: { listeners: { \"click\": \"_datepicker.close()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerCancel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerCancel], [matDateRangePickerCancel]',\n                    host: { '(click)': '_datepicker.close()' },\n                }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerBase }]; } });\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nclass MatDatepickerActions {\n    constructor(_datepicker, _viewContainerRef) {\n        this._datepicker = _datepicker;\n        this._viewContainerRef = _viewContainerRef;\n    }\n    ngAfterViewInit() {\n        this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        this._datepicker.registerActions(this._portal);\n    }\n    ngOnDestroy() {\n        this._datepicker.removeActions(this._portal);\n        // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n        if (this._portal && this._portal.isAttached) {\n            this._portal?.detach();\n        }\n    }\n}\nMatDatepickerActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerActions, deps: [{ token: MatDatepickerBase }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nMatDatepickerActions.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDatepickerActions, selector: \"mat-datepicker-actions, mat-date-range-picker-actions\", viewQueries: [{ propertyName: \"_template\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0, template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `, isInline: true, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerActions, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-actions, mat-date-range-picker-actions', template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerBase }, { type: i0.ViewContainerRef }]; }, propDecorators: { _template: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDatepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerModule, declarations: [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader,\n        MatDateRangeInput,\n        MatStartDate,\n        MatEndDate,\n        MatDateRangePicker,\n        MatDatepickerActions,\n        MatDatepickerCancel,\n        MatDatepickerApply], imports: [CommonModule,\n        MatButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        MatCommonModule], exports: [CdkScrollableModule,\n        MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader,\n        MatDateRangeInput,\n        MatStartDate,\n        MatEndDate,\n        MatDateRangePicker,\n        MatDatepickerActions,\n        MatDatepickerCancel,\n        MatDatepickerApply] });\nMatDatepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerModule, providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n            MatCommonModule,\n        ], CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDatepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatButtonModule,\n                        OverlayModule,\n                        A11yModule,\n                        PortalModule,\n                        MatCommonModule,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCalendar,\n                        MatCalendarBody,\n                        MatDatepicker,\n                        MatDatepickerContent,\n                        MatDatepickerInput,\n                        MatDatepickerToggle,\n                        MatDatepickerToggleIcon,\n                        MatMonthView,\n                        MatYearView,\n                        MatMultiYearView,\n                        MatCalendarHeader,\n                        MatDateRangeInput,\n                        MatStartDate,\n                        MatEndDate,\n                        MatDateRangePicker,\n                        MatDatepickerActions,\n                        MatDatepickerCancel,\n                        MatDatepickerApply,\n                    ],\n                    declarations: [\n                        MatCalendar,\n                        MatCalendarBody,\n                        MatDatepicker,\n                        MatDatepickerContent,\n                        MatDatepickerInput,\n                        MatDatepickerToggle,\n                        MatDatepickerToggleIcon,\n                        MatMonthView,\n                        MatYearView,\n                        MatMultiYearView,\n                        MatCalendarHeader,\n                        MatDateRangeInput,\n                        MatStartDate,\n                        MatEndDate,\n                        MatDateRangePicker,\n                        MatDatepickerActions,\n                        MatDatepickerCancel,\n                        MatDatepickerApply,\n                    ],\n                    providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i3 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Optional, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injector, TemplateRef, InjectFlags, Injectable, SkipSelf, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, defer, Subscription, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/a11y';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\nclass _MatDialogContainerBase extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, \n    /** The dialog configuration. */\n    _config, _interactivityChecker, _ngZone, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._focusMonitor = _focusMonitor;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /** Initializes the dialog container with the attached content. */\n    _initializeWithAttachedContent() {\n        this._setupFocusTrap();\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        this._capturePreviouslyFocusedElement();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Moves focus back into the dialog if it was moved out. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('blur', () => element.removeAttribute('tabindex'));\n                element.addEventListener('mousedown', () => element.removeAttribute('tabindex'));\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n        // dialog. If the element inside the dialog can't be focused, then the container is focused\n        // so the user can't tab into other elements behind it.\n        switch (this._config.autoFocus) {\n            case false:\n            case 'dialog':\n                // Ensure that focus is on the dialog container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the dialog already, because it's possible that the consumer\n                // turned off `autoFocus` in order to move focus themselves.\n                if (!this._containsFocus()) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(focusedSuccessfully => {\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this._config.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const previousElement = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            previousElement &&\n            typeof previousElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(previousElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    previousElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Sets up the focus trap. */\n    _setupFocusTrap() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    /** Captures the element that was focused before the dialog was opened. */\n    _capturePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n}\n_MatDialogContainerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatDialogContainerBase, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\n_MatDialogContainerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: _MatDialogContainerBase, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatDialogContainerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1.FocusMonitor }]; }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\nclass MatDialogContainer extends _MatDialogContainerBase {\n    constructor() {\n        super(...arguments);\n        /** State of the dialog animation. */\n        this._state = 'enter';\n    }\n    /** Callback, invoked whenever an animation on the host completes. */\n    _onAnimationDone({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._trapFocus();\n            this._animationStateChanged.next({ state: 'opened', totalTime });\n        }\n        else if (toState === 'exit') {\n            this._restoreFocus();\n            this._animationStateChanged.next({ state: 'closed', totalTime });\n        }\n    }\n    /** Callback, invoked when an animation on the host starts. */\n    _onAnimationStart({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._animationStateChanged.next({ state: 'opening', totalTime });\n        }\n        else if (toState === 'exit' || toState === 'void') {\n            this._animationStateChanged.next({ state: 'closing', totalTime });\n        }\n    }\n    /** Starts the dialog exit animation. */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDialogContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDialogContainer, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\", \"aria-modal\": \"true\" }, listeners: { \"@dialogContainer.start\": \"_onAnimationStart($event)\", \"@dialogContainer.done\": \"_onAnimationDone($event)\" }, properties: { \"id\": \"_id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledBy\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"@dialogContainer\": \"_state\" }, classAttribute: \"mat-dialog-container\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], directives: [{ type: i3.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matDialogAnimations.dialogContainer], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matDialogAnimations.dialogContainer], host: {\n                        'class': 'mat-dialog-container',\n                        'tabindex': '-1',\n                        'aria-modal': 'true',\n                        '[id]': '_id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[@dialogContainer]': '_state',\n                        '(@dialogContainer.start)': '_onAnimationStart($event)',\n                        '(@dialogContainer.done)': '_onAnimationDone($event)',\n                    }, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_overlayRef, _containerInstance, \n    /** Id of the dialog. */\n    id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /** Whether the user is allowed to close the dialog. */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has finished closing. */\n        this._afterClosed = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = null;\n            this._overlayRef.dispose();\n        });\n        _overlayRef\n            .keydownEvents()\n            .pipe(filter(event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        }))\n            .subscribe(event => {\n            event.preventDefault();\n            _closeDialogVia(this, 'keyboard');\n        });\n        _overlayRef.backdropClick().subscribe(() => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                _closeDialogVia(this, 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = 1 /* CLOSING */;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._afterClosed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._overlayRef.updateSize({ width, height });\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._overlayRef.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /** Fetches the position strategy object from the overlay ref. */\n    _getPositionStrategy() {\n        return this._overlayRef.getConfig().positionStrategy;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    // Some mock dialog ref instances in tests do not have the `_containerInstance` property.\n    // For those, we keep the behavior as is and do not deal with the interaction type.\n    if (ref._containerInstance !== undefined) {\n        ref._containerInstance._closeInteractionType = interactionType;\n    }\n    return ref.close(result);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\nclass _MatDialogBase {\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken, _animationMode) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._dialogRefConstructor = _dialogRefConstructor;\n        this._dialogContainerType = _dialogContainerType;\n        this._dialogDataToken = _dialogDataToken;\n        this._animationMode = _animationMode;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        this._dialogAnimatingOpen = false;\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        // If there is a dialog that is currently animating open, return the MatDialogRef of that dialog\n        if (this._dialogAnimatingOpen) {\n            return this._lastDialogRef;\n        }\n        const overlayRef = this._createOverlay(config);\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        if (this._animationMode !== 'NoopAnimations') {\n            const animationStateSubscription = dialogContainer._animationStateChanged.subscribe(dialogAnimationEvent => {\n                if (dialogAnimationEvent.state === 'opening') {\n                    this._dialogAnimatingOpen = true;\n                }\n                if (dialogAnimationEvent.state === 'opened') {\n                    this._dialogAnimatingOpen = false;\n                    animationStateSubscription.unsubscribe();\n                }\n            });\n            if (!this._animationStateSubscriptions) {\n                this._animationStateSubscriptions = new Subscription();\n            }\n            this._animationStateSubscriptions.add(animationStateSubscription);\n        }\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        this._lastDialogRef = dialogRef;\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n        this.afterOpened.next(dialogRef);\n        // Notify the dialog container that the content has been attached.\n        dialogContainer._initializeWithAttachedContent();\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n        // Clean up any subscriptions to dialogs that never finished opening.\n        if (this._animationStateSubscriptions) {\n            this._animationStateSubscriptions.unsubscribe();\n        }\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param dialogConfig The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation,\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this._dialogContainerType, config.viewContainerRef, injector, config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogContainer Reference to the wrapping dialog container.\n     * @param overlayRef Reference to the overlay in which the dialog resides.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        const dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n                $implicit: config.data,\n                dialogRef,\n            }));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef.updateSize(config.width, config.height).updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog.\n     * @param dialogContainer Dialog container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The dialog container should be provided as the dialog container and the dialog's\n        // content are created out of the same `ViewContainerRef` and as such, are siblings\n        // for injector purposes. To allow the hierarchy that is expected, the dialog\n        // container is explicitly provided in the injector.\n        const providers = [\n            { provide: this._dialogContainerType, useValue: dialogContainer },\n            { provide: this._dialogDataToken, useValue: config.data },\n            { provide: this._dialogRefConstructor, useValue: dialogRef },\n        ];\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     */\n    _removeOpenDialog(dialogRef) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                this._getAfterAllClosed().next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /** Closes all of the dialogs in an array. */\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\n_MatDialogBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatDialogBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatDialogBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: _MatDialogBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatDialogBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: undefined }, { type: undefined }, { type: i1$1.OverlayContainer }, { type: undefined }, { type: i0.Type }, { type: i0.Type }, { type: i0.InjectionToken }, { type: undefined }]; } });\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog extends _MatDialogBase {\n    constructor(overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, defaultOptions, scrollStrategy, parentDialog, overlayContainer, animationMode) {\n        super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA, animationMode);\n    }\n}\nMatDialog.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMatDialog.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialog });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                    type: Optional\n                }] }, { type: MatDialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DIALOG_SCROLL_STRATEGY]\n                }] }, { type: MatDialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return { ...defaultOptions, ...config };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    /**\n     * Reference to the containing dialog.\n     * @deprecated `dialogRef` property to become private.\n     * @breaking-change 13.0.0\n     */\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n}\nMatDialogClose.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogClose.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }]; }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Unique id for the dialog title. If none is supplied, it will be auto-generated. */\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            });\n        }\n    }\n}\nMatDialogTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogTitle, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDialogTitle, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-dialog-title\" }, exportAs: [\"matDialogTitle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    host: {\n                        'class': 'mat-dialog-title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }]; }, propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDialogContent, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-dialog-content\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-dialog-content' },\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogActions.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatDialogActions, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", host: { classAttribute: \"mat-dialog-actions\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    host: { 'class': 'mat-dialog-actions' },\n                }]\n        }] });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogModule, declarations: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent], imports: [OverlayModule, PortalModule, MatCommonModule], exports: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule] });\nMatDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogModule, providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER], imports: [[OverlayModule, PortalModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, MatCommonModule],\n                    exports: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogContent,\n                        MatDialogActions,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogActions,\n                        MatDialogContent,\n                    ],\n                    providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, Output, Input, ContentChildren, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY,\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true,\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() {\n        return this._selected;\n    }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatRadioGroupBase, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatRadioGroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: _MatRadioGroupBase, inputs: { color: \"color\", name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\" }, outputs: { change: \"change\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatRadioGroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { change: [{\n                type: Output\n            }], color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }] } });\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRadioGroup, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatRadioGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatRadioGroup, selector: \"mat-radio-group\", host: { attributes: { \"role\": \"radiogroup\" }, classAttribute: \"mat-radio-group\" }, providers: [\n        MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n        { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n    ], queries: [{ propertyName: \"_radios\", predicate: i0.forwardRef(function () { return MatRadioButton; }), descendants: true }], exportAs: [\"matRadioGroup\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRadioGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-radio-group',\n                    exportAs: 'matRadioGroup',\n                    providers: [\n                        MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                        { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                    ],\n                    host: {\n                        'role': 'radiogroup',\n                        'class': 'mat-radio-group',\n                    },\n                }]\n        }], propDecorators: { _radios: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatRadioButton), { descendants: true }]\n            }] } });\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, animationMode, _providerOverride, tabIndex) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        if (tabIndex) {\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\n        }\n        this._removeUniqueSelectionListener = _radioDispatcher.listen((id, name) => {\n            if (id !== this.id && name === this.name) {\n                this.checked = false;\n            }\n        });\n    }\n    /** Whether this radio button is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        // As per Material design specifications the selection control radio should use the accent color\n        // palette by default. https://material.io/guidelines/components/selection-controls.html\n        return (this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            (this._providerOverride && this._providerOverride.color) ||\n            'accent');\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    /** Focuses the radio button. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            if (this.checked) {\n                this.radioGroup.selected = this;\n            }\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Triggered when the radio button receives an interaction from the user. */\n    _onInputInteraction(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        if (!this.checked && !this.disabled) {\n            const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n            this.checked = true;\n            this._emitChangeEvent();\n            if (this.radioGroup) {\n                this.radioGroup._controlValueAccessorChangeFn(this.value);\n                if (groupValueChanged) {\n                    this.radioGroup._emitChangeEvent();\n                }\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatRadioButtonBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatRadioButtonBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: _MatRadioButtonBase, inputs: { id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" }, viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: _MatRadioButtonBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: _MatRadioGroupBase }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i2.UniqueSelectionDispatcher }, { type: undefined }, { type: undefined }, { type: undefined }]; }, propDecorators: { id: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], checked: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }] } });\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n    }\n}\nMatRadioButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRadioButton, deps: [{ token: MAT_RADIO_GROUP, optional: true }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }, { token: i2.UniqueSelectionDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RADIO_DEFAULT_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatRadioButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: MatRadioButton, selector: \"mat-radio-button\", inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_inputElement.nativeElement.focus()\" }, properties: { \"class.mat-radio-checked\": \"checked\", \"class.mat-radio-disabled\": \"disabled\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mat-primary\": \"color === \\\"primary\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"attr.tabindex\": \"null\", \"attr.id\": \"id\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" }, classAttribute: \"mat-radio-button\" }, exportAs: [\"matRadioButton\"], usesInheritance: true, ngImport: i0, template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputInteraction($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-ripple,.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-ripple{outline:solid 3px}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], directives: [{ type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRadioButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-radio-button', inputs: ['disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, exportAs: 'matRadioButton', host: {\n                        'class': 'mat-radio-button',\n                        '[class.mat-radio-checked]': 'checked',\n                        '[class.mat-radio-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.id]': 'id',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                        // Note: under normal conditions focus shouldn't land on this element, however it may be\n                        // programmatically set, for example inside of a focus trap, in this case we want to forward\n                        // the focus to the native element.\n                        '(focus)': '_inputElement.nativeElement.focus()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputInteraction($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-ripple,.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-ripple{outline:solid 3px}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: MatRadioGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RADIO_GROUP]\n                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i2.UniqueSelectionDispatcher }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RADIO_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRadioModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatRadioModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRadioModule, declarations: [MatRadioGroup, MatRadioButton], imports: [MatRippleModule, MatCommonModule], exports: [MatRadioGroup, MatRadioButton, MatCommonModule] });\nMatRadioModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRadioModule, imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MatRadioModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule],\n                    exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                    declarations: [MatRadioGroup, MatRadioButton],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n"],"names":["i0","InjectionToken","Injectable","Inject","Optional","SkipSelf","Directive","ChangeDetectorRef","SimpleChange","isCallable","i4","of","Subject","BehaviorSubject","combineLatest","merge","merge$1","isObservable","first","switchMap","startWith","mapTo","map","distinctUntilChanged","shareReplay","takeUntil","debounceTime","withLatestFrom","scan","filter","Validators","FormControl","FormArray","FormGroup","i1","DynLogger","DYN_LOG_LEVEL","DynLogLevel","DynLogDriver","deepEqual","isMatchCondition","value","Array","isArray","path","DynInstanceType","DYN_CONTROLS_TOKEN","DYN_VALIDATORS_TOKEN","DYN_ASYNCVALIDATORS_TOKEN","DYN_MATCHERS_TOKEN","DYN_MATCHER_CONDITIONS_TOKEN","DYN_FUNCTIONS_TOKEN","DYN_ERROR_HANDLERS_TOKEN","DYN_MODE","DYN_MODE_DEFAULTS","items","_merge","recursive","clone","input","isPlainObject","Map","Set","output","index","_recursiveMerge","base","extend","key","includes","isClone","isRecursive","result","shift","length","item","mapPriority","priority","_a","Object","assign","defaultValidators","id","fn","required","requiredTrue","node","pattern","minLength","maxLength","email","min","max","defaultAsyncValidators","config","validator","control","root","loaded$","pipe","Boolean","relatedConditionFn","hasMatch","defaultMatchers","firstTime","updateValueAndValidity","error","setErrors","disable","enable","visible","hidden","invisible","defaultConditions","mode","mode$","defaultErrorHandlers","messages","errors","currentMatch","keys","reduce","errorPath","split","pathEndsWith","defaultFunctions","defaultText","isBinary","option","params","options","find","o","field","negate","query","console","undefined","valueChanges","controlValue","getMapFromRecord","entries","reverse","every","i","DynFormHandlers","constructor","logger","providedErrorHandlers","providedFunctions","providedValidators","providedAsyncValidators","providedMatchers","providedConditions","_b","_c","_d","_e","_f","errorHandlers","functions","validators","asyncValidators","matchers","conditions","reduceProvider","concat","getControlOptions","dynValidators","updateOn","getMatcher","args","has","get","getArgs","providerNotFound","getCondition","condition","getFormErrorHandlers","handler","getErrorHandler","getErrorHandlers","getFunctions","getFunction","dictionary","getValidatorFn","forEach","push","providers","set","ɵfac","ɵprov","type","decorators","DynFormRegistry","controls","dynControl","provided","message","getInstanceFor","instance","DynFormFactory","handlers","registry","register","recursively","parent","Error","name","at","parseInt","controlParent","controlName","isDeepName","parentNames","some","parentName","join","parentControl","build","append","Container","Group","group","buildControls","Control","default","names","pop","addControl","DynFormTreeNode","formFactory","formHandlers","_mode$","isolated","deep","route","children","visibility$","paramsUpdates$","hook$","_formLoaded","_errorHandlers","_children$","_numChild$","_loaded$","_errorMsg$","_unsubscribe","child","numChilds","loaded","isControl","hasAllChildren","allChildrenValid","allChildrenLoaded","nodeLoad","_dynControl","_name","_instance","_control","_params","isRoot","isFormLoaded","errorMsg$","asObservable","next","childsIncrement","getValue","nodeMethod","childsDecrement","callHook","event","hookCalled","hook","payload","searchNodes","select","selector","onInit","nodeFailed","configInstance","nodeInstanceMismatch","load","setControl","nodeWithoutControl","getDeep","getPath","getRoute","_matchers","getMatchers","errorMsgs","errorMsg","addChild","markAsPending","markAsLoaded","setupListeners","statusChanges","subscribe","_","currentError","valid","getErrorMessage","matcher","count","when","results","operator","onDestroy","removeChild","complete","setIndex","splice","match","slice","hasRelated","DynControlNode","injector","onDestroy$","ngOnInit","ngOnDestroy","method","bind","callChildHooks","plain","fieldName","prototype","hasOwnProperty","call","Injector","ɵdir","DynControl","_id","params$","_mode","_ref","_logger","_factory","_handlers","array","Uint32Array","window","crypto","getRandomValues","toString","paramFns","updateParams","updates","change","completeParams","currentValue","nodeParamsUpdated","setTimeout","ngOnChanges","markForCheck","ngAfterViewInit","changes","newParams","newParamFns","hookUpdateValidity","onlySelf","dynInstance","DynFormArray","unnamedArray","nodeLoaded","addItem","removeItem","removeAt","hookPrePatch","numItems","Math","DynFormContainer","DynFormControl","DynFormGroup","getModuleProviders","_g","_h","_j","_k","_l","_m","_o","_p","_q","provide","useValue","Fatal","multi","errorHandler","asyncValidator","DynFormMode","modes","a","b","getModeConfig","mergeConfigs","areConfigsEquivalent","newConfig","cssClass","isDevMode","dynLogLevels","Hooks","Load","Lifecycle","Hierarchy","Debug","Warning","level","logFatal","logError","format","logWarning","warn","logInfo","log","getLogger","colorify","indent","text","padStart","driver","rootForm","provider","JSON","stringify","superclass","configured","origin","controlInitializing","controlInstantiated","formCycle","i3$1","CommonModule","Component","ChangeDetectionStrategy","HostBinding","NgModule","i5","ReactiveFormsModule","i3","MatButtonModule","MatCardModule","i1$1","MatCheckboxModule","i2$1","MatDatepickerModule","MatDialogModule","i1$3","MatDividerModule","i1$2","MatFormFieldModule","MatIconModule","i4$1","MatInputModule","i1$4","MatRadioModule","i2$2","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectModule","i2","DynFormsModule","tap","i3$2","DynMatArrayComponent","arguments","dynInstanceType","createConfig","partial","isReadonly","readonly","initItem","addButton","addColor","removeIcon","removeColor","ɵcmp","MatCard","MatCardHeader","NgIf","MatCardContent","NgForOf","MatCardActions","MatButton","MatCardAvatar","MatCardTitle","MatCardSubtitle","DynGroupComponent","MatIcon","templateUrl","styleUrls","changeDetection","OnPush","DynMatCardComponent","DynMatCheckboxComponent","label","labelPosition","MatCheckbox","NgControlStatus","FormControlDirective","DynMatContainerComponent","DynMatDatepickerComponent","floatLabel","placeholder","MatFormField","MatInput","DefaultValueAccessor","MatDatepickerInput","MatDatepickerToggle","MatSuffix","MatDatepicker","MatLabel","MatHint","DynMatDividerComponent","isInvisible","MatDivider","DynMatInputComponent","rows","errorStateMatcher","isErrorState","invalid","touched","MatPrefix","MatError","AsyncPipe","DynMatMulticheckboxComponent","_internalValueChange","setValue","hasValue","values","enabled","DynMatRadioComponent","MatRadioGroup","MatRadioButton","DynMatSelectComponent","compareWith","o1","o2","sortComparator","localeCompare","multiple","panelClass","MatSelect","MatOption","PROVIDERS","component","DynFormsMaterialModule","forFeature","ngModule","ɵmod","ɵinj","imports","declarations","entryComponents","exports","createMatConfig","INJECTOR","ViewContainerRef","ViewEncapsulation","Input","ViewChild","delay","DynFactoryComponent","ref","resolver","visibility","toLowerCase","_injector","_formMode","container","clear","createFrom","factory","resolveComponentFactory","newInjectionLayer","create","useClass","deps","createComponent","hostView","detectChanges","e","ComponentFactoryResolver","encapsulation","None","static","read","DynFormComponent","listeners","time","form","configLayer","whenReady","patchValue","validate","listener","addHookListener","ANIMATION_MODULE_TYPE","MatCommonModule","host","align","exportAs","MatCardFooter","MatCardImage","MatCardSmImage","MatCardMdImage","MatCardLgImage","MatCardXlImage","_animationMode","template","styles","MatCardTitleGroup","coerceBooleanProperty","forwardRef","EventEmitter","Attribute","Output","NG_VALUE_ACCESSOR","NG_VALIDATORS","CheckboxRequiredValidator","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","MatRipple","MatRippleModule","ObserversModule","MAT_CHECKBOX_DEFAULT_OPTIONS","providedIn","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","nextUniqueId","defaults","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","useExisting","MatCheckboxChange","_MatCheckboxBase","_elementRef","elementRef","_changeDetectorRef","_focusMonitor","_ngZone","tabIndex","_options","ariaLabel","ariaLabelledby","_uniqueId","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","defaultColor","inputId","_required","monitor","focusOrigin","Promise","resolve","then","_syncIndeterminate","ngAfterViewChecked","stopMonitoring","checked","disabled","newValue","indeterminate","changed","_transitionCheckState","emit","_isRippleDisabled","disableRipple","_onLabelTextChange","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","_getAriaChecked","newState","oldState","element","nativeElement","classList","remove","_getAnimationClassForCheckStateTransition","add","animationClass","runOutsideAngular","_emitChangeEvent","source","_inputElement","toggle","_onInputClick","stopPropagation","focus","focusVia","_onInteractionEvent","animSuffix","nativeCheckbox","ElementRef","FocusMonitor","NgZone","CdkObserveContent","inputs","ariaDescribedby","ripple","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","_MatCheckboxRequiredValidatorModule","A11yModule","i9","Overlay","FlexibleConnectedPositionStrategy","OverlayConfig","OverlayModule","i8","ComponentPortal","TemplatePortal","PortalModule","ContentChild","InjectFlags","Self","TemplateRef","CdkScrollableModule","DateAdapter","MAT_DATE_FORMATS","mixinErrorState","Subscription","ESCAPE","hasModifierKey","SPACE","ENTER","PAGE_DOWN","PAGE_UP","END","HOME","DOWN_ARROW","UP_ARROW","RIGHT_ARROW","LEFT_ARROW","BACKSPACE","take","coerceStringArray","_getFocusedElementPierceShadowDom","trigger","transition","animate","keyframes","style","state","NgControl","MAT_FORM_FIELD","MatFormFieldControl","MAT_INPUT_VALUE_ACCESSOR","createMissingDateImplError","MatDatepickerIntl","calendarLabel","openCalendarLabel","closeCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","formatYearRange","start","end","MatCalendarCell","displayValue","cssClasses","compareValue","rawValue","MatCalendarBody","numCols","activeCell","isRange","cellAspectRatio","previewStart","previewEnd","selectedValueChange","previewChange","_enterHandler","_skipNextFocus","target","cell","_getCellFromElement","run","_leaveHandler","isTableCell","addEventListener","_cellClicked","_isSelected","startValue","endValue","columnChanges","_firstRowOffset","_cellPadding","_cellWidth","removeEventListener","_isActiveCell","rowIndex","colIndex","cellNumber","_focusActiveCell","movePreview","onStable","querySelector","_isRangeStart","isStart","_isRangeEnd","isEnd","_isInRange","isInRange","_isComparisonStart","comparisonStart","comparisonEnd","_isComparisonBridgeStart","previousCell","previousRow","_isComparisonBridgeEnd","_isComparisonEnd","nextCell","nextRow","_isInComparisonRange","_isComparisonIdentical","_isPreviewStart","_isPreviewEnd","_isInPreview","parentNode","row","getAttribute","col","NgClass","todayValue","labelMinRequiredCells","nodeName","rangeEnabled","DateRange","MatDateSelectionModel","selection","_adapter","_selectionChanged","selectionChanged","updateSelection","oldValue","_isValidDateInstance","date","isDateInstance","isValid","MatSingleDateSelectionModel","adapter","isComplete","MatRangeDateSelectionModel","compareDate","MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","useFactory","MAT_RANGE_DATE_SELECTION_MODEL_FACTORY","MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER","MAT_DATE_RANGE_SELECTION_STRATEGY","DefaultMatCalendarRangeStrategy","_dateAdapter","selectionFinished","currentRange","createPreview","activeDate","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER","DAYS_PER_WEEK","MatMonthView","_dateFormats","_dir","_rangeStrategy","_rerenderSubscription","EMPTY","selectedChange","_userSelection","activeDateChange","ngDevMode","_activeDate","today","oldActiveDate","validDate","getValidDateOrNull","deserialize","clampDate","minDate","maxDate","_hasSameMonthAndYear","_init","selected","_selected","_setRanges","_minDate","_maxDate","ngAfterContentInit","localeChanges","comparisonChange","firstChange","unsubscribe","_dateSelected","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","rangeStartDate","rangeEndDate","_getDateInCurrentMonth","_previewStart","_previewEnd","_handleCalendarBodyKeydown","isRtl","_isRtl","keyCode","addCalendarDays","getDate","getNumDaysInMonth","altKey","addCalendarYears","addCalendarMonths","_selectionKeyPressed","_canSelect","preventDefault","_handleCalendarBodyKeyup","_todayDate","_getCellCompareValue","_monthLabel","display","monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","_previewChanged","previewRange","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","narrow","_weekdays","daysInMonth","dateNames","getDateNames","_weeks","_shouldEnableDate","dateA11yLabel","cellClasses","dateClass","dateFilter","d1","d2","year","month","day","Date","getTime","selectedValue","_rangeStart","_rangeEnd","_isRange","_comparisonRangeStart","_comparisonRangeEnd","Directionality","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","isSameMultiYearView","_setSelectedYear","_todayYear","activeYear","minYearOfPage","getActiveOffset","_years","_createCellForYear","_yearSelected","_getActiveCell","yearName","getYearName","_shouldEnableYear","firstOfYear","_selectedYear","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","floor","euclideanModulo","maxYear","MatYearView","monthSelected","_setSelectedMonth","_monthSelected","normalizedDate","_todayMonth","_getMonthInCurrentYear","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxMonth","minYear","minMonth","_selectedMonth","uniqueId","MatCalendarHeader","_intl","calendar","changeDetectorRef","_buttonDescriptionId","stateChanges","periodButtonText","currentView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","periodButtonLabel","prevButtonLabel","nextButtonLabel","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","_isSameView","nextEnabled","MatCalendar","CdkAriaLive","_moveFocusOnNextTick","startView","viewChanged","_intlChanges","startAt","_startAt","_clampedActiveDate","_currentView","viewChangedResult","_calendarHeaderPortal","headerComponent","focusActiveCell","view","_getCurrentViewComponent","updateTodaysDate","sameDate","_yearSelectedInMultiYearView","normalizedYear","_monthSelectedInYearView","normalizedMonth","_goToDateInView","monthView","yearView","multiYearView","CdkPortalOutlet","CdkMonitorFocus","NgSwitch","NgSwitchCase","matDatepickerAnimations","transformPanel","opacity","transform","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","_MatDatepickerContentBase","MatDatepickerContent","_globalModel","_rangeSelectionStrategy","intl","_subscriptions","_animationDone","_actionsPortal","_closeButtonText","_model","_animationState","datepicker","touchUi","_calendar","_handleUserSelection","newSelection","close","_startExitAnimation","_getSelected","_applyPendingSelection","CdkTrapFocus","animations","MatDatepickerBase","_overlay","_viewContainerRef","scrollStrategy","_inputStateChanges","_touchUi","xPosition","yPosition","_restoreFocus","openedStream","closedStream","_opened","_focusedElementBeforeOpen","_backdropHarnessClass","_scrollStrategy","datepickerInput","getStartValue","_color","getThemePalette","restoreFocus","_panelClass","opened","open","_getMinDate","_getMaxDate","_getDateFilter","positionChange","_overlayRef","positionStrategy","getConfig","_setConnectedPositions","updatePosition","_destroyOverlay","_selectYear","_selectMonth","_viewChanged","registerInput","registerActions","portal","removeActions","_openOverlay","_componentRef","completeClose","_forwardContentValues","isDialog","labelId","getOverlayLabelId","overlayRef","_getDialogStrategy","_getDropdownStrategy","hasBackdrop","backdropClass","direction","block","overlayElement","setAttribute","_getCloseStream","attach","dispose","position","global","centerHorizontally","centerVertically","strategy","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","primaryX","secondaryX","primaryY","secondaryY","withPositions","originX","originY","overlayX","overlayY","backdropClick","detachments","keydownEvents","calendarHeaderComponent","MatDatepickerInputEvent","targetElement","MatDatepickerInputBase","dateChange","dateInput","_validatorOnChange","_cvaOnChange","_valueChangesSubscription","_localeSubscription","_parseValidator","_lastValueValid","_filterValidator","_matchesFilter","_minValidator","_maxValidator","_assignValueProgrammatically","_getValueFromModel","_pendingValue","_parentDisabled","_isInitialized","blur","_getValidators","_registerModel","model","_assignValue","_shouldHandleChangeEvent","_isValidValue","_formatValue","dateInputsHaveChanged","registerOnValidatorChange","c","_validator","_onKeydown","isAltDownArrow","readOnly","_openPopup","_onInput","lastValueWasValid","parse","_onChange","_onBlur","_assignValueToModel","previousValue","MAT_DATEPICKER_VALUE_ACCESSOR","MAT_DATEPICKER_VALIDATORS","dateFormats","_formField","_closedSubscription","compose","matDatepicker","_datepicker","_min","validValue","_max","_dateFilter","wasMatchingValue","getLabelId","modelValue","MatDatepickerToggleIcon","defaultTabIndex","_stateChanges","parsedTabIndex","Number","_watchStateChanges","_open","datepickerStateChanged","inputStateChanged","datepickerToggled","_customIcon","_button","MAT_DATE_RANGE_INPUT_PARENT","MatDateRangeInputPartBase","_rangeInput","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","ngDoCheck","updateErrorState","isEmpty","_getPlaceholder","_handleChildValueChange","_openDatepicker","_groupDisabled","_startInput","_endInput","opposite","ErrorStateMatcher","NgForm","FormGroupDirective","_MatDateRangeInputBase","MatStartDate","rangeInput","defaultErrorStateMatcher","parentForm","parentFormGroup","_startValidator","range","getMirrorValue","outputs","MatEndDate","_endValidator","MatDateRangeInput","focused","controlType","_ariaDescribedBy","separator","contains","shouldLabelFloat","empty","rangePicker","_rangePicker","wasMatchingStart","wasMatchingEnd","_revalidate","errorState","startEmpty","endEmpty","setDescribedByIds","ids","onContainerClick","_getInputMirrorValue","_shouldHidePlaceholders","_shouldHideSeparator","_shouldLabelFloat","_getAriaLabelledby","formField","_hasFloatingLabel","_labelId","_updateFocus","ControlContainer","MatDateRangePicker","MatDatepickerApply","_applySelection","MatDatepickerCancel","MatDatepickerActions","_portal","_template","isAttached","detach","BasePortalOutlet","DOCUMENT","defer","MatDialogConfig","role","disableClose","width","height","maxWidth","data","ariaDescribedBy","ariaLabelledBy","autoFocus","closeOnNavigation","matDialogAnimations","dialogContainer","throwMatDialogContentAlreadyAttachedError","_MatDialogContainerBase","_focusTrapFactory","_document","_config","_interactivityChecker","_animationStateChanged","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","attachDomPortal","_portalOutlet","hasAttached","_ariaLabelledBy","_initializeWithAttachedContent","_setupFocusTrap","_capturePreviouslyFocusedElement","attachComponentPortal","attachTemplatePortal","_recaptureFocus","_containsFocus","_trapFocus","_forceFocus","isFocusable","removeAttribute","_focusByCssSelector","elementToFocus","_focusTrap","focusInitialElementWhenReady","focusedSuccessfully","_focusDialogContainer","previousElement","activeElement","body","destroy","FocusTrapFactory","InteractivityChecker","MatDialogContainer","_state","_onAnimationDone","toState","totalTime","_onAnimationStart","Default","MatDialogRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","clearTimeout","_closeFallbackTimeout","_finishDialogClose","_result","componentInstance","_closeDialogVia","dialogResult","detachBackdrop","afterOpened","afterClosed","beforeClosed","_getPositionStrategy","left","right","top","bottom","updateSize","addPanelClass","classes","removePanelClass","getState","interactionType","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","_MatDialogBase","_defaultOptions","_parentDialog","_overlayContainer","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","_dialogAnimatingOpen","afterAllClosed","openDialogs","_getAfterAllClosed","componentOrTemplateRef","_applyConfigDefaults","getDialogById","_lastDialogRef","_createOverlay","_attachDialogContainer","animationStateSubscription","dialogAnimationEvent","_animationStateSubscriptions","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","closeAll","_closeDialogs","dialog","overlayConfig","_getOverlayConfig","dialogConfig","minWidth","minHeight","maxHeight","disposeOnNavigation","userInjector","viewContainerRef","containerPortal","componentFactoryResolver","containerRef","$implicit","_createInjector","contentRef","indexOf","overlayContainer","getContainerElement","parentElement","siblings","sibling","hasAttribute","dialogs","OverlayContainer","Type","MatDialog","location","defaultOptions","parentDialog","animationMode","Location","dialogElementUid","MatDialogClose","_dialog","getClosestDialog","proxiedChange","_onButtonClick","screenX","screenY","_matDialogClose","MatDialogTitle","_dialogRef","MatDialogContent","MatDialogActions","ContentChildren","coerceNumberProperty","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioChange","MAT_RADIO_GROUP","_MatRadioGroupBase","_changeDetector","_value","_labelPosition","onTouched","_updateRadioButtonNames","v","_markRadiosForCheck","_updateSelectedRadioFromValue","_checkSelectedRadioButton","_touch","_radios","radio","_markForCheck","isAlreadySelected","descendants","MatRadioButtonBase","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","_radioDispatcher","_providerOverride","_removeUniqueSelectionListener","_noopAnimations","listen","newCheckedState","notify","_setDisabled","_onInputInteraction","groupValueChanged","UniqueSelectionDispatcher","changeDetector","focusMonitor","radioDispatcher","providerOverride"],"sourceRoot":"webpack:///"}